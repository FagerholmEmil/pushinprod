{
  "/Users/matheus/Desktop/pushinprod/repos/lucio/next-env.d.ts": {
    "source": "/// <reference types=\"next\" />\n/// <reference types=\"next/image-types/global\" />\n\n// NOTE: This file should not be edited\n// see https://nextjs.org/docs/basic-features/typescript for more information.\n",
    "dependencies": []
  },
  "/Users/matheus/Desktop/pushinprod/repos/lucio/next.config.mjs": {
    "source": "import { env } from './src/env/server.mjs'\n\n/**\n * Don't be scared of the generics here.\n * All they do is to give us autocompletion when using this.\n *\n * @template {import('next').NextConfig} T\n * @param {T} config - A generic parameter that flows through to the return type\n * @constraint {{import('next').NextConfig}}\n */\nfunction defineNextConfig(config) {\n\treturn config\n}\n\nexport default defineNextConfig({\n\treactStrictMode: true,\n\tswcMinify: true,\n\t// Next.js i18n docs: https://nextjs.org/docs/advanced-features/i18n-routing\n\ti18n: {\n\t\tlocales: ['en'],\n\t\tdefaultLocale: 'en'\n\t},\n\timages: {\n\t\tdomains: ['avatars.githubusercontent.com']\n\t}\n})\n",
    "dependencies": []
  },
  "/Users/matheus/Desktop/pushinprod/repos/lucio/postcss.config.cjs": {
    "source": "module.exports = {\n\tplugins: {\n\t\ttailwindcss: {},\n\t\tautoprefixer: {}\n\t}\n}\n",
    "dependencies": []
  },
  "/Users/matheus/Desktop/pushinprod/repos/lucio/src/components/button/index.tsx": {
    "source": "import React from 'react'\n\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n\tvariant?: string\n\tchildren: React.ReactNode\n}\n\nconst Button: React.FC<ButtonProps> = ({ children, ...props }) => {\n\treturn (\n\t\t<button\n\t\t\t{...props}\n\t\t\tclassName=\"rounded-md bg-clr-accent px-4 py-1.5 text-sm text-white transition-opacity hover:opacity-90\"\n\t\t>\n\t\t\t{children}\n\t\t</button>\n\t)\n}\n\nexport default Button\n",
    "dependencies": [
      "react"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/lucio/src/components/classroom/ClassroomCard/Chip.tsx": {
    "source": "import React from 'react'\nimport { Icon as IconsType } from 'react-feather'\n\ninterface Props {\n\tIcon?: IconsType\n\tchildren: React.ReactNode\n}\n\nconst Chip: React.FC<Props> = ({ Icon, children }) => {\n\treturn (\n\t\t<span className=\"m-0 flex w-max items-center rounded-lg bg-gray-800/30 py-1 px-2 text-xs font-normal text-white\">\n\t\t\t{Icon && <Icon className=\"mr-1 h-3 w-3 flex-shrink-0\" />}\n\t\t\t{children}\n\t\t</span>\n\t)\n}\n\nexport default Chip\n",
    "dependencies": [
      "react",
      "react-feather"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/lucio/src/components/classroom/ClassroomCard/index.module.scss": {
    "source": ".card {\n\tbackground: rgba(255, 255, 255, 0.25);\n\tbox-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);\n\tbackdrop-filter: blur(4.5px);\n\t-webkit-backdrop-filter: blur(4.5px);\n\tborder-radius: 24px;\n\tborder: 1px solid rgba(255, 255, 255, 0.18);\n\twidth: 240px;\n\theight: 160px;\n}\n",
    "dependencies": []
  },
  "/Users/matheus/Desktop/pushinprod/repos/lucio/src/components/classroom/ClassroomCard/index.tsx": {
    "source": "import React from 'react'\nimport { inferQueryOutput } from '@/utils/trpc'\nimport styles from './index.module.scss'\nimport Link from 'next/link'\nimport Chip from './Chip'\nimport { Book, Link as LinkIcon, Code, Inbox, MapPin, Lock } from 'react-feather'\n\ninterface ClassroomCardProps {\n\tclassroom: inferQueryOutput<'classrooms.getAll'>[number]\n}\n\nconst ClassroomCard: React.FC<ClassroomCardProps> = ({\n\tclassroom: { name, id, code, mainColor, secondaryColor, privacy, _count }\n}) => {\n\treturn (\n\t\t<Link href={`/classes/${id}`} passHref={true}>\n\t\t\t<a>\n\t\t\t\t<div className=\"group relative cursor-pointer overflow-hidden rounded-2xl bg-gradient-to-br text-white shadow-lg transition-colors\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"absolute -inset-12 transition-all group-hover:inset-0\"\n\t\t\t\t\t\tstyle={{ backgroundImage: `linear-gradient(125deg, ${mainColor},${secondaryColor}` }}\n\t\t\t\t\t></div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={`relative z-50 flex min-h-[200px] w-full flex-col bg-clr-bg/10 p-4 transition hover:bg-clr-bg/20 md:py-5 lg:h-80`}\n\t\t\t\t\t>\n\t\t\t\t\t\t<p className=\"text-two-line lg:text-five-line overflow-hidden text-ellipsis break-words font-serif text-2xl font-black text-white sm:text-3xl\">\n\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p className=\"font-serif text-sm font-medium\">{_count.members} members</p>\n\t\t\t\t\t\t<div className=\"mt-auto flex flex-wrap gap-1\">\n\t\t\t\t\t\t\t<Chip Icon={MapPin}>Harvard</Chip>\n\t\t\t\t\t\t\t<Chip Icon={Code}>Programing</Chip>\n\t\t\t\t\t\t\t<Chip Icon={privacy === 'OPEN' ? Book : privacy === 'INVITE' ? Inbox : Lock}>\n\t\t\t\t\t\t\t\t{privacy}\n\t\t\t\t\t\t\t</Chip>\n\t\t\t\t\t\t\t<Chip Icon={LinkIcon}>{code}</Chip>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</a>\n\t\t</Link>\n\t)\n}\n\nexport default ClassroomCard\n",
    "dependencies": [
      "react",
      "@/utils/trpc",
      "./index.module.scss",
      "next/link",
      "./Chip",
      "react-feather"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/lucio/src/components/classroom/ClassroomList.tsx": {
    "source": "import React from 'react'\nimport { inferQueryOutput } from '@/utils/trpc'\nimport ClassroomCard from './ClassroomCard'\n\ninterface ClassroomListProps {\n\tclassrooms: inferQueryOutput<'classrooms.getAll'>\n}\n\nconst ClassroomList: React.FC<ClassroomListProps> = ({ classrooms }) => {\n\treturn (\n\t\t<div className=\"grid grid-cols-1 gap-3 p-8 pt-0 sm:grid-cols-2 md:gap-4 lg:grid-cols-3 lg:gap-6 xl:grid-cols-4 2xl:grid-cols-5\">\n\t\t\t{classrooms.map((classroom) => (\n\t\t\t\t<ClassroomCard key={classroom.id} classroom={classroom} />\n\t\t\t))}\n\t\t</div>\n\t)\n}\n\nexport default ClassroomList\n",
    "dependencies": [
      "react",
      "@/utils/trpc",
      "./ClassroomCard"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/lucio/src/components/classroom/Navbar.tsx": {
    "source": "import React, { useId, useState } from 'react'\nimport Button from '@/components/button'\nimport { useRouter } from 'next/router'\nimport { trpc } from '@/utils/trpc'\n\nconst Navbar: React.FC = ({}) => {\n\tconst id = useId()\n\tconst router = useRouter()\n\tconst [query, setQuery] = useState('')\n\tconst joinClassroomMutation = trpc.useMutation('classrooms.joinClassroom')\n\n\tfunction joinClass() {\n\t\tconsole.log('hej')\n\n\t\tconst code = prompt('Please enter class code')\n\t\tif (!code) return\n\n\t\tjoinClassroomMutation.mutate(\n\t\t\t{ code },\n\t\t\t{\n\t\t\t\tonSuccess(res) {\n\t\t\t\t\tconsole.log('res: ', res)\n\t\t\t\t},\n\t\t\t\tonError() {\n\t\t\t\t\talert('shit hit the fan, make better req')\n\t\t\t\t}\n\t\t\t}\n\t\t)\n\t}\n\n\treturn (\n\t\t<div className=\"m-4 flex items-center justify-between gap-4 border-b pb-2 sm:mx-8\">\n\t\t\t<label\n\t\t\t\thtmlFor={id}\n\t\t\t\tclassName=\"max-w-md flex-1 cursor-text rounded-md border bg-clr-bg-grayed p-2 focus-within:border-clr-accent focus-within:text-clr-accent\"\n\t\t\t>\n\t\t\t\t<input\n\t\t\t\t\tplaceholder=\"search for a class...\"\n\t\t\t\t\tclassName=\"w-full bg-transparent outline-none placeholder:text-clr-text-grayed\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tid={id}\n\t\t\t\t\tname=\"classroom-search-input\"\n\t\t\t\t\tvalue={query}\n\t\t\t\t\tonChange={(e) => setQuery(e.target.value)}\n\t\t\t\t/>\n\t\t\t</label>\n\t\t\t<div className=\"flex gap-4\">\n\t\t\t\t<Button>Create class</Button>\n\t\t\t\t<Button onClick={joinClass}>Join class</Button>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Navbar\n",
    "dependencies": [
      "react",
      "@/components/button",
      "next/router",
      "@/utils/trpc"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/lucio/src/components/layout/index.tsx": {
    "source": "import React from 'react'\nimport Navbar from '@/components/navbar'\n\ninterface LayoutProps {\n\tchildren: React.ReactNode\n}\n\nconst Layout: React.FC<LayoutProps> = ({ children }) => {\n\treturn (\n\t\t<>\n\t\t\t<Navbar />\n\t\t\t{children}\n\t\t</>\n\t)\n}\n\nexport default Layout\n",
    "dependencies": [
      "react",
      "@/components/navbar"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/lucio/src/components/navbar/NavbarLink.tsx": {
    "source": "import React from 'react'\nimport Link from 'next/link'\n\ninterface NavbarLinkProps {\n\thref: string\n\tchildren: React.ReactNode\n}\n\nconst NavbarLink: React.FC<NavbarLinkProps> = ({ href, children }) => {\n\treturn (\n\t\t<Link href={href}>\n\t\t\t<a className=\"text-sm transition-colors hover:brightness-75\">{children}</a>\n\t\t</Link>\n\t)\n}\n\nexport default NavbarLink\n",
    "dependencies": [
      "react",
      "next/link"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/lucio/src/components/navbar/index.tsx": {
    "source": "import React from 'react'\nimport { useSession } from 'next-auth/react'\nimport NavbarLink from './NavbarLink'\nimport Image from 'next/image'\nimport Link from 'next/link'\n\nconst Navbar: React.FC = ({}) => {\n\tconst { data: session } = useSession()\n\n\treturn (\n\t\t<nav className=\"flex items-center justify-between bg-clr-bg-grayed-dark p-4 sm:px-8\">\n\t\t\t<Link href=\"/\">\n\t\t\t\t<a className=\"text-4xl font-black tracking-wider\">LucioCode</a>\n\t\t\t</Link>\n\t\t\t<div className=\"flex items-center gap-4\">\n\t\t\t\t<NavbarLink href=\"/classrooms\">Classrooms</NavbarLink>\n\t\t\t\t<NavbarLink href=\"/problems\">Problems</NavbarLink>\n\t\t\t\t{session?.user && (\n\t\t\t\t\t<Link href=\"/profile\" passHref={true}>\n\t\t\t\t\t\t<a className=\"relative block h-10 w-10\">\n\t\t\t\t\t\t\t<Image layout=\"fill\" src={session.user.image as string} alt=\"\" className=\"rounded-full\" />\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</Link>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</nav>\n\t)\n}\n\nexport default Navbar\n",
    "dependencies": [
      "react",
      "next-auth/react",
      "./NavbarLink",
      "next/image",
      "next/link"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/lucio/src/env/client.mjs": {
    "source": "// @ts-check\nimport { clientEnv, clientSchema } from './schema.mjs'\n\nconst _clientEnv = clientSchema.safeParse(clientEnv)\n\nexport const formatErrors = (\n\t/** @type {import('zod').ZodFormattedError<Map<string,string>,string>} */\n\terrors\n) =>\n\tObject.entries(errors)\n\t\t.map(([name, value]) => {\n\t\t\tif (value && '_errors' in value) return `${name}: ${value._errors.join(', ')}\\n`\n\t\t})\n\t\t.filter(Boolean)\n\nif (_clientEnv.success === false) {\n\tconsole.error('❌ Invalid environment variables:\\n', ...formatErrors(_clientEnv.error.format()))\n\tthrow new Error('Invalid environment variables')\n}\n\n/**\n * Validate that client-side environment variables are exposed to the client.\n */\nfor (let key of Object.keys(_clientEnv.data)) {\n\tif (!key.startsWith('NEXT_PUBLIC_')) {\n\t\tconsole.warn(`❌ Invalid public environment variable name: ${key}. It must begin with 'NEXT_PUBLIC_'`)\n\n\t\tthrow new Error('Invalid public environment variable name')\n\t}\n}\n\nexport const env = _clientEnv.data\n",
    "dependencies": []
  },
  "/Users/matheus/Desktop/pushinprod/repos/lucio/src/env/schema.mjs": {
    "source": "// @ts-check\nimport { z } from 'zod'\n\n/**\n * Specify your server-side environment variables schema here.\n * This way you can ensure the app isn't built with invalid env vars.\n */\nexport const serverSchema = z.object({\n\tDATABASE_URL: z.string().url(),\n\tNODE_ENV: z.enum(['development', 'test', 'production']),\n\tNEXTAUTH_SECRET: z.string(),\n\tNEXTAUTH_URL: z.string().url(),\n\tGITHUB_CLIENT_ID: z.string(),\n\tGITHUB_CLIENT_SECRET: z.string()\n})\n\n/**\n * Specify your client-side environment variables schema here.\n * This way you can ensure the app isn't built with invalid env vars.\n * To expose them to the client, prefix them with `NEXT_PUBLIC_`.\n */\nexport const clientSchema = z.object({\n\t// NEXT_PUBLIC_BAR: z.string(),\n})\n\n/**\n * You can't destruct `process.env` as a regular object, so you have to do\n * it manually here. This is because Next.js evaluates this at build time,\n * and only used environment variables are included in the build.\n * @type {{ [k in keyof z.infer<typeof clientSchema>]: z.infer<typeof clientSchema>[k] | undefined }}\n */\nexport const clientEnv = {\n\t// NEXT_PUBLIC_BAR: process.env.NEXT_PUBLIC_BAR,\n}\n",
    "dependencies": []
  },
  "/Users/matheus/Desktop/pushinprod/repos/lucio/src/env/server.mjs": {
    "source": "// @ts-check\n/**\n * This file is included in `/next.config.mjs` which ensures the app isn't built with invalid env vars.\n * It has to be a `.mjs`-file to be imported there.\n */\nimport { serverSchema } from './schema.mjs'\nimport { env as clientEnv, formatErrors } from './client.mjs'\n\nconst _serverEnv = serverSchema.safeParse(process.env)\n\nif (_serverEnv.success === false) {\n\tconsole.error('❌ Invalid environment variables:\\n', ...formatErrors(_serverEnv.error.format()))\n\tthrow new Error('Invalid environment variables')\n}\n\n/**\n * Validate that server-side environment variables are not exposed to the client.\n */\nfor (let key of Object.keys(_serverEnv.data)) {\n\tif (key.startsWith('NEXT_PUBLIC_')) {\n\t\tconsole.warn('❌ You are exposing a server-side env-variable:', key)\n\n\t\tthrow new Error('You are exposing a server-side env-variable')\n\t}\n}\n\nexport const env = { ..._serverEnv.data, ...clientEnv }\n",
    "dependencies": []
  },
  "/Users/matheus/Desktop/pushinprod/repos/lucio/src/pages/_app.tsx": {
    "source": "// src/pages/_app.tsx\nimport { httpBatchLink } from '@trpc/client/links/httpBatchLink'\nimport { loggerLink } from '@trpc/client/links/loggerLink'\nimport { withTRPC } from '@trpc/next'\nimport { SessionProvider } from 'next-auth/react'\nimport superjson from 'superjson'\nimport type { AppType } from 'next/app'\nimport type { AppRouter } from '../server/router'\nimport type { Session } from 'next-auth'\nimport '../styles/globals.scss'\nimport Layout from '@/components/layout'\n\nconst MyApp: AppType<{ session: Session | null }> = ({ Component, pageProps: { session, ...pageProps } }) => {\n\treturn (\n\t\t<SessionProvider session={session}>\n\t\t\t<Layout>\n\t\t\t\t<Component {...pageProps} />\n\t\t\t</Layout>\n\t\t</SessionProvider>\n\t)\n}\n\nconst getBaseUrl = () => {\n\tif (typeof window !== 'undefined') return '' // browser should use relative url\n\tif (process.env.VERCEL_URL) return `https://${process.env.VERCEL_URL}` // SSR should use vercel url\n\treturn `http://localhost:${process.env.PORT ?? 3000}` // dev SSR should use localhost\n}\n\nexport default withTRPC<AppRouter>({\n\tconfig({ ctx }) {\n\t\t/**\n\t\t * If you want to use SSR, you need to use the server's full URL\n\t\t * @link https://trpc.io/docs/ssr\n\t\t */\n\t\tconst url = `${getBaseUrl()}/api/trpc`\n\n\t\treturn {\n\t\t\tlinks: [\n\t\t\t\tloggerLink({\n\t\t\t\t\tenabled: (opts) =>\n\t\t\t\t\t\tprocess.env.NODE_ENV === 'development' ||\n\t\t\t\t\t\t(opts.direction === 'down' && opts.result instanceof Error)\n\t\t\t\t}),\n\t\t\t\thttpBatchLink({ url })\n\t\t\t],\n\t\t\turl,\n\t\t\ttransformer: superjson\n\t\t\t/**\n\t\t\t * @link https://react-query.tanstack.com/reference/QueryClient\n\t\t\t */\n\t\t\t// queryClientConfig: { defaultOptions: { queries: { staleTime: 60 } } },\n\n\t\t\t// To use SSR properly you need to forward the client's headers to the server\n\t\t\t// headers: () => {\n\t\t\t//   if (ctx?.req) {\n\t\t\t//     const headers = ctx?.req?.headers;\n\t\t\t//     delete headers?.connection;\n\t\t\t//     return {\n\t\t\t//       ...headers,\n\t\t\t//       \"x-ssr\": \"1\",\n\t\t\t//     };\n\t\t\t//   }\n\t\t\t//   return {};\n\t\t\t// }\n\t\t}\n\t},\n\t/**\n\t * @link https://trpc.io/docs/ssr\n\t */\n\tssr: false\n})(MyApp)\n",
    "dependencies": [
      "@trpc/client/links/httpBatchLink",
      "@trpc/client/links/loggerLink",
      "@trpc/next",
      "next-auth/react",
      "superjson",
      "next/app",
      "../server/router",
      "next-auth",
      "../styles/globals.scss",
      "@/components/layout"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/lucio/src/pages/api/auth/[...nextauth].ts": {
    "source": "import NextAuth, { type NextAuthOptions } from 'next-auth'\nimport GithubProvider from 'next-auth/providers/github'\n\n// Prisma adapter for NextAuth, optional and can be removed\nimport { PrismaAdapter } from '@next-auth/prisma-adapter'\nimport { prisma } from '../../../server/db/client'\nimport { env } from '../../../env/server.mjs'\n\nexport const authOptions: NextAuthOptions = {\n\tadapter: PrismaAdapter(prisma),\n\t// Include user.id on session\n\tcallbacks: {\n\t\tsession({ session, user }) {\n\t\t\tconsole.log('callback')\n\t\t\tconsole.log(session)\n\t\t\tconsole.log(user)\n\n\t\t\tif (session.user) {\n\t\t\t\tsession.user.id = user.id\n\t\t\t}\n\t\t\treturn session\n\t\t}\n\t},\n\t// Configure one or more authentication providers\n\tproviders: [\n\t\tGithubProvider({\n\t\t\tclientId: env.GITHUB_CLIENT_ID,\n\t\t\tclientSecret: env.GITHUB_CLIENT_SECRET\n\t\t})\n\t\t// ...add more providers here\n\t]\n}\n\nexport default NextAuth(authOptions)\n",
    "dependencies": [
      "next-auth",
      "next-auth/providers/github",
      "@next-auth/prisma-adapter",
      "../../../server/db/client",
      "../../../env/server.mjs"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/lucio/src/pages/api/examples.ts": {
    "source": "// src/pages/api/examples.ts\nimport type { NextApiRequest, NextApiResponse } from 'next'\nimport { prisma } from '../../server/db/client'\n\nconst examples = async (req: NextApiRequest, res: NextApiResponse) => {\n\tconst examples = await prisma.example.findMany()\n\tres.status(200).json(examples)\n}\n\nexport default examples\n",
    "dependencies": [
      "next",
      "../../server/db/client"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/lucio/src/pages/api/restricted.ts": {
    "source": "// Example of a restricted endpoint that only authenticated users can access from https://next-auth.js.org/getting-started/example\n\nimport { NextApiRequest, NextApiResponse } from 'next'\nimport { getServerAuthSession } from '../../server/common/get-server-auth-session'\n\nconst restricted = async (req: NextApiRequest, res: NextApiResponse) => {\n\tconst session = await getServerAuthSession({ req, res })\n\n\tif (session) {\n\t\tres.send({\n\t\t\tcontent: 'This is protected content. You can access this content because you are signed in.'\n\t\t})\n\t} else {\n\t\tres.send({\n\t\t\terror: 'You must be signed in to view the protected content on this page.'\n\t\t})\n\t}\n}\n\nexport default restricted\n",
    "dependencies": [
      "next",
      "../../server/common/get-server-auth-session"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/lucio/src/pages/api/trpc/[trpc].ts": {
    "source": "// src/pages/api/trpc/[trpc].ts\nimport { createNextApiHandler } from '@trpc/server/adapters/next'\nimport { env } from '../../../env/server.mjs'\nimport { appRouter } from '../../../server/router'\nimport { createContext } from '../../../server/router/context'\n\n// export API handler\nexport default createNextApiHandler({\n\trouter: appRouter,\n\tcreateContext,\n\tonError:\n\t\tenv.NODE_ENV === 'development'\n\t\t\t? ({ path, error }) => {\n\t\t\t\t\tconsole.error(`❌ tRPC failed on ${path}: ${error}`)\n\t\t\t  }\n\t\t\t: undefined\n})\n",
    "dependencies": [
      "@trpc/server/adapters/next",
      "../../../env/server.mjs",
      "../../../server/router",
      "../../../server/router/context"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/lucio/src/pages/classrooms/index.tsx": {
    "source": "import React from 'react'\nimport type { NextPage } from 'next'\nimport { trpc } from '@/utils/trpc'\nimport ClassroomList from '@/components/classroom/ClassroomList'\nimport Navbar from '@/components/classroom/Navbar'\n\nconst Classroom: NextPage = () => {\n\tconst { data: classrooms } = trpc.useQuery(['classrooms.getAll'])\n\treturn (\n\t\t<div>\n\t\t\t<Navbar />\n\t\t\t{classrooms && <ClassroomList classrooms={classrooms} />}\n\t\t\t<pre className=\"mx-auto w-96 bg-green-100 text-sm\">{JSON.stringify(classrooms, null, 2)}</pre>\n\t\t</div>\n\t)\n}\n\nexport default Classroom\n",
    "dependencies": [
      "react",
      "next",
      "@/utils/trpc",
      "@/components/classroom/ClassroomList",
      "@/components/classroom/Navbar"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/lucio/src/pages/index.tsx": {
    "source": "import type { NextPage } from 'next'\nimport Head from 'next/head'\nimport { trpc } from '../utils/trpc'\nimport { useSession, signIn, signOut } from 'next-auth/react'\n\nconst Home: NextPage = () => {\n\tconst hello = trpc.useQuery(['me.me'])\n\tconst { data: session, status } = useSession()\n\n\treturn (\n\t\t<>\n\t\t\t<Head>\n\t\t\t\t<title>Create T3 App</title>\n\t\t\t\t<meta name=\"description\" content=\"Generated by create-t3-app\" />\n\t\t\t\t<link rel=\"icon\" href=\"/favicon.ico\" />\n\t\t\t</Head>\n\t\t\t<pre className=\"mx-auto w-96 bg-green-100 text-sm\">{JSON.stringify(hello, null, 2)}</pre>\n\t\t\t<pre className=\"mx-auto w-96 bg-red-100 text-sm\">{JSON.stringify(session, null, 2)}</pre>\n\t\t\t<pre className=\"mx-auto w-96 bg-blue-100 text-sm\">{JSON.stringify(status, null, 2)}</pre>\n\n\t\t\t<button className=\"bg-green-200\" onClick={() => signIn()}>\n\t\t\t\tSign in\n\t\t\t</button>\n\t\t\t<button className=\"bg-red-200\" onClick={() => signOut()}>\n\t\t\t\tSign out\n\t\t\t</button>\n\n\t\t\t<div className=\"h-96 w-96 bg-clr-bg-grayed-dark\">hejhej</div>\n\t\t</>\n\t)\n}\n\nexport default Home\n",
    "dependencies": [
      "next",
      "next/head",
      "../utils/trpc",
      "next-auth/react"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/lucio/src/pages/problems/index.tsx": {
    "source": "import React from 'react'\nimport type { NextPage } from 'next'\nimport { trpc } from '@/utils/trpc'\n\nconst Problems: NextPage = () => {\n\tconst { data: problems } = trpc.useQuery(['problems.getAll'])\n\treturn (\n\t\t<>\n\t\t\t<div className=\"relative min-w-0 !overflow-y-visible overflow-x-scroll rounded-md border border-clr-border\">\n\t\t\t\t<table className=\"my-0 min-w-full divide-y divide-clr-border rounded-md text-center text-xs md:text-sm\">\n\t\t\t\t\t<thead className=\"h-9\">\n\t\t\t\t\t\t<tr className=\"divide-x divide-clr-border\">\n\t\t\t\t\t\t\t<th className=\"h-full px-2\">Kompetens</th>\n\t\t\t\t\t\t\t<th className=\"h-full px-2\">Fråga</th>\n\t\t\t\t\t\t\t<th className=\"h-full px-2\">Svar</th>\n\t\t\t\t\t\t\t<th className=\"h-full px-2\">Nivå (0-3)</th>\n\t\t\t\t\t\t\t<th className=\"h-full px-2\">Video</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody className=\"divide-y\">\n\t\t\t\t\t\t<tr className=\"h-9 divide-x divide-clr-border\">\n\t\t\t\t\t\t\t<td className=\"relative h-full\">\n\t\t\t\t\t\t\t\t<div className=\"peer flex h-full min-w-[16rem] max-w-lg items-center justify-center overflow-hidden text-ellipsis whitespace-nowrap px-2\">\n\t\t\t\t\t\t\t\t\thej\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td className=\"relative h-full\">\n\t\t\t\t\t\t\t\t<div className=\"peer flex h-full min-w-[16rem] max-w-lg items-center justify-center overflow-hidden text-ellipsis whitespace-nowrap px-2\">\n\t\t\t\t\t\t\t\t\thej\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td className=\"relative h-full\">\n\t\t\t\t\t\t\t\t<div className=\"peer flex h-full min-w-[16rem] max-w-lg items-center justify-center overflow-hidden text-ellipsis whitespace-nowrap px-2\">\n\t\t\t\t\t\t\t\t\thej\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td className=\"relative h-full\">\n\t\t\t\t\t\t\t\t<div className=\"peer flex h-full min-w-[16rem] max-w-lg items-center justify-center overflow-hidden text-ellipsis whitespace-nowrap px-2\">\n\t\t\t\t\t\t\t\t\thej\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td className=\"relative h-full\">\n\t\t\t\t\t\t\t\t<div className=\"peer flex h-full min-w-[16rem] max-w-lg items-center justify-center overflow-hidden text-ellipsis whitespace-nowrap px-2\">\n\t\t\t\t\t\t\t\t\thej\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t\t<pre className=\"mx-auto w-96 bg-green-100 text-sm\">{JSON.stringify(problems, null, 2)}</pre>\n\t\t</>\n\t)\n}\n\nexport default Problems\n",
    "dependencies": [
      "react",
      "next",
      "@/utils/trpc"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/lucio/src/server/common/get-server-auth-session.ts": {
    "source": "// Wrapper for unstable_getServerSession https://next-auth.js.org/configuration/nextjs\n\nimport type { GetServerSidePropsContext } from 'next'\nimport { unstable_getServerSession } from 'next-auth'\nimport { authOptions as nextAuthOptions } from '../../pages/api/auth/[...nextauth]'\n\n// Next API route example - /pages/api/restricted.ts\nexport const getServerAuthSession = async (ctx: {\n\treq: GetServerSidePropsContext['req']\n\tres: GetServerSidePropsContext['res']\n}) => {\n\treturn await unstable_getServerSession(ctx.req, ctx.res, nextAuthOptions)\n}\n",
    "dependencies": [
      "next",
      "next-auth",
      "../../pages/api/auth/[...nextauth]"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/lucio/src/server/db/client.ts": {
    "source": "// src/server/db/client.ts\nimport { PrismaClient } from '@prisma/client'\nimport { env } from '../../env/server.mjs'\n\ndeclare global {\n\t// eslint-disable-next-line no-var\n\tvar prisma: PrismaClient | undefined\n}\n\nexport const prisma =\n\tglobal.prisma ||\n\tnew PrismaClient({\n\t\tlog: env.NODE_ENV === 'development' ? ['query', 'error', 'warn'] : ['error']\n\t})\n\nif (env.NODE_ENV !== 'production') {\n\tglobal.prisma = prisma\n}\n",
    "dependencies": [
      "@prisma/client",
      "../../env/server.mjs"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/lucio/src/server/problems/index.ts": {
    "source": "import { Problem } from './problem'\nimport path from 'path'\nimport fs from 'fs'\n\nexport async function getProblems(): Promise<Problem[]> {\n\tconsole.log(path.join(process.cwd(), './list'))\n\tconst files = fs.readdirSync(path.join(process.cwd(), './src/server/problems/list'))\n\n\tconsole.log(files) // array of file names\n\n\tfor (let i = 0; i < files.length; i++) {\n\t\tconst folderName = files[i]\n\t\tconsole.log(folderName)\n\n\t\tconst markdown = fs.readFileSync(path.join(__dirname, `./list/${folderName}/markdown.md`), 'utf8')\n\t\tconst { default: test } = await import('./list/simple-addition/problem')\n\t\tconsole.log('we made it here noobs')\n\t\tconsole.log(markdown)\n\t\tconsole.log(test)\n\t}\n\treturn []\n}\n\n// export const problems: Problem[] =\n",
    "dependencies": [
      "./problem",
      "path",
      "fs"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/lucio/src/server/problems/list/simple-addition/problem.ts": {
    "source": "import { Problem, PROBLEM_DIFFICULTY } from '../../problem'\n\nconst problem: Problem = {\n\tname: 'Simple addition',\n\tdifficulty: PROBLEM_DIFFICULTY.EASY\n}\n\nexport default problem\n",
    "dependencies": [
      "../../problem"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/lucio/src/server/problems/problem.d.ts": {
    "source": "enum PROBLEM_DIFFICULTY {\n\tEASY,\n\tMEDIUM,\n\tHARD\n}\n\nexport interface Problem {\n\tname: string\n\tdifficulty: PROBLEM_DIFFICULTY\n}\n",
    "dependencies": []
  },
  "/Users/matheus/Desktop/pushinprod/repos/lucio/src/server/router/classrooms.ts": {
    "source": "import { createProtectedRouter } from './context'\nimport { z } from 'zod'\n\nexport const classroomsRouter = createProtectedRouter()\n\t.query('getAll', {\n\t\tasync resolve({ ctx }) {\n\t\t\treturn await ctx.prisma.classroom.findMany({\n\t\t\t\twhere: {\n\t\t\t\t\tmembers: {\n\t\t\t\t\t\tsome: {\n\t\t\t\t\t\t\tuserId: ctx.session.user.id\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tinclude: {\n\t\t\t\t\t_count: {\n\t\t\t\t\t\tselect: {\n\t\t\t\t\t\t\tmembers: true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\torderBy: {\n\t\t\t\t\tcreatedAt: 'desc'\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n\t.mutation('joinClassroom', {\n\t\tinput: z.object({\n\t\t\tcode: z.string()\n\t\t}),\n\t\tresolve: async ({ ctx, input }) => {\n\t\t\tconst classroom = await ctx.prisma.classroom.findUniqueOrThrow({\n\t\t\t\twhere: { code: input.code },\n\t\t\t\tselect: {\n\t\t\t\t\tid: true\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tawait ctx.prisma.member.create({\n\t\t\t\tdata: {\n\t\t\t\t\tclassroomId: classroom.id,\n\t\t\t\t\tuserId: ctx.session.user.id\n\t\t\t\t}\n\t\t\t})\n\n\t\t\treturn classroom\n\t\t}\n\t})\n",
    "dependencies": [
      "./context",
      "zod"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/lucio/src/server/router/context.ts": {
    "source": "// src/server/router/context.ts\nimport * as trpc from '@trpc/server'\nimport * as trpcNext from '@trpc/server/adapters/next'\nimport { Session } from 'next-auth'\nimport { getServerAuthSession } from '../../server/common/get-server-auth-session'\nimport { prisma } from '../db/client'\n\ntype CreateContextOptions = {\n\tsession: Session | null\n}\n\n/** Use this helper for:\n * - testing, where we dont have to Mock Next.js' req/res\n * - trpc's `createSSGHelpers` where we don't have req/res\n **/\nexport const createContextInner = async (opts: CreateContextOptions) => {\n\treturn {\n\t\tsession: opts.session,\n\t\tprisma\n\t}\n}\n\n/**\n * This is the actual context you'll use in your router\n * @link https://trpc.io/docs/context\n **/\nexport const createContext = async (opts: trpcNext.CreateNextContextOptions) => {\n\tconst { req, res } = opts\n\n\t// Get the session from the server using the unstable_getServerSession wrapper function\n\tconst session = await getServerAuthSession({ req, res })\n\n\treturn await createContextInner({\n\t\tsession\n\t})\n}\n\ntype Context = trpc.inferAsyncReturnType<typeof createContext>\n\nexport const createRouter = () => trpc.router<Context>()\n\n/**\n * Creates a tRPC router that asserts all queries and mutations are from an authorized user. Will throw an unauthorized error if a user is not signed in.\n **/\nexport function createProtectedRouter() {\n\treturn createRouter().middleware(({ ctx, next }) => {\n\t\tif (!ctx.session || !ctx.session.user) {\n\t\t\tthrow new trpc.TRPCError({ code: 'UNAUTHORIZED' })\n\t\t}\n\t\treturn next({\n\t\t\tctx: {\n\t\t\t\t...ctx,\n\t\t\t\t// infers that `session` is non-nullable to downstream resolvers\n\t\t\t\tsession: { ...ctx.session, user: ctx.session.user }\n\t\t\t}\n\t\t})\n\t})\n}\n",
    "dependencies": [
      "@trpc/server",
      "@trpc/server/adapters/next",
      "next-auth",
      "../../server/common/get-server-auth-session",
      "../db/client"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/lucio/src/server/router/index.ts": {
    "source": "// src/server/router/index.ts\nimport { createRouter } from './context'\nimport superjson from 'superjson'\n\nimport { meRouter } from './me'\nimport { problemsRouter } from './problems'\nimport { classroomsRouter } from './classrooms'\nimport { protectedExampleRouter } from './protected-example-router'\n\nexport const appRouter = createRouter()\n\t.transformer(superjson)\n\t.merge('me.', meRouter)\n\t.merge('problems.', problemsRouter)\n\t.merge('classrooms.', classroomsRouter)\n\t.merge('auth.', protectedExampleRouter)\n\n// export type definition of API\nexport type AppRouter = typeof appRouter\n",
    "dependencies": [
      "./context",
      "superjson",
      "./me",
      "./problems",
      "./classrooms",
      "./protected-example-router"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/lucio/src/server/router/me.ts": {
    "source": "import { createRouter } from './context'\n// import { getProblems } from '../problems/index'\nexport const meRouter = createRouter().query('me', {\n\tasync resolve({ ctx }) {\n\t\tconst { session } = ctx\n\t\t// console.log('ok ok o k;;;;;;;;;')\n\t\t// const res = await getProblems()\n\t\t// console.log('end so it ended')\n\t\t// console.log(res)\n\n\t\t// await ctx.prisma.problem.createMany({\n\t\t// \tdata: [\n\t\t// \t\t{\n\t\t// \t\t\tdifficulty: 'EASY',\n\t\t// \t\t\tname: 'first ever problem',\n\t\t// \t\t\tmarkdown: `# Hello world \\nThis is the first problem ever to be seen by a human fr`\n\t\t// \t\t},\n\t\t// \t\t{\n\t\t// \t\t\tdifficulty: 'MEDIUM',\n\t\t// \t\t\tname: 'Phinking',\n\t\t// \t\t\tmarkdown: `# PHINK \\n every1 gotta try it homie`\n\t\t// \t\t},\n\t\t// \t\t{\n\t\t// \t\t\tdifficulty: 'EASY',\n\t\t// \t\t\tname: 'A problem ngl',\n\t\t// \t\t\tmarkdown: `# Wag1 \\nThis is the first problem ever to be seen by a human fr`\n\t\t// \t\t},\n\t\t// \t\t{\n\t\t// \t\t\tdifficulty: 'HARD',\n\t\t// \t\t\tname: 'lkandska dbkj abdjasb d',\n\t\t// \t\t\tmarkdown: `# Hello world \\nThis is the first problem ever to be seen by a human fr`\n\t\t// \t\t},\n\t\t// \t\t{\n\t\t// \t\t\tdifficulty: 'EASY',\n\t\t// \t\t\tname: 'a easy prblem',\n\t\t// \t\t\tmarkdown: `# Hello world \\nThis is the first problem ever to be seen by a human fr`\n\t\t// \t\t},\n\t\t// \t\t{\n\t\t// \t\t\tdifficulty: 'MEDIUM',\n\t\t// \t\t\tname: 'a medium problem',\n\t\t// \t\t\tmarkdown: `# Hello world \\nThis is the first problem ever to be seen by a human fr`\n\t\t// \t\t},\n\t\t// \t\t{\n\t\t// \t\t\tdifficulty: 'EASY',\n\t\t// \t\t\tname: 'can you even type, script?',\n\t\t// \t\t\tmarkdown: `# Hello world \\nThis is the first problem ever to be seen by a human fr`\n\t\t// \t\t}\n\t\t// \t]\n\t\t// })\n\n\t\tif (!session) return null\n\t\treturn await ctx.prisma.user.findMany({\n\t\t\twhere: {\n\t\t\t\tid: session.user?.id\n\t\t\t}\n\t\t})\n\t}\n})\n",
    "dependencies": [
      "./context"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/lucio/src/server/router/problems.ts": {
    "source": "import { createRouter } from './context'\n\nexport const problemsRouter = createRouter().query('getAll', {\n\tasync resolve({ ctx }) {\n\t\treturn await ctx.prisma.problem.findMany({})\n\t}\n})\n",
    "dependencies": [
      "./context"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/lucio/src/server/router/protected-example-router.ts": {
    "source": "import { createProtectedRouter } from './context'\n\n// Example router with queries that can only be hit if the user requesting is signed in\nexport const protectedExampleRouter = createProtectedRouter()\n\t.query('getSession', {\n\t\tresolve({ ctx }) {\n\t\t\treturn ctx.session\n\t\t}\n\t})\n\t.query('getSecretMessage', {\n\t\tresolve({ ctx }) {\n\t\t\treturn 'He who asks a question is a fool for five minutes; he who does not ask a question remains a fool forever.'\n\t\t}\n\t})\n",
    "dependencies": [
      "./context"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/lucio/src/styles/_themes.scss": {
    "source": ":root {\n\t--navbar-height: 72px;\n\t--accent: 34 102 255;\n\t--danger: 244 33 46;\n\t--bg: 0 0 0;\n\t--bg-grayed: 32 35 39;\n\t--bg-grayed-dark: 22 24 28;\n\t--text: 231 233 234;\n\t--text-grayed: 113 118 123;\n\t--border: 47 51 54;\n}\n\nhtml[data-theme='light'] {\n\t--bg: 255 255 255;\n\t--bg-grayed: 247 249 249;\n\t--bg-grayed-dark: 240 243 244;\n\t--text: 15 20 25;\n\t--text-grayed: 83 100 113;\n\t--border: 239 243 244;\n}\n\nhtml[data-theme='dark'] {\n\t--bg: 0 0 0;\n\t--bg-grayed: 32 35 39;\n\t--bg-grayed-dark: 22 24 28;\n\t--text: 231 233 234;\n\t--text-grayed: 113 118 123;\n\t--border: 47 51 54;\n}\n\nhtml[data-theme='dimmed'] {\n\t--bg: 21 32 43;\n\t--bg-grayed: 38 52 64;\n\t--bg-grayed-dark: 30 39 50;\n\t--text: 247 249 249;\n\t--text-grayed: 139 152 165;\n\t--border: 56 68 77;\n}\n",
    "dependencies": []
  },
  "/Users/matheus/Desktop/pushinprod/repos/lucio/src/styles/globals.scss": {
    "source": "@use 'themes';\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\nbody {\n\t@apply bg-clr-bg text-clr-text;\n}\n\n* {\n\t@apply border-clr-border;\n}\n",
    "dependencies": []
  },
  "/Users/matheus/Desktop/pushinprod/repos/lucio/src/types/next-auth.d.ts": {
    "source": "import { DefaultSession } from 'next-auth'\n\ndeclare module 'next-auth' {\n\t/**\n\t * Returned by `useSession`, `getSession` and received as a prop on the `SessionProvider` React Context\n\t */\n\tinterface Session {\n\t\tuser?: {\n\t\t\tid: string\n\t\t} & DefaultSession['user']\n\t}\n}\n",
    "dependencies": [
      "next-auth"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/lucio/src/utils/trpc.ts": {
    "source": "// src/utils/trpc.ts\nimport type { AppRouter } from '../server/router'\nimport { createReactQueryHooks } from '@trpc/react'\nimport type { inferProcedureOutput, inferProcedureInput } from '@trpc/server'\n\nexport const trpc = createReactQueryHooks<AppRouter>()\n\n/**\n * These are helper types to infer the input and output of query resolvers\n * @example type HelloOutput = inferQueryOutput<'hello'>\n */\nexport type inferQueryOutput<TRouteKey extends keyof AppRouter['_def']['queries']> = inferProcedureOutput<\n\tAppRouter['_def']['queries'][TRouteKey]\n>\n\nexport type inferQueryInput<TRouteKey extends keyof AppRouter['_def']['queries']> = inferProcedureInput<\n\tAppRouter['_def']['queries'][TRouteKey]\n>\n\nexport type inferMutationOutput<TRouteKey extends keyof AppRouter['_def']['mutations']> = inferProcedureOutput<\n\tAppRouter['_def']['mutations'][TRouteKey]\n>\n\nexport type inferMutationInput<TRouteKey extends keyof AppRouter['_def']['mutations']> = inferProcedureInput<\n\tAppRouter['_def']['mutations'][TRouteKey]\n>\n",
    "dependencies": [
      "../server/router",
      "@trpc/react",
      "@trpc/server"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/lucio/tailwind.config.cjs": {
    "source": "/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n\tcontent: ['./src/**/*.{js,ts,jsx,tsx}'],\n\ttheme: {\n\t\textend: {\n\t\t\tfontSize: {\n\t\t\t\t'10xl': ['9.5rem', '1'],\n\t\t\t\t'11xl': ['11rem', '1'],\n\t\t\t\t'12xl': ['13rem', '1'],\n\t\t\t\t'13xl': ['15rem', '1']\n\t\t\t},\n\t\t\tfontFamily: {\n\t\t\t\tinter: [\"'Inter'\", 'sans-serif']\n\t\t\t},\n\t\t\tcolors: {\n\t\t\t\t'clr-accent': 'rgb(var(--accent) / <alpha-value>)',\n\t\t\t\t'clr-carolina': '#1D9BF0',\n\t\t\t\t'clr-olive': '#00ba7c',\n\t\t\t\t'clr-success': '#00ba7c',\n\t\t\t\t'clr-candy-pink': '#f91880',\n\t\t\t\t'clr-danger': 'rgb(244, 33, 46)',\n\t\t\t\t'clr-bg': 'rgb(var(--bg) / <alpha-value>)',\n\t\t\t\t'clr-bg-grayed': 'rgb(var(--bg-grayed) / <alpha-value>)',\n\t\t\t\t'clr-bg-grayed-dark': 'rgb(var(--bg-grayed-dark) / <alpha-value>)',\n\t\t\t\t'clr-text': 'rgb(var(--text) / <alpha-value>)',\n\t\t\t\t'clr-text-grayed': 'rgb(var(--text-grayed) / <alpha-value>)',\n\t\t\t\t'clr-border': 'rgb(var(--border) / <alpha-value>)'\n\t\t\t}\n\t\t}\n\t},\n\tplugins: []\n}\n",
    "dependencies": []
  }
}