{
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/__registry__/index.tsx": {
    "source": "// @ts-nocheck\n// This file is autogenerated by scripts/build-registry.ts\n// Do not edit this file directly.\nimport * as React from \"react\"\n\nexport const Index: Record<string, any> = {\n  \"default\": {\n    \"aspect-ratio\": {\n      name: \"aspect-ratio\",\n      type: \"components:ui\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/ui/aspect-ratio\")),\n      files: [\"registry/default/ui/aspect-ratio.tsx\"],\n    },\n    \"avatar\": {\n      name: \"avatar\",\n      type: \"components:ui\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/ui/avatar\")),\n      files: [\"registry/default/ui/avatar.tsx\"],\n    },\n    \"badge\": {\n      name: \"badge\",\n      type: \"components:ui\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/ui/badge\")),\n      files: [\"registry/default/ui/badge.tsx\"],\n    },\n    \"button\": {\n      name: \"button\",\n      type: \"components:ui\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/ui/button\")),\n      files: [\"registry/default/ui/button.tsx\"],\n    },\n    \"calendar\": {\n      name: \"calendar\",\n      type: \"components:ui\",\n      registryDependencies: [\"button\"],\n      component: React.lazy(() => import(\"@/registry/default/ui/calendar\")),\n      files: [\"registry/default/ui/calendar.tsx\"],\n    },\n    \"card\": {\n      name: \"card\",\n      type: \"components:ui\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/ui/card\")),\n      files: [\"registry/default/ui/card.tsx\"],\n    },\n    \"checkbox\": {\n      name: \"checkbox\",\n      type: \"components:ui\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/ui/checkbox\")),\n      files: [\"registry/default/ui/checkbox.tsx\"],\n    },\n    \"collapse\": {\n      name: \"collapse\",\n      type: \"components:ui\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/ui/collapse\")),\n      files: [\"registry/default/ui/collapse.tsx\"],\n    },\n    \"collapsible\": {\n      name: \"collapsible\",\n      type: \"components:ui\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/ui/collapsible\")),\n      files: [\"registry/default/ui/collapsible.tsx\"],\n    },\n    \"command\": {\n      name: \"command\",\n      type: \"components:ui\",\n      registryDependencies: [\"dialog\"],\n      component: React.lazy(() => import(\"@/registry/default/ui/command\")),\n      files: [\"registry/default/ui/command.tsx\"],\n    },\n    \"context-menu\": {\n      name: \"context-menu\",\n      type: \"components:ui\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/ui/context-menu\")),\n      files: [\"registry/default/ui/context-menu.tsx\"],\n    },\n    \"dialog\": {\n      name: \"dialog\",\n      type: \"components:ui\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/ui/dialog\")),\n      files: [\"registry/default/ui/dialog.tsx\"],\n    },\n    \"drawer\": {\n      name: \"drawer\",\n      type: \"components:ui\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/ui/drawer\")),\n      files: [\"registry/default/ui/drawer.tsx\"],\n    },\n    \"form\": {\n      name: \"form\",\n      type: \"components:ui\",\n      registryDependencies: [\"button\",\"label\"],\n      component: React.lazy(() => import(\"@/registry/default/ui/form\")),\n      files: [\"registry/default/ui/form.tsx\"],\n    },\n    \"gauge\": {\n      name: \"gauge\",\n      type: \"components:ui\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/ui/gauge\")),\n      files: [\"registry/default/ui/gauge.tsx\"],\n    },\n    \"hover-card\": {\n      name: \"hover-card\",\n      type: \"components:ui\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/ui/hover-card\")),\n      files: [\"registry/default/ui/hover-card.tsx\"],\n    },\n    \"input\": {\n      name: \"input\",\n      type: \"components:ui\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/ui/input\")),\n      files: [\"registry/default/ui/input.tsx\"],\n    },\n    \"kbd\": {\n      name: \"kbd\",\n      type: \"components:ui\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/ui/kbd\")),\n      files: [\"registry/default/ui/kbd.tsx\"],\n    },\n    \"loading-dots\": {\n      name: \"loading-dots\",\n      type: \"components:ui\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/ui/loading-dots\")),\n      files: [\"registry/default/ui/loading-dots.tsx\"],\n    },\n    \"label\": {\n      name: \"label\",\n      type: \"components:ui\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/ui/label\")),\n      files: [\"registry/default/ui/label.tsx\"],\n    },\n    \"menu\": {\n      name: \"menu\",\n      type: \"components:ui\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/ui/menu\")),\n      files: [\"registry/default/ui/menu.tsx\"],\n    },\n    \"menubar\": {\n      name: \"menubar\",\n      type: \"components:ui\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/ui/menubar\")),\n      files: [\"registry/default/ui/menubar.tsx\"],\n    },\n    \"modal\": {\n      name: \"modal\",\n      type: \"components:ui\",\n      registryDependencies: [\"button\"],\n      component: React.lazy(() => import(\"@/registry/default/ui/modal\")),\n      files: [\"registry/default/ui/modal.tsx\"],\n    },\n    \"navigation-menu\": {\n      name: \"navigation-menu\",\n      type: \"components:ui\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/ui/navigation-menu\")),\n      files: [\"registry/default/ui/navigation-menu.tsx\"],\n    },\n    \"note\": {\n      name: \"note\",\n      type: \"components:ui\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/ui/note\")),\n      files: [\"registry/default/ui/note.tsx\"],\n    },\n    \"pagination\": {\n      name: \"pagination\",\n      type: \"components:ui\",\n      registryDependencies: [\"button\"],\n      component: React.lazy(() => import(\"@/registry/default/ui/pagination\")),\n      files: [\"registry/default/ui/pagination.tsx\"],\n    },\n    \"popover\": {\n      name: \"popover\",\n      type: \"components:ui\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/ui/popover\")),\n      files: [\"registry/default/ui/popover.tsx\"],\n    },\n    \"progress\": {\n      name: \"progress\",\n      type: \"components:ui\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/ui/progress\")),\n      files: [\"registry/default/ui/progress.tsx\"],\n    },\n    \"radio-group\": {\n      name: \"radio-group\",\n      type: \"components:ui\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/ui/radio-group\")),\n      files: [\"registry/default/ui/radio-group.tsx\"],\n    },\n    \"resizable\": {\n      name: \"resizable\",\n      type: \"components:ui\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/ui/resizable\")),\n      files: [\"registry/default/ui/resizable.tsx\"],\n    },\n    \"scroll-area\": {\n      name: \"scroll-area\",\n      type: \"components:ui\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/ui/scroll-area\")),\n      files: [\"registry/default/ui/scroll-area.tsx\"],\n    },\n    \"select\": {\n      name: \"select\",\n      type: \"components:ui\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/ui/select\")),\n      files: [\"registry/default/ui/select.tsx\"],\n    },\n    \"sheet\": {\n      name: \"sheet\",\n      type: \"components:ui\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/ui/sheet\")),\n      files: [\"registry/default/ui/sheet.tsx\"],\n    },\n    \"show-more\": {\n      name: \"show-more\",\n      type: \"components:ui\",\n      registryDependencies: [\"button\"],\n      component: React.lazy(() => import(\"@/registry/default/ui/show-more\")),\n      files: [\"registry/default/ui/show-more.tsx\"],\n    },\n    \"skeleton\": {\n      name: \"skeleton\",\n      type: \"components:ui\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/ui/skeleton\")),\n      files: [\"registry/default/ui/skeleton.tsx\"],\n    },\n    \"snippet\": {\n      name: \"snippet\",\n      type: \"components:ui\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/ui/snippet\")),\n      files: [\"registry/default/ui/snippet.tsx\"],\n    },\n    \"sonner\": {\n      name: \"sonner\",\n      type: \"components:ui\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/ui/sonner\")),\n      files: [\"registry/default/ui/sonner.tsx\"],\n    },\n    \"status-dot\": {\n      name: \"status-dot\",\n      type: \"components:ui\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/ui/status-dot\")),\n      files: [\"registry/default/ui/status-dot.tsx\"],\n    },\n    \"switch\": {\n      name: \"switch\",\n      type: \"components:ui\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/ui/switch\")),\n      files: [\"registry/default/ui/switch.tsx\"],\n    },\n    \"spinner\": {\n      name: \"spinner\",\n      type: \"components:ui\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/ui/spinner\")),\n      files: [\"registry/default/ui/spinner.tsx\"],\n    },\n    \"stack\": {\n      name: \"stack\",\n      type: \"components:ui\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/ui/stack\")),\n      files: [\"registry/default/ui/stack.tsx\"],\n    },\n    \"toggle\": {\n      name: \"toggle\",\n      type: \"components:ui\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/ui/toggle\")),\n      files: [\"registry/default/ui/toggle.tsx\"],\n    },\n    \"tabs\": {\n      name: \"tabs\",\n      type: \"components:ui\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/ui/tabs\")),\n      files: [\"registry/default/ui/tabs.tsx\"],\n    },\n    \"textarea\": {\n      name: \"textarea\",\n      type: \"components:ui\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/ui/textarea\")),\n      files: [\"registry/default/ui/textarea.tsx\"],\n    },\n    \"toast\": {\n      name: \"toast\",\n      type: \"components:ui\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/ui/toast\")),\n      files: [\"registry/default/ui/toast.tsx\",\"registry/default/ui/use-toast.ts\",\"registry/default/ui/toaster.tsx\"],\n    },\n    \"text\": {\n      name: \"text\",\n      type: \"components:ui\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/ui/text\")),\n      files: [\"registry/default/ui/text.tsx\"],\n    },\n    \"tooltip\": {\n      name: \"tooltip\",\n      type: \"components:ui\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/ui/tooltip\")),\n      files: [\"registry/default/ui/tooltip.tsx\"],\n    },\n    \"collapse-demo\": {\n      name: \"collapse-demo\",\n      type: \"components:example\",\n      registryDependencies: [\"collapse\"],\n      component: React.lazy(() => import(\"@/registry/default/example/collapse-demo\")),\n      files: [\"registry/default/example/collapse-demo.tsx\"],\n    },\n    \"modal-demo\": {\n      name: \"modal-demo\",\n      type: \"components:example\",\n      registryDependencies: [\"modal\",\"button\"],\n      component: React.lazy(() => import(\"@/registry/default/example/modal-demo\")),\n      files: [\"registry/default/example/modal-demo.tsx\"],\n    },\n    \"aspect-ratio-demo\": {\n      name: \"aspect-ratio-demo\",\n      type: \"components:example\",\n      registryDependencies: [\"aspect-ratio\"],\n      component: React.lazy(() => import(\"@/registry/default/example/aspect-ratio-demo\")),\n      files: [\"registry/default/example/aspect-ratio-demo.tsx\"],\n    },\n    \"avatar-demo\": {\n      name: \"avatar-demo\",\n      type: \"components:example\",\n      registryDependencies: [\"avatar\"],\n      component: React.lazy(() => import(\"@/registry/default/example/avatar-demo\")),\n      files: [\"registry/default/example/avatar-demo.tsx\"],\n    },\n    \"badge-demo\": {\n      name: \"badge-demo\",\n      type: \"components:example\",\n      registryDependencies: [\"badge\"],\n      component: React.lazy(() => import(\"@/registry/default/example/badge-demo\")),\n      files: [\"registry/default/example/badge-demo.tsx\"],\n    },\n    \"badge-sizes\": {\n      name: \"badge-sizes\",\n      type: \"components:example\",\n      registryDependencies: [\"badge\"],\n      component: React.lazy(() => import(\"@/registry/default/example/badge-sizes\")),\n      files: [\"registry/default/example/badge-sizes.tsx\"],\n    },\n    \"badge-icons\": {\n      name: \"badge-icons\",\n      type: \"components:example\",\n      registryDependencies: [\"badge\"],\n      component: React.lazy(() => import(\"@/registry/default/example/badge-icons\")),\n      files: [\"registry/default/example/badge-icons.tsx\"],\n    },\n    \"button-demo\": {\n      name: \"button-demo\",\n      type: \"components:example\",\n      registryDependencies: [\"button\"],\n      component: React.lazy(() => import(\"@/registry/default/example/button-demo\")),\n      files: [\"registry/default/example/button-demo.tsx\"],\n    },\n    \"button-disabled\": {\n      name: \"button-disabled\",\n      type: \"components:example\",\n      registryDependencies: [\"button\"],\n      component: React.lazy(() => import(\"@/registry/default/example/button-disabled\")),\n      files: [\"registry/default/example/button-disabled.tsx\"],\n    },\n    \"button-loading\": {\n      name: \"button-loading\",\n      type: \"components:example\",\n      registryDependencies: [\"button\"],\n      component: React.lazy(() => import(\"@/registry/default/example/button-loading\")),\n      files: [\"registry/default/example/button-loading.tsx\"],\n    },\n    \"button-prefix\": {\n      name: \"button-prefix\",\n      type: \"components:example\",\n      registryDependencies: [\"button\"],\n      component: React.lazy(() => import(\"@/registry/default/example/button-prefix\")),\n      files: [\"registry/default/example/button-prefix.tsx\"],\n    },\n    \"button-rounded\": {\n      name: \"button-rounded\",\n      type: \"components:example\",\n      registryDependencies: [\"button\"],\n      component: React.lazy(() => import(\"@/registry/default/example/button-rounded\")),\n      files: [\"registry/default/example/button-rounded.tsx\"],\n    },\n    \"button-shapes\": {\n      name: \"button-shapes\",\n      type: \"components:example\",\n      registryDependencies: [\"button\"],\n      component: React.lazy(() => import(\"@/registry/default/example/button-shapes\")),\n      files: [\"registry/default/example/button-shapes.tsx\"],\n    },\n    \"button-types\": {\n      name: \"button-types\",\n      type: \"components:example\",\n      registryDependencies: [\"button\"],\n      component: React.lazy(() => import(\"@/registry/default/example/button-types\")),\n      files: [\"registry/default/example/button-types.tsx\"],\n    },\n    \"calendar-demo\": {\n      name: \"calendar-demo\",\n      type: \"components:example\",\n      registryDependencies: [\"calendar\"],\n      component: React.lazy(() => import(\"@/registry/default/example/calendar-demo\")),\n      files: [\"registry/default/example/calendar-demo.tsx\"],\n    },\n    \"calendar-form\": {\n      name: \"calendar-form\",\n      type: \"components:example\",\n      registryDependencies: [\"calendar\",\"form\",\"popover\"],\n      component: React.lazy(() => import(\"@/registry/default/example/calendar-form\")),\n      files: [\"registry/default/example/calendar-form.tsx\"],\n    },\n    \"card-demo\": {\n      name: \"card-demo\",\n      type: \"components:example\",\n      registryDependencies: [\"card\",\"button\",\"toggle\"],\n      component: React.lazy(() => import(\"@/registry/default/example/card-demo\")),\n      files: [\"registry/default/example/card-demo.tsx\"],\n    },\n    \"card-with-form\": {\n      name: \"card-with-form\",\n      type: \"components:example\",\n      registryDependencies: [\"button\",\"card\",\"input\",\"label\",\"select\"],\n      component: React.lazy(() => import(\"@/registry/default/example/card-with-form\")),\n      files: [\"registry/default/example/card-with-form.tsx\"],\n    },\n    \"checkbox-demo\": {\n      name: \"checkbox-demo\",\n      type: \"components:example\",\n      registryDependencies: [\"checkbox\"],\n      component: React.lazy(() => import(\"@/registry/default/example/checkbox-demo\")),\n      files: [\"registry/default/example/checkbox-demo.tsx\"],\n    },\n    \"checkbox-disabled\": {\n      name: \"checkbox-disabled\",\n      type: \"components:example\",\n      registryDependencies: [\"checkbox\"],\n      component: React.lazy(() => import(\"@/registry/default/example/checkbox-disabled\")),\n      files: [\"registry/default/example/checkbox-disabled.tsx\"],\n    },\n    \"checkbox-form-multiple\": {\n      name: \"checkbox-form-multiple\",\n      type: \"components:example\",\n      registryDependencies: [\"checkbox\",\"form\"],\n      component: React.lazy(() => import(\"@/registry/default/example/checkbox-form-multiple\")),\n      files: [\"registry/default/example/checkbox-form-multiple.tsx\"],\n    },\n    \"checkbox-form-single\": {\n      name: \"checkbox-form-single\",\n      type: \"components:example\",\n      registryDependencies: [\"checkbox\",\"form\"],\n      component: React.lazy(() => import(\"@/registry/default/example/checkbox-form-single\")),\n      files: [\"registry/default/example/checkbox-form-single.tsx\"],\n    },\n    \"checkbox-with-text\": {\n      name: \"checkbox-with-text\",\n      type: \"components:example\",\n      registryDependencies: [\"checkbox\"],\n      component: React.lazy(() => import(\"@/registry/default/example/checkbox-with-text\")),\n      files: [\"registry/default/example/checkbox-with-text.tsx\"],\n    },\n    \"collapsible-demo\": {\n      name: \"collapsible-demo\",\n      type: \"components:example\",\n      registryDependencies: [\"collapsible\"],\n      component: React.lazy(() => import(\"@/registry/default/example/collapsible-demo\")),\n      files: [\"registry/default/example/collapsible-demo.tsx\"],\n    },\n    \"combobox-demo\": {\n      name: \"combobox-demo\",\n      type: \"components:example\",\n      registryDependencies: [\"command\"],\n      component: React.lazy(() => import(\"@/registry/default/example/combobox-demo\")),\n      files: [\"registry/default/example/combobox-demo.tsx\"],\n    },\n    \"combobox-dropdown-menu\": {\n      name: \"combobox-dropdown-menu\",\n      type: \"components:example\",\n      registryDependencies: [\"command\",\"menu\",\"button\"],\n      component: React.lazy(() => import(\"@/registry/default/example/combobox-dropdown-menu\")),\n      files: [\"registry/default/example/combobox-dropdown-menu.tsx\"],\n    },\n    \"combobox-form\": {\n      name: \"combobox-form\",\n      type: \"components:example\",\n      registryDependencies: [\"command\",\"form\"],\n      component: React.lazy(() => import(\"@/registry/default/example/combobox-form\")),\n      files: [\"registry/default/example/combobox-form.tsx\"],\n    },\n    \"combobox-popover\": {\n      name: \"combobox-popover\",\n      type: \"components:example\",\n      registryDependencies: [\"combobox\",\"popover\"],\n      component: React.lazy(() => import(\"@/registry/default/example/combobox-popover\")),\n      files: [\"registry/default/example/combobox-popover.tsx\"],\n    },\n    \"combobox-responsive\": {\n      name: \"combobox-responsive\",\n      type: \"components:example\",\n      registryDependencies: [\"combobox\",\"popover\",\"drawer\"],\n      component: React.lazy(() => import(\"@/registry/default/example/combobox-responsive\")),\n      files: [\"registry/default/example/combobox-responsive.tsx\"],\n    },\n    \"command-demo\": {\n      name: \"command-demo\",\n      type: \"components:example\",\n      registryDependencies: [\"command\"],\n      component: React.lazy(() => import(\"@/registry/default/example/command-demo\")),\n      files: [\"registry/default/example/command-demo.tsx\"],\n    },\n    \"command-dialog\": {\n      name: \"command-dialog\",\n      type: \"components:example\",\n      registryDependencies: [\"command\",\"dialog\"],\n      component: React.lazy(() => import(\"@/registry/default/example/command-dialog\")),\n      files: [\"registry/default/example/command-dialog.tsx\"],\n    },\n    \"context-menu-demo\": {\n      name: \"context-menu-demo\",\n      type: \"components:example\",\n      registryDependencies: [\"context-menu\"],\n      component: React.lazy(() => import(\"@/registry/default/example/context-menu-demo\")),\n      files: [\"registry/default/example/context-menu-demo.tsx\"],\n    },\n    \"date-picker-demo\": {\n      name: \"date-picker-demo\",\n      type: \"components:example\",\n      registryDependencies: [\"button\",\"calendar\",\"popover\"],\n      component: React.lazy(() => import(\"@/registry/default/example/date-picker-demo\")),\n      files: [\"registry/default/example/date-picker-demo.tsx\"],\n    },\n    \"date-picker-form\": {\n      name: \"date-picker-form\",\n      type: \"components:example\",\n      registryDependencies: [\"button\",\"calendar\",\"form\",\"popover\"],\n      component: React.lazy(() => import(\"@/registry/default/example/date-picker-form\")),\n      files: [\"registry/default/example/date-picker-form.tsx\"],\n    },\n    \"date-picker-with-presets\": {\n      name: \"date-picker-with-presets\",\n      type: \"components:example\",\n      registryDependencies: [\"button\",\"calendar\",\"popover\",\"select\"],\n      component: React.lazy(() => import(\"@/registry/default/example/date-picker-with-presets\")),\n      files: [\"registry/default/example/date-picker-with-presets.tsx\"],\n    },\n    \"date-picker-with-range\": {\n      name: \"date-picker-with-range\",\n      type: \"components:example\",\n      registryDependencies: [\"button\",\"calendar\",\"popover\"],\n      component: React.lazy(() => import(\"@/registry/default/example/date-picker-with-range\")),\n      files: [\"registry/default/example/date-picker-with-range.tsx\"],\n    },\n    \"dialog-demo\": {\n      name: \"dialog-demo\",\n      type: \"components:example\",\n      registryDependencies: [\"dialog\"],\n      component: React.lazy(() => import(\"@/registry/default/example/dialog-demo\")),\n      files: [\"registry/default/example/dialog-demo.tsx\"],\n    },\n    \"dialog-close-button\": {\n      name: \"dialog-close-button\",\n      type: \"components:example\",\n      registryDependencies: [\"dialog\",\"button\"],\n      component: React.lazy(() => import(\"@/registry/default/example/dialog-close-button\")),\n      files: [\"registry/default/example/dialog-close-button.tsx\"],\n    },\n    \"drawer-demo\": {\n      name: \"drawer-demo\",\n      type: \"components:example\",\n      registryDependencies: [\"drawer\"],\n      component: React.lazy(() => import(\"@/registry/default/example/drawer-demo\")),\n      files: [\"registry/default/example/drawer-demo.tsx\"],\n    },\n    \"drawer-dialog\": {\n      name: \"drawer-dialog\",\n      type: \"components:example\",\n      registryDependencies: [\"drawer\",\"dialog\"],\n      component: React.lazy(() => import(\"@/registry/default/example/drawer-dialog\")),\n      files: [\"registry/default/example/drawer-dialog.tsx\"],\n    },\n    \"gauge-demo\": {\n      name: \"gauge-demo\",\n      type: \"components:example\",\n      registryDependencies: [\"gauge\"],\n      component: React.lazy(() => import(\"@/registry/default/example/gauge-demo\")),\n      files: [\"registry/default/example/gauge-demo.tsx\"],\n    },\n    \"gauge-label\": {\n      name: \"gauge-label\",\n      type: \"components:example\",\n      registryDependencies: [\"gauge\"],\n      component: React.lazy(() => import(\"@/registry/default/example/gauge-label\")),\n      files: [\"registry/default/example/gauge-label.tsx\"],\n    },\n    \"gauge-color-scale\": {\n      name: \"gauge-color-scale\",\n      type: \"components:example\",\n      registryDependencies: [\"gauge\"],\n      component: React.lazy(() => import(\"@/registry/default/example/gauge-color-scale\")),\n      files: [\"registry/default/example/gauge-color-scale.tsx\"],\n    },\n    \"gauge-custom-color-range\": {\n      name: \"gauge-custom-color-range\",\n      type: \"components:example\",\n      registryDependencies: [\"gauge\"],\n      component: React.lazy(() => import(\"@/registry/default/example/gauge-custom-color-range\")),\n      files: [\"registry/default/example/gauge-custom-color-range.tsx\"],\n    },\n    \"gauge-custom-secondary-color\": {\n      name: \"gauge-custom-secondary-color\",\n      type: \"components:example\",\n      registryDependencies: [\"gauge\"],\n      component: React.lazy(() => import(\"@/registry/default/example/gauge-custom-secondary-color\")),\n      files: [\"registry/default/example/gauge-custom-secondary-color.tsx\"],\n    },\n    \"gauge-arc-priority\": {\n      name: \"gauge-arc-priority\",\n      type: \"components:example\",\n      registryDependencies: [\"gauge\"],\n      component: React.lazy(() => import(\"@/registry/default/example/gauge-arc-priority\")),\n      files: [\"registry/default/example/gauge-arc-priority.tsx\"],\n    },\n    \"menu-demo\": {\n      name: \"menu-demo\",\n      type: \"components:example\",\n      registryDependencies: [\"menu\"],\n      component: React.lazy(() => import(\"@/registry/default/example/menu-demo\")),\n      files: [\"registry/default/example/menu-demo.tsx\"],\n    },\n    \"menu-checkboxes\": {\n      name: \"menu-checkboxes\",\n      type: \"components:example\",\n      registryDependencies: [\"menu\",\"checkbox\"],\n      component: React.lazy(() => import(\"@/registry/default/example/menu-checkboxes\")),\n      files: [\"registry/default/example/menu-checkboxes.tsx\"],\n    },\n    \"menu-custom-trigger\": {\n      name: \"menu-custom-trigger\",\n      type: \"components:example\",\n      registryDependencies: [\"menu\"],\n      component: React.lazy(() => import(\"@/registry/default/example/menu-custom-trigger\")),\n      files: [\"registry/default/example/menu-custom-trigger.tsx\"],\n    },\n    \"menu-disabled-items\": {\n      name: \"menu-disabled-items\",\n      type: \"components:example\",\n      registryDependencies: [\"menu\"],\n      component: React.lazy(() => import(\"@/registry/default/example/menu-disabled-items\")),\n      files: [\"registry/default/example/menu-disabled-items.tsx\"],\n    },\n    \"menu-link-items\": {\n      name: \"menu-link-items\",\n      type: \"components:example\",\n      registryDependencies: [\"menu\"],\n      component: React.lazy(() => import(\"@/registry/default/example/menu-link-items\")),\n      files: [\"registry/default/example/menu-link-items.tsx\"],\n    },\n    \"menu-position\": {\n      name: \"menu-position\",\n      type: \"components:example\",\n      registryDependencies: [\"menu\"],\n      component: React.lazy(() => import(\"@/registry/default/example/menu-position\")),\n      files: [\"registry/default/example/menu-position.tsx\"],\n    },\n    \"menu-prefix\": {\n      name: \"menu-prefix\",\n      type: \"components:example\",\n      registryDependencies: [\"menu\"],\n      component: React.lazy(() => import(\"@/registry/default/example/menu-prefix\")),\n      files: [\"registry/default/example/menu-prefix.tsx\"],\n    },\n    \"menu-radio-group\": {\n      name: \"menu-radio-group\",\n      type: \"components:example\",\n      registryDependencies: [\"menu\",\"radio-group\"],\n      component: React.lazy(() => import(\"@/registry/default/example/menu-radio-group\")),\n      files: [\"registry/default/example/menu-radio-group.tsx\"],\n    },\n    \"hover-card-demo\": {\n      name: \"hover-card-demo\",\n      type: \"components:example\",\n      registryDependencies: [\"hover-card\"],\n      component: React.lazy(() => import(\"@/registry/default/example/hover-card-demo\")),\n      files: [\"registry/default/example/hover-card-demo.tsx\"],\n    },\n    \"input-demo\": {\n      name: \"input-demo\",\n      type: \"components:example\",\n      registryDependencies: [\"input\"],\n      component: React.lazy(() => import(\"@/registry/default/example/input-demo\")),\n      files: [\"registry/default/example/input-demo.tsx\"],\n    },\n    \"input-disabled\": {\n      name: \"input-disabled\",\n      type: \"components:example\",\n      registryDependencies: [\"input\"],\n      component: React.lazy(() => import(\"@/registry/default/example/input-disabled\")),\n      files: [\"registry/default/example/input-disabled.tsx\"],\n    },\n    \"input-prefix-suffix\": {\n      name: \"input-prefix-suffix\",\n      type: \"components:example\",\n      registryDependencies: [\"input\"],\n      component: React.lazy(() => import(\"@/registry/default/example/input-prefix-suffix\")),\n      files: [\"registry/default/example/input-prefix-suffix.tsx\"],\n    },\n    \"input-with-button\": {\n      name: \"input-with-button\",\n      type: \"components:example\",\n      registryDependencies: [\"input\",\"button\"],\n      component: React.lazy(() => import(\"@/registry/default/example/input-with-button\")),\n      files: [\"registry/default/example/input-with-button.tsx\"],\n    },\n    \"input-with-label\": {\n      name: \"input-with-label\",\n      type: \"components:example\",\n      registryDependencies: [\"input\",\"button\",\"label\"],\n      component: React.lazy(() => import(\"@/registry/default/example/input-with-label\")),\n      files: [\"registry/default/example/input-with-label.tsx\"],\n    },\n    \"input-with-text\": {\n      name: \"input-with-text\",\n      type: \"components:example\",\n      registryDependencies: [\"input\",\"button\",\"label\"],\n      component: React.lazy(() => import(\"@/registry/default/example/input-with-text\")),\n      files: [\"registry/default/example/input-with-text.tsx\"],\n    },\n    \"kbd-demo\": {\n      name: \"kbd-demo\",\n      type: \"components:example\",\n      registryDependencies: [\"kbd\"],\n      component: React.lazy(() => import(\"@/registry/default/example/kbd-demo\")),\n      files: [\"registry/default/example/kbd-demo.tsx\"],\n    },\n    \"kbd-combination\": {\n      name: \"kbd-combination\",\n      type: \"components:example\",\n      registryDependencies: [\"kbd\"],\n      component: React.lazy(() => import(\"@/registry/default/example/kbd-combination\")),\n      files: [\"registry/default/example/kbd-combination.tsx\"],\n    },\n    \"kbd-small\": {\n      name: \"kbd-small\",\n      type: \"components:example\",\n      registryDependencies: [\"kbd\"],\n      component: React.lazy(() => import(\"@/registry/default/example/kbd-small\")),\n      files: [\"registry/default/example/kbd-small.tsx\"],\n    },\n    \"loading-dots-demo\": {\n      name: \"loading-dots-demo\",\n      type: \"components:example\",\n      registryDependencies: [\"loading-dots\"],\n      component: React.lazy(() => import(\"@/registry/default/example/loading-dots-demo\")),\n      files: [\"registry/default/example/loading-dots-demo.tsx\"],\n    },\n    \"loading-dots-with-text\": {\n      name: \"loading-dots-with-text\",\n      type: \"components:example\",\n      registryDependencies: [\"loading-dots\"],\n      component: React.lazy(() => import(\"@/registry/default/example/loading-dots-with-text\")),\n      files: [\"registry/default/example/loading-dots-with-text.tsx\"],\n    },\n    \"label-demo\": {\n      name: \"label-demo\",\n      type: \"components:example\",\n      registryDependencies: [\"label\"],\n      component: React.lazy(() => import(\"@/registry/default/example/label-demo\")),\n      files: [\"registry/default/example/label-demo.tsx\"],\n    },\n    \"menubar-demo\": {\n      name: \"menubar-demo\",\n      type: \"components:example\",\n      registryDependencies: [\"menubar\"],\n      component: React.lazy(() => import(\"@/registry/default/example/menubar-demo\")),\n      files: [\"registry/default/example/menubar-demo.tsx\"],\n    },\n    \"navigation-menu-demo\": {\n      name: \"navigation-menu-demo\",\n      type: \"components:example\",\n      registryDependencies: [\"navigation-menu\"],\n      component: React.lazy(() => import(\"@/registry/default/example/navigation-menu-demo\")),\n      files: [\"registry/default/example/navigation-menu-demo.tsx\"],\n    },\n    \"note-demo\": {\n      name: \"note-demo\",\n      type: \"components:example\",\n      registryDependencies: [\"note\"],\n      component: React.lazy(() => import(\"@/registry/default/example/note-demo\")),\n      files: [\"registry/default/example/note-demo.tsx\"],\n    },\n    \"note-action\": {\n      name: \"note-action\",\n      type: \"components:example\",\n      registryDependencies: [\"note\"],\n      component: React.lazy(() => import(\"@/registry/default/example/note-action\")),\n      files: [\"registry/default/example/note-action.tsx\"],\n    },\n    \"note-success\": {\n      name: \"note-success\",\n      type: \"components:example\",\n      registryDependencies: [\"note\"],\n      component: React.lazy(() => import(\"@/registry/default/example/note-success\")),\n      files: [\"registry/default/example/note-success.tsx\"],\n    },\n    \"note-secondary\": {\n      name: \"note-secondary\",\n      type: \"components:example\",\n      registryDependencies: [\"note\"],\n      component: React.lazy(() => import(\"@/registry/default/example/note-secondary\")),\n      files: [\"registry/default/example/note-secondary.tsx\"],\n    },\n    \"note-violet\": {\n      name: \"note-violet\",\n      type: \"components:example\",\n      registryDependencies: [\"note\"],\n      component: React.lazy(() => import(\"@/registry/default/example/note-violet\")),\n      files: [\"registry/default/example/note-violet.tsx\"],\n    },\n    \"note-warning\": {\n      name: \"note-warning\",\n      type: \"components:example\",\n      registryDependencies: [\"note\"],\n      component: React.lazy(() => import(\"@/registry/default/example/note-warning\")),\n      files: [\"registry/default/example/note-warning.tsx\"],\n    },\n    \"note-error\": {\n      name: \"note-error\",\n      type: \"components:example\",\n      registryDependencies: [\"note\"],\n      component: React.lazy(() => import(\"@/registry/default/example/note-error\")),\n      files: [\"registry/default/example/note-error.tsx\"],\n    },\n    \"note-cyan\": {\n      name: \"note-cyan\",\n      type: \"components:example\",\n      registryDependencies: [\"note\"],\n      component: React.lazy(() => import(\"@/registry/default/example/note-cyan\")),\n      files: [\"registry/default/example/note-cyan.tsx\"],\n    },\n    \"note-disabled\": {\n      name: \"note-disabled\",\n      type: \"components:example\",\n      registryDependencies: [\"note\"],\n      component: React.lazy(() => import(\"@/registry/default/example/note-disabled\")),\n      files: [\"registry/default/example/note-disabled.tsx\"],\n    },\n    \"pagination-demo\": {\n      name: \"pagination-demo\",\n      type: \"components:example\",\n      registryDependencies: [\"pagination\"],\n      component: React.lazy(() => import(\"@/registry/default/example/pagination-demo\")),\n      files: [\"registry/default/example/pagination-demo.tsx\"],\n    },\n    \"popover-demo\": {\n      name: \"popover-demo\",\n      type: \"components:example\",\n      registryDependencies: [\"popover\"],\n      component: React.lazy(() => import(\"@/registry/default/example/popover-demo\")),\n      files: [\"registry/default/example/popover-demo.tsx\"],\n    },\n    \"progress-demo\": {\n      name: \"progress-demo\",\n      type: \"components:example\",\n      registryDependencies: [\"progress\"],\n      component: React.lazy(() => import(\"@/registry/default/example/progress-demo\")),\n      files: [\"registry/default/example/progress-demo.tsx\"],\n    },\n    \"radio-group-demo\": {\n      name: \"radio-group-demo\",\n      type: \"components:example\",\n      registryDependencies: [\"radio-group\"],\n      component: React.lazy(() => import(\"@/registry/default/example/radio-group-demo\")),\n      files: [\"registry/default/example/radio-group-demo.tsx\"],\n    },\n    \"radio-group-form\": {\n      name: \"radio-group-form\",\n      type: \"components:example\",\n      registryDependencies: [\"radio-group\",\"form\"],\n      component: React.lazy(() => import(\"@/registry/default/example/radio-group-form\")),\n      files: [\"registry/default/example/radio-group-form.tsx\"],\n    },\n    \"resizable-demo\": {\n      name: \"resizable-demo\",\n      type: \"components:example\",\n      registryDependencies: [\"resizable\"],\n      component: React.lazy(() => import(\"@/registry/default/example/resizable-demo\")),\n      files: [\"registry/default/example/resizable-demo.tsx\"],\n    },\n    \"resizable-demo-with-handle\": {\n      name: \"resizable-demo-with-handle\",\n      type: \"components:example\",\n      registryDependencies: [\"resizable\"],\n      component: React.lazy(() => import(\"@/registry/default/example/resizable-demo-with-handle\")),\n      files: [\"registry/default/example/resizable-demo-with-handle.tsx\"],\n    },\n    \"resizable-vertical\": {\n      name: \"resizable-vertical\",\n      type: \"components:example\",\n      registryDependencies: [\"resizable\"],\n      component: React.lazy(() => import(\"@/registry/default/example/resizable-vertical\")),\n      files: [\"registry/default/example/resizable-vertical.tsx\"],\n    },\n    \"resizable-handle\": {\n      name: \"resizable-handle\",\n      type: \"components:example\",\n      registryDependencies: [\"resizable\"],\n      component: React.lazy(() => import(\"@/registry/default/example/resizable-handle\")),\n      files: [\"registry/default/example/resizable-handle.tsx\"],\n    },\n    \"scroll-area-demo\": {\n      name: \"scroll-area-demo\",\n      type: \"components:example\",\n      registryDependencies: [\"scroll-area\"],\n      component: React.lazy(() => import(\"@/registry/default/example/scroll-area-demo\")),\n      files: [\"registry/default/example/scroll-area-demo.tsx\"],\n    },\n    \"scroll-area-horizontal-demo\": {\n      name: \"scroll-area-horizontal-demo\",\n      type: \"components:example\",\n      registryDependencies: [\"scroll-area\"],\n      component: React.lazy(() => import(\"@/registry/default/example/scroll-area-horizontal-demo\")),\n      files: [\"registry/default/example/scroll-area-horizontal-demo.tsx\"],\n    },\n    \"select-demo\": {\n      name: \"select-demo\",\n      type: \"components:example\",\n      registryDependencies: [\"select\"],\n      component: React.lazy(() => import(\"@/registry/default/example/select-demo\")),\n      files: [\"registry/default/example/select-demo.tsx\"],\n    },\n    \"select-scrollable\": {\n      name: \"select-scrollable\",\n      type: \"components:example\",\n      registryDependencies: [\"select\"],\n      component: React.lazy(() => import(\"@/registry/default/example/select-scrollable\")),\n      files: [\"registry/default/example/select-scrollable.tsx\"],\n    },\n    \"select-form\": {\n      name: \"select-form\",\n      type: \"components:example\",\n      registryDependencies: [\"select\"],\n      component: React.lazy(() => import(\"@/registry/default/example/select-form\")),\n      files: [\"registry/default/example/select-form.tsx\"],\n    },\n    \"sheet-demo\": {\n      name: \"sheet-demo\",\n      type: \"components:example\",\n      registryDependencies: [\"sheet\"],\n      component: React.lazy(() => import(\"@/registry/default/example/sheet-demo\")),\n      files: [\"registry/default/example/sheet-demo.tsx\"],\n    },\n    \"sheet-side\": {\n      name: \"sheet-side\",\n      type: \"components:example\",\n      registryDependencies: [\"sheet\"],\n      component: React.lazy(() => import(\"@/registry/default/example/sheet-side\")),\n      files: [\"registry/default/example/sheet-side.tsx\"],\n    },\n    \"show-more-demo\": {\n      name: \"show-more-demo\",\n      type: \"components:example\",\n      registryDependencies: [\"show-more\"],\n      component: React.lazy(() => import(\"@/registry/default/example/show-more-demo\")),\n      files: [\"registry/default/example/show-more-demo.tsx\"],\n    },\n    \"skeleton-demo\": {\n      name: \"skeleton-demo\",\n      type: \"components:example\",\n      registryDependencies: [\"skeleton\"],\n      component: React.lazy(() => import(\"@/registry/default/example/skeleton-demo\")),\n      files: [\"registry/default/example/skeleton-demo.tsx\"],\n    },\n    \"skeleton-card\": {\n      name: \"skeleton-card\",\n      type: \"components:example\",\n      registryDependencies: [\"skeleton\"],\n      component: React.lazy(() => import(\"@/registry/default/example/skeleton-card\")),\n      files: [\"registry/default/example/skeleton-card.tsx\"],\n    },\n    \"snippet-demo\": {\n      name: \"snippet-demo\",\n      type: \"components:example\",\n      registryDependencies: [\"snippet\"],\n      component: React.lazy(() => import(\"@/registry/default/example/snippet-demo\")),\n      files: [\"registry/default/example/snippet-demo.tsx\"],\n    },\n    \"snippet-inverted\": {\n      name: \"snippet-inverted\",\n      type: \"components:example\",\n      registryDependencies: [\"snippet\"],\n      component: React.lazy(() => import(\"@/registry/default/example/snippet-inverted\")),\n      files: [\"registry/default/example/snippet-inverted.tsx\"],\n    },\n    \"snippet-multi-line\": {\n      name: \"snippet-multi-line\",\n      type: \"components:example\",\n      registryDependencies: [\"snippet\"],\n      component: React.lazy(() => import(\"@/registry/default/example/snippet-multi-line\")),\n      files: [\"registry/default/example/snippet-multi-line.tsx\"],\n    },\n    \"snippet-no-prompt\": {\n      name: \"snippet-no-prompt\",\n      type: \"components:example\",\n      registryDependencies: [\"snippet\"],\n      component: React.lazy(() => import(\"@/registry/default/example/snippet-no-prompt\")),\n      files: [\"registry/default/example/snippet-no-prompt.tsx\"],\n    },\n    \"snippet-callback\": {\n      name: \"snippet-callback\",\n      type: \"components:example\",\n      registryDependencies: [\"snippet\"],\n      component: React.lazy(() => import(\"@/registry/default/example/snippet-callback\")),\n      files: [\"registry/default/example/snippet-callback.tsx\"],\n    },\n    \"snippet-variants\": {\n      name: \"snippet-variants\",\n      type: \"components:example\",\n      registryDependencies: [\"snippet\"],\n      component: React.lazy(() => import(\"@/registry/default/example/snippet-variants\")),\n      files: [\"registry/default/example/snippet-variants.tsx\"],\n    },\n    \"sonner-demo\": {\n      name: \"sonner-demo\",\n      type: \"components:example\",\n      registryDependencies: [\"sonner\"],\n      component: React.lazy(() => import(\"@/registry/default/example/sonner-demo\")),\n      files: [\"registry/default/example/sonner-demo.tsx\"],\n    },\n    \"spinner-demo\": {\n      name: \"spinner-demo\",\n      type: \"components:example\",\n      registryDependencies: [\"spinner\"],\n      component: React.lazy(() => import(\"@/registry/default/example/spinner-demo\")),\n      files: [\"registry/default/example/spinner-demo.tsx\"],\n    },\n    \"spinner-size\": {\n      name: \"spinner-size\",\n      type: \"components:example\",\n      registryDependencies: [\"spinner\"],\n      component: React.lazy(() => import(\"@/registry/default/example/spinner-size\")),\n      files: [\"registry/default/example/spinner-size.tsx\"],\n    },\n    \"stack-demo\": {\n      name: \"stack-demo\",\n      type: \"components:example\",\n      registryDependencies: [\"stack\"],\n      component: React.lazy(() => import(\"@/registry/default/example/stack-demo\")),\n      files: [\"registry/default/example/stack-demo.tsx\"],\n    },\n    \"stack-padding\": {\n      name: \"stack-padding\",\n      type: \"components:example\",\n      registryDependencies: [\"stack\"],\n      component: React.lazy(() => import(\"@/registry/default/example/stack-padding\")),\n      files: [\"registry/default/example/stack-padding.tsx\"],\n    },\n    \"stack-responsive\": {\n      name: \"stack-responsive\",\n      type: \"components:example\",\n      registryDependencies: [\"stack\"],\n      component: React.lazy(() => import(\"@/registry/default/example/stack-responsive\")),\n      files: [\"registry/default/example/stack-responsive.tsx\"],\n    },\n    \"status-dot-demo\": {\n      name: \"status-dot-demo\",\n      type: \"components:example\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/example/status-dot-demo\")),\n      files: [\"registry/default/example/status-dot-demo.tsx\"],\n    },\n    \"status-dot-label\": {\n      name: \"status-dot-label\",\n      type: \"components:example\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/example/status-dot-label\")),\n      files: [\"registry/default/example/status-dot-label.tsx\"],\n    },\n    \"switch-demo\": {\n      name: \"switch-demo\",\n      type: \"components:example\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/example/switch-demo\")),\n      files: [\"registry/default/example/switch-demo.tsx\"],\n    },\n    \"switch-disabled\": {\n      name: \"switch-disabled\",\n      type: \"components:example\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/example/switch-disabled\")),\n      files: [\"registry/default/example/switch-disabled.tsx\"],\n    },\n    \"switch-sizes\": {\n      name: \"switch-sizes\",\n      type: \"components:example\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/example/switch-sizes\")),\n      files: [\"registry/default/example/switch-sizes.tsx\"],\n    },\n    \"switch-full-width\": {\n      name: \"switch-full-width\",\n      type: \"components:example\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/example/switch-full-width\")),\n      files: [\"registry/default/example/switch-full-width.tsx\"],\n    },\n    \"switch-icon\": {\n      name: \"switch-icon\",\n      type: \"components:example\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/example/switch-icon\")),\n      files: [\"registry/default/example/switch-icon.tsx\"],\n    },\n    \"tabs-demo\": {\n      name: \"tabs-demo\",\n      type: \"components:example\",\n      registryDependencies: [\"tabs\"],\n      component: React.lazy(() => import(\"@/registry/default/example/tabs-demo\")),\n      files: [\"registry/default/example/tabs-demo.tsx\"],\n    },\n    \"tabs-controlled\": {\n      name: \"tabs-controlled\",\n      type: \"components:example\",\n      registryDependencies: [\"tabs\"],\n      component: React.lazy(() => import(\"@/registry/default/example/tabs-controlled\")),\n      files: [\"registry/default/example/tabs-controlled.tsx\"],\n    },\n    \"tabs-disable-specific-tabs\": {\n      name: \"tabs-disable-specific-tabs\",\n      type: \"components:example\",\n      registryDependencies: [\"tabs\"],\n      component: React.lazy(() => import(\"@/registry/default/example/tabs-disable-specific-tabs\")),\n      files: [\"registry/default/example/tabs-disable-specific-tabs.tsx\"],\n    },\n    \"textarea-demo\": {\n      name: \"textarea-demo\",\n      type: \"components:example\",\n      registryDependencies: [\"textarea\"],\n      component: React.lazy(() => import(\"@/registry/default/example/textarea-demo\")),\n      files: [\"registry/default/example/textarea-demo.tsx\"],\n    },\n    \"textarea-disabled\": {\n      name: \"textarea-disabled\",\n      type: \"components:example\",\n      registryDependencies: [\"textarea\"],\n      component: React.lazy(() => import(\"@/registry/default/example/textarea-disabled\")),\n      files: [\"registry/default/example/textarea-disabled.tsx\"],\n    },\n    \"textarea-form\": {\n      name: \"textarea-form\",\n      type: \"components:example\",\n      registryDependencies: [\"textarea\",\"form\"],\n      component: React.lazy(() => import(\"@/registry/default/example/textarea-form\")),\n      files: [\"registry/default/example/textarea-form.tsx\"],\n    },\n    \"textarea-with-button\": {\n      name: \"textarea-with-button\",\n      type: \"components:example\",\n      registryDependencies: [\"textarea\",\"button\"],\n      component: React.lazy(() => import(\"@/registry/default/example/textarea-with-button\")),\n      files: [\"registry/default/example/textarea-with-button.tsx\"],\n    },\n    \"textarea-with-label\": {\n      name: \"textarea-with-label\",\n      type: \"components:example\",\n      registryDependencies: [\"textarea\",\"label\"],\n      component: React.lazy(() => import(\"@/registry/default/example/textarea-with-label\")),\n      files: [\"registry/default/example/textarea-with-label.tsx\"],\n    },\n    \"textarea-with-text\": {\n      name: \"textarea-with-text\",\n      type: \"components:example\",\n      registryDependencies: [\"textarea\",\"label\"],\n      component: React.lazy(() => import(\"@/registry/default/example/textarea-with-text\")),\n      files: [\"registry/default/example/textarea-with-text.tsx\"],\n    },\n    \"toast-demo\": {\n      name: \"toast-demo\",\n      type: \"components:example\",\n      registryDependencies: [\"toast\"],\n      component: React.lazy(() => import(\"@/registry/default/example/toast-demo\")),\n      files: [\"registry/default/example/toast-demo.tsx\"],\n    },\n    \"toast-destructive\": {\n      name: \"toast-destructive\",\n      type: \"components:example\",\n      registryDependencies: [\"toast\"],\n      component: React.lazy(() => import(\"@/registry/default/example/toast-destructive\")),\n      files: [\"registry/default/example/toast-destructive.tsx\"],\n    },\n    \"toast-simple\": {\n      name: \"toast-simple\",\n      type: \"components:example\",\n      registryDependencies: [\"toast\"],\n      component: React.lazy(() => import(\"@/registry/default/example/toast-simple\")),\n      files: [\"registry/default/example/toast-simple.tsx\"],\n    },\n    \"toast-with-action\": {\n      name: \"toast-with-action\",\n      type: \"components:example\",\n      registryDependencies: [\"toast\"],\n      component: React.lazy(() => import(\"@/registry/default/example/toast-with-action\")),\n      files: [\"registry/default/example/toast-with-action.tsx\"],\n    },\n    \"toast-with-title\": {\n      name: \"toast-with-title\",\n      type: \"components:example\",\n      registryDependencies: [\"toast\"],\n      component: React.lazy(() => import(\"@/registry/default/example/toast-with-title\")),\n      files: [\"registry/default/example/toast-with-title.tsx\"],\n    },\n    \"toggle-demo\": {\n      name: \"toggle-demo\",\n      type: \"components:example\",\n      registryDependencies: [\"toggle\"],\n      component: React.lazy(() => import(\"@/registry/default/example/toggle-demo\")),\n      files: [\"registry/default/example/toggle-demo.tsx\"],\n    },\n    \"toggle-disabled\": {\n      name: \"toggle-disabled\",\n      type: \"components:example\",\n      registryDependencies: [\"toggle\"],\n      component: React.lazy(() => import(\"@/registry/default/example/toggle-disabled\")),\n      files: [\"registry/default/example/toggle-disabled.tsx\"],\n    },\n    \"toggle-size\": {\n      name: \"toggle-size\",\n      type: \"components:example\",\n      registryDependencies: [\"toggle\"],\n      component: React.lazy(() => import(\"@/registry/default/example/toggle-size\")),\n      files: [\"registry/default/example/toggle-size.tsx\"],\n    },\n    \"tooltip-box-align\": {\n      name: \"tooltip-box-align\",\n      type: \"components:example\",\n      registryDependencies: [\"tooltip\"],\n      component: React.lazy(() => import(\"@/registry/default/example/tooltip-box-align\")),\n      files: [\"registry/default/example/tooltip-box-align.tsx\"],\n    },\n    \"tooltip-components\": {\n      name: \"tooltip-components\",\n      type: \"components:example\",\n      registryDependencies: [\"tooltip\"],\n      component: React.lazy(() => import(\"@/registry/default/example/tooltip-components\")),\n      files: [\"registry/default/example/tooltip-components.tsx\"],\n    },\n    \"tooltip-custom-content\": {\n      name: \"tooltip-custom-content\",\n      type: \"components:example\",\n      registryDependencies: [\"tooltip\"],\n      component: React.lazy(() => import(\"@/registry/default/example/tooltip-custom-content\")),\n      files: [\"registry/default/example/tooltip-custom-content.tsx\"],\n    },\n    \"tooltip-custom-type\": {\n      name: \"tooltip-custom-type\",\n      type: \"components:example\",\n      registryDependencies: [\"tooltip\"],\n      component: React.lazy(() => import(\"@/registry/default/example/tooltip-custom-type\")),\n      files: [\"registry/default/example/tooltip-custom-type.tsx\"],\n    },\n    \"tooltip-demo\": {\n      name: \"tooltip-demo\",\n      type: \"components:example\",\n      registryDependencies: [\"tooltip\"],\n      component: React.lazy(() => import(\"@/registry/default/example/tooltip-demo\")),\n      files: [\"registry/default/example/tooltip-demo.tsx\"],\n    },\n    \"tooltip-no-delay\": {\n      name: \"tooltip-no-delay\",\n      type: \"components:example\",\n      registryDependencies: [\"tooltip\"],\n      component: React.lazy(() => import(\"@/registry/default/example/tooltip-no-delay\")),\n      files: [\"registry/default/example/tooltip-no-delay.tsx\"],\n    },\n    \"tooltip-other\": {\n      name: \"tooltip-other\",\n      type: \"components:example\",\n      registryDependencies: [\"tooltip\"],\n      component: React.lazy(() => import(\"@/registry/default/example/tooltip-other\")),\n      files: [\"registry/default/example/tooltip-other.tsx\"],\n    },\n    \"text-demo\": {\n      name: \"text-demo\",\n      type: \"components:example\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/example/text-demo\")),\n      files: [\"registry/default/example/text-demo.tsx\"],\n    },\n    \"text-align\": {\n      name: \"text-align\",\n      type: \"components:example\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/example/text-align\")),\n      files: [\"registry/default/example/text-align.tsx\"],\n    },\n    \"text-clamp\": {\n      name: \"text-clamp\",\n      type: \"components:example\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/example/text-clamp\")),\n      files: [\"registry/default/example/text-clamp.tsx\"],\n    },\n    \"text-color\": {\n      name: \"text-color\",\n      type: \"components:example\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/example/text-color\")),\n      files: [\"registry/default/example/text-color.tsx\"],\n    },\n    \"text-modifiers\": {\n      name: \"text-modifiers\",\n      type: \"components:example\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/example/text-modifiers\")),\n      files: [\"registry/default/example/text-modifiers.tsx\"],\n    },\n    \"text-monospace\": {\n      name: \"text-monospace\",\n      type: \"components:example\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/example/text-monospace\")),\n      files: [\"registry/default/example/text-monospace.tsx\"],\n    },\n    \"text-polymorphic\": {\n      name: \"text-polymorphic\",\n      type: \"components:example\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/example/text-polymorphic\")),\n      files: [\"registry/default/example/text-polymorphic.tsx\"],\n    },\n    \"text-responsive\": {\n      name: \"text-responsive\",\n      type: \"components:example\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/example/text-responsive\")),\n      files: [\"registry/default/example/text-responsive.tsx\"],\n    },\n    \"text-truncate\": {\n      name: \"text-truncate\",\n      type: \"components:example\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/example/text-truncate\")),\n      files: [\"registry/default/example/text-truncate.tsx\"],\n    },\n    \"text-variants\": {\n      name: \"text-variants\",\n      type: \"components:example\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/example/text-variants\")),\n      files: [\"registry/default/example/text-variants.tsx\"],\n    },\n    \"mode-toggle\": {\n      name: \"mode-toggle\",\n      type: \"components:example\",\n      registryDependencies: undefined,\n      component: React.lazy(() => import(\"@/registry/default/example/mode-toggle\")),\n      files: [\"registry/default/example/mode-toggle.tsx\"],\n    },\n  },\n}\n",
    "dependencies": ["react"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/app/docs/[[...slug]]/page.tsx": {
    "source": "import { notFound } from \"next/navigation\"\nimport { allDocs } from \"contentlayer/generated\"\n\nimport \"@/styles/mdx.css\"\nimport type { Metadata } from \"next\"\nimport Link from \"next/link\"\nimport { ChevronRightIcon, ExternalLinkIcon } from \"@radix-ui/react-icons\"\n\nimport { siteConfig } from \"@/config/site\"\nimport { getTableOfContents } from \"@/lib/toc\"\nimport { absoluteUrl, cn } from \"@/lib/utils\"\nimport { Mdx } from \"@/components/mdx-components\"\nimport { PaddingBox } from \"@/components/padding-box\"\nimport { DocsPager } from \"@/components/pager\"\nimport { badgeVariants } from \"@/registry/default/ui/badge\"\n\ninterface DocPageProps {\n  params: {\n    slug: string[]\n  }\n}\n\nasync function getDocFromParams({ params }: DocPageProps) {\n  const slug = params.slug?.join(\"/\") || \"\"\n  const doc = allDocs.find((doc) => doc.slugAsParams === slug)\n\n  if (!doc) {\n    return null\n  }\n\n  return doc\n}\n\nexport async function generateMetadata({\n  params,\n}: DocPageProps): Promise<Metadata> {\n  const doc = await getDocFromParams({ params })\n\n  if (!doc) {\n    return {}\n  }\n\n  return {\n    title: doc.title,\n    description: doc.description,\n    openGraph: {\n      title: doc.title,\n      description: doc.description,\n      type: \"article\",\n      url: absoluteUrl(doc.slug),\n      images: [\n        {\n          url: siteConfig.ogImage,\n          width: 1200,\n          height: 630,\n          alt: siteConfig.name,\n        },\n      ],\n    },\n    twitter: {\n      card: \"summary_large_image\",\n      title: doc.title,\n      description: doc.description,\n      images: [siteConfig.ogImage],\n      creator: \"@whosmatu\",\n    },\n  }\n}\n\nexport async function generateStaticParams(): Promise<\n  DocPageProps[\"params\"][]\n> {\n  return allDocs.map((doc) => ({\n    slug: doc.slugAsParams.split(\"/\"),\n  }))\n}\n\nexport default async function DocPage({ params }: DocPageProps) {\n  const doc = await getDocFromParams({ params })\n\n  if (!doc) {\n    notFound()\n  }\n\n  const toc = await getTableOfContents(doc.body.raw)\n\n  return (\n    <main className=\"relative min-w-0 lg:gap-10\">\n      <div className=\"mx-auto w-full min-w-0\">\n        <PaddingBox>\n          <div className=\"mb-4 flex items-center space-x-1 text-sm text-muted-foreground\">\n            <div className=\"overflow-hidden text-ellipsis whitespace-nowrap\">\n              Docs\n            </div>\n            <ChevronRightIcon className=\"h-4 w-4\" />\n            <div className=\"font-medium text-foreground\">{doc.title}</div>\n          </div>\n          <div className=\"space-y-3\">\n            <h1\n              className={cn(\n                \"scroll-m-20 text-2xl font-semibold tracking-tight sm:text-[40px]\"\n              )}\n            >\n              {doc.title}\n            </h1>\n            {doc.description && (\n              <p className=\"text-base tracking-tight text-gray-900 sm:text-[20px]\">\n                {doc.description}\n              </p>\n            )}\n          </div>\n          {doc.links ? (\n            <div className=\"flex items-center space-x-2 pt-4\">\n              {doc.links?.doc && (\n                <Link\n                  href={doc.links.doc}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                  className={cn(\n                    badgeVariants({ variant: \"gray-subtle\" }),\n                    \"gap-1\"\n                  )}\n                >\n                  Docs\n                  <ExternalLinkIcon className=\"h-3 w-3\" />\n                </Link>\n              )}\n              {doc.links?.api && (\n                <Link\n                  href={doc.links.api}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                  className={cn(\n                    badgeVariants({ variant: \"blue-subtle\" }),\n                    \"gap-1\"\n                  )}\n                >\n                  API Reference\n                  <ExternalLinkIcon className=\"h-3 w-3\" />\n                </Link>\n              )}\n            </div>\n          ) : null}\n        </PaddingBox>\n\n        <div className=\"\">\n          <Mdx code={doc.body.code} />\n        </div>\n        <DocsPager doc={doc} />\n      </div>\n    </main>\n  )\n}\n",
    "dependencies": [
      "next/navigation",
      "contentlayer/generated",
      "@/styles/mdx.css",
      "next",
      "next/link",
      "@radix-ui/react-icons",
      "@/config/site",
      "@/lib/toc",
      "@/lib/utils",
      "@/components/mdx-components",
      "@/components/padding-box",
      "@/components/pager",
      "@/registry/default/ui/badge"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/app/docs/layout.tsx": {
    "source": "import { docsConfig } from \"@/config/docs\"\nimport { DocsSidebarNav } from \"@/components/sidebar-nav\"\nimport { ScrollArea } from \"@/registry/default/ui/scroll-area\"\n\ninterface DocsLayoutProps {\n  children: React.ReactNode\n}\n\nexport default function DocsLayout({ children }: DocsLayoutProps) {\n  return (\n    <div className=\"relative flex-1 items-start md:grid xl:grid-cols-[260px_1fr]\">\n      <aside className=\"z-100 sticky bottom-0 top-16 hidden h-[calc(100vh-64px)] min-h-0 w-full shrink-0 flex-col border-r border-border xl:flex\">\n        <div className=\"relative overflow-y-auto\">\n          <ScrollArea className=\"h-full px-6 pt-4\">\n            <DocsSidebarNav items={docsConfig.sidebarNav} />\n          </ScrollArea>\n        </div>\n      </aside>\n      {children}\n    </div>\n  )\n}\n",
    "dependencies": [
      "@/config/docs",
      "@/components/sidebar-nav",
      "@/registry/default/ui/scroll-area"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/app/examples/authentication/components/user-auth-form.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Icons } from \"@/components/icons\"\n\ninterface UserAuthFormProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nexport function UserAuthForm({ className, ...props }: UserAuthFormProps) {\n  const [isLoading, setIsLoading] = React.useState<boolean>(false)\n\n  async function onSubmit(event: React.SyntheticEvent) {\n    event.preventDefault()\n    setIsLoading(true)\n\n    setTimeout(() => {\n      setIsLoading(false)\n    }, 3000)\n  }\n\n  return (\n    <div className={cn(\"grid gap-6\", className)} {...props}>\n      <form onSubmit={onSubmit}>\n        <div className=\"grid gap-2\">hej</div>\n      </form>\n      <div className=\"relative\">\n        <div className=\"absolute inset-0 flex items-center\">\n          <span className=\"w-full border-t\" />\n        </div>\n        <div className=\"relative flex justify-center text-xs uppercase\">\n          <span className=\"bg-background-200 px-2 text-muted-foreground\">\n            Or continue with\n          </span>\n        </div>\n      </div>\n    </div>\n  )\n}\n",
    "dependencies": ["react", "@/lib/utils", "@/components/icons"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/app/examples/authentication/page.tsx": {
    "source": "import { Metadata } from \"next\"\nimport Image from \"next/image\"\nimport Link from \"next/link\"\n\nimport { cn } from \"@/lib/utils\"\nimport { UserAuthForm } from \"@/app/examples/authentication/components/user-auth-form\"\n\nexport const metadata: Metadata = {\n  title: \"Authentication\",\n  description: \"Authentication forms built using the components.\",\n}\n\nexport default function AuthenticationPage() {\n  return (\n    <>\n      <div className=\"md:hidden\">\n        <Image\n          src=\"/examples/authentication-light.png\"\n          width={1280}\n          height={843}\n          alt=\"Authentication\"\n          className=\"block dark:hidden\"\n        />\n        <Image\n          src=\"/examples/authentication-dark.png\"\n          width={1280}\n          height={843}\n          alt=\"Authentication\"\n          className=\"hidden dark:block\"\n        />\n      </div>\n      <div className=\"container relative hidden h-[800px] flex-col items-center justify-center md:grid lg:max-w-none lg:grid-cols-2 lg:px-0\">\n        Login\n        <div className=\"relative hidden h-full flex-col bg-muted p-10 text-white lg:flex dark:border-r\">\n          <div className=\"absolute inset-0 bg-zinc-900\" />\n          <div className=\"relative z-20 flex items-center text-lg font-medium\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              className=\"mr-2 h-6 w-6\"\n            >\n              <path d=\"M15 6v12a3 3 0 1 0 3-3H6a3 3 0 1 0 3 3V6a3 3 0 1 0-3 3h12a3 3 0 1 0-3-3\" />\n            </svg>\n            Acme Inc\n          </div>\n          <div className=\"relative z-20 mt-auto\">\n            <blockquote className=\"space-y-2\">\n              <p className=\"text-lg\">\n                &ldquo;This library has saved me countless hours of work and\n                helped me deliver stunning designs to my clients faster than\n                ever before.&rdquo;\n              </p>\n              <footer className=\"text-sm\">Sofia Davis</footer>\n            </blockquote>\n          </div>\n        </div>\n        <div className=\"lg:p-8\">\n          <div className=\"mx-auto flex w-full flex-col justify-center space-y-6 sm:w-[350px]\">\n            <div className=\"flex flex-col space-y-2 text-center\">\n              <h1 className=\"text-2xl font-semibold tracking-tight\">\n                Create an account\n              </h1>\n              <p className=\"text-sm text-muted-foreground\">\n                Enter your email below to create your account\n              </p>\n            </div>\n            <UserAuthForm />\n            <p className=\"px-8 text-center text-sm text-muted-foreground\">\n              By clicking continue, you agree to our{\" \"}\n              <Link\n                href=\"/terms\"\n                className=\"underline underline-offset-4 hover:text-primary\"\n              >\n                Terms of Service\n              </Link>{\" \"}\n              and{\" \"}\n              <Link\n                href=\"/privacy\"\n                className=\"underline underline-offset-4 hover:text-primary\"\n              >\n                Privacy Policy\n              </Link>\n              .\n            </p>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n",
    "dependencies": [
      "next",
      "next/image",
      "next/link",
      "@/lib/utils",
      "@/app/examples/authentication/components/user-auth-form"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/app/examples/layout.tsx": {
    "source": "import { Metadata } from \"next\"\nimport Link from \"next/link\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Announcement } from \"@/components/announcement\"\nimport { ExamplesNav } from \"@/components/examples-nav\"\nimport {\n  PageActions,\n  PageHeader,\n  PageHeaderDescription,\n  PageHeaderHeading,\n} from \"@/components/page-header\"\nimport { buttonVariants } from \"@/registry/default/ui/button\"\n\nexport const metadata: Metadata = {\n  title: \"Examples\",\n  description: \"Check out some examples app built using the components.\",\n}\n\ninterface ExamplesLayoutProps {\n  children: React.ReactNode\n}\n\nexport default function ExamplesLayout({ children }: ExamplesLayoutProps) {\n  return (\n    <>\n      <div className=\"container relative\">\n        <PageHeader>\n          <Announcement />\n          <PageHeaderHeading className=\"hidden md:block\">\n            Check out some examples\n          </PageHeaderHeading>\n          <PageHeaderHeading className=\"md:hidden\">Examples</PageHeaderHeading>\n          <PageHeaderDescription>\n            Dashboard, cards, authentication. Some examples built using the\n            components. Use this as a guide to build your own.\n          </PageHeaderDescription>\n          <PageActions>\n            <Link\n              href=\"/docs\"\n              className={cn(buttonVariants(), \"rounded-[6px]\")}\n            >\n              Get Started\n            </Link>\n            <Link\n              href=\"/components\"\n              className={cn(\n                buttonVariants({ variant: \"secondary\" }),\n                \"rounded-[6px]\"\n              )}\n            >\n              Components\n            </Link>\n          </PageActions>\n        </PageHeader>\n        <section>\n          <ExamplesNav />\n          <div className=\"overflow-hidden rounded-[0.5rem] border bg-background-200 shadow-md md:shadow-xl\">\n            {children}\n          </div>\n        </section>\n      </div>\n    </>\n  )\n}\n",
    "dependencies": [
      "next",
      "next/link",
      "@/lib/utils",
      "@/components/announcement",
      "@/components/examples-nav",
      "@/components/page-header",
      "@/registry/default/ui/button"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/app/layout.tsx": {
    "source": "import \"@/styles/globals.css\"\nimport { Metadata, Viewport } from \"next\"\n\nimport { siteConfig } from \"@/config/site\"\nimport { fontSans } from \"@/lib/fonts\"\nimport { cn } from \"@/lib/utils\"\nimport { Analytics } from \"@/components/analytics\"\nimport { ThemeProvider } from \"@/components/providers\"\nimport { SiteHeader } from \"@/components/site-header\"\nimport { TailwindIndicator } from \"@/components/tailwind-indicator\"\nimport { ThemeSwitcher } from \"@/components/theme-switcher\"\nimport { Toaster } from \"@/registry/default/ui/sonner\"\n\nexport const metadata: Metadata = {\n  title: {\n    default: siteConfig.name,\n    template: `%s - ${siteConfig.name}`,\n  },\n  metadataBase: new URL(siteConfig.url),\n  description: siteConfig.description,\n  keywords: [\n    \"Next.js\",\n    \"React\",\n    \"Vercel\",\n    \"Tailwind CSS\",\n    \"Server Components\",\n    \"Radix UI\",\n  ],\n  authors: [\n    {\n      name: \"Matheus\",\n      url: \"https://immatheus.com\",\n    },\n  ],\n  creator: \"Matheus\",\n  openGraph: {\n    type: \"website\",\n    locale: \"en_US\",\n    url: siteConfig.url,\n    title: siteConfig.name,\n    description: siteConfig.description,\n    siteName: siteConfig.name,\n    images: [\n      {\n        url: siteConfig.ogImage,\n        width: 1200,\n        height: 630,\n        alt: siteConfig.name,\n      },\n    ],\n  },\n  twitter: {\n    card: \"summary_large_image\",\n    title: siteConfig.name,\n    description: siteConfig.description,\n    images: [siteConfig.ogImage],\n    creator: \"@whosmatu\",\n  },\n  icons: {\n    icon: \"/favicon.ico\",\n    shortcut: \"/favicon-16x16.png\",\n    apple: \"/apple-touch-icon.png\",\n  },\n  manifest: `${siteConfig.url}/site.webmanifest`,\n}\n\nexport const viewport: Viewport = {\n  themeColor: [\n    { media: \"(prefers-color-scheme: light)\", color: \"white\" },\n    { media: \"(prefers-color-scheme: dark)\", color: \"black\" },\n  ],\n}\n\ninterface RootLayoutProps {\n  children: React.ReactNode\n}\n\nexport default function RootLayout({ children }: RootLayoutProps) {\n  return (\n    <>\n      <html lang=\"en\" suppressHydrationWarning>\n        <head />\n        <body\n          className={cn(\n            \"min-h-screen bg-background-200 font-sans antialiased\",\n            fontSans.className\n          )}\n        >\n          <ThemeProvider\n            attribute=\"class\"\n            defaultTheme=\"system\"\n            enableSystem\n            disableTransitionOnChange\n          >\n            <div vaul-drawer-wrapper=\"\">\n              <div className=\"relative flex min-h-screen flex-col bg-background-200\">\n                <SiteHeader />\n                <main className=\"mx-auto w-full min-w-0 max-w-[1220px] flex-1 sm:border-x sm:border-x-border\">\n                  {children}\n                </main>\n              </div>\n            </div>\n            <TailwindIndicator />\n            <ThemeSwitcher />\n            <Analytics />\n\n            <Toaster />\n          </ThemeProvider>\n        </body>\n      </html>\n    </>\n  )\n}\n",
    "dependencies": [
      "@/styles/globals.css",
      "next",
      "@/config/site",
      "@/lib/fonts",
      "@/lib/utils",
      "@/components/analytics",
      "@/components/providers",
      "@/components/site-header",
      "@/components/tailwind-indicator",
      "@/components/theme-switcher",
      "@/registry/default/ui/sonner"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/app/page.tsx": {
    "source": "import Link from \"next/link\"\nimport { UserPlus } from \"lucide-react\"\n\nimport { siteConfig } from \"@/config/site\"\nimport { cn } from \"@/lib/utils\"\nimport { Announcement } from \"@/components/announcement\"\nimport { Icons } from \"@/components/icons\"\nimport {\n  PageActions,\n  PageHeader,\n  PageHeaderDescription,\n  PageHeaderHeading,\n} from \"@/components/page-header\"\nimport { Badge } from \"@/registry/default/ui/badge\"\nimport { Button, buttonVariants } from \"@/registry/default/ui/button\"\nimport { Gauge } from \"@/registry/default/ui/gauge\"\nimport { Input } from \"@/registry/default/ui/input\"\nimport { Snippet } from \"@/registry/default/ui/snippet\"\nimport { Text } from \"@/registry/default/ui/text\"\n\nexport default function IndexPage() {\n  return (\n    <div className=\"\">\n      <div className=\"\">\n        <div className=\"container relative\">\n          <PageHeader>\n            <Announcement />\n            <PageHeaderHeading>Build your component library</PageHeaderHeading>\n            <PageHeaderDescription>\n              Beautifully designed components that you can copy and paste into\n              your apps. Accessible. Customizable. Open Source.\n            </PageHeaderDescription>\n            <PageActions className=\"md:pb-0\">\n              <Link href=\"/docs\" className={cn(buttonVariants())}>\n                Get Started\n              </Link>\n              <Link\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href={siteConfig.links.github}\n                className={cn(buttonVariants({ variant: \"secondary\" }))}\n              >\n                <Icons.gitHub className=\"mr-2 h-4 w-4\" />\n                GitHub\n              </Link>\n            </PageActions>\n          </PageHeader>\n        </div>\n\n        <div className=\"translate-y-4\">\n          <ComponentsPreview />\n        </div>\n      </div>\n      <section className=\"relative grid grid-rows-[repeat(2,calc(fit-content/2))] gap-[1px] border-y border-y-gray-200 bg-gray-200 md:grid-cols-2\">\n        <LinkBox\n          href=\"/docs/components\"\n          title=\"Components\"\n          description=\"Building blocks for React applications\"\n        >\n          <div className=\"flex flex-wrap gap-4 [&>*]:!text-gray-700\">\n            <Snippet\n              text=\"npm init next-app\"\n              className=\"w-[214px] md:w-[246px]\"\n            />\n            <Button\n              variant=\"secondary\"\n              prefix={<UserPlus className=\"h-4 w-4\" />}\n            >\n              Collaborate\n            </Button>\n            <Input\n              placeholder=\"Value\"\n              prefix=\"Label\"\n              className=\"w-[200px] md:w-[234px]\"\n            />\n          </div>\n        </LinkBox>\n\n        <LinkBox\n          href=\"/docs/colors\"\n          title=\"Colors\"\n          description=\"A high contrast, accessible color system.\"\n        >\n          <div className=\"flex justify-between\">\n            <div className=\"flex h-24 w-8 items-center justify-center rounded-full border bg-background-200\">\n              <div className=\"h-[72px] w-2 rounded-full bg-gray-800\"></div>\n            </div>\n            <div className=\"flex h-24 w-8 items-center justify-center rounded-full border bg-background-200\">\n              <div className=\"h-[72px] w-2 rounded-full bg-blue-800\"></div>\n            </div>\n            <div className=\"flex h-24 w-8 items-center justify-center rounded-full border bg-background-200\">\n              <div className=\"h-[72px] w-2 rounded-full bg-purple-800\"></div>\n            </div>\n            <div className=\"flex h-24 w-8 items-center justify-center rounded-full border bg-background-200\">\n              <div className=\"h-[72px] w-2 rounded-full bg-pink-800\"></div>\n            </div>\n            <div className=\"flex h-24 w-8 items-center justify-center rounded-full border bg-background-200\">\n              <div className=\"h-[72px] w-2 rounded-full bg-red-800\"></div>\n            </div>\n            <div className=\"flex h-24 w-8 items-center justify-center rounded-full border bg-background-200\">\n              <div className=\"h-[72px] w-2 rounded-full bg-amber-800\"></div>\n            </div>\n            <div className=\"flex h-24 w-8 items-center justify-center rounded-full border bg-background-200\">\n              <div className=\"h-[72px] w-2 rounded-full bg-green-800\"></div>\n            </div>\n            <div className=\"flex h-24 w-8 items-center justify-center rounded-full border bg-background-200\">\n              <div className=\"h-[72px] w-2 rounded-full bg-teal-800\"></div>\n            </div>\n          </div>\n        </LinkBox>\n\n        {/* <LinkBox\n          href=\"/docs/grid\"\n          title=\"Grid\"\n          description=\"A huge part of the new Vercel aesthetic\"\n        >\n          //  TODO update this once grid works \n          <div className=\"grid grid-cols-8 grid-rows-2 gap-[1px] border border-gray-400 bg-gray-400\">\n            {Array.from({ length: 16 }).map((_, index) => (\n              <div\n                key={index}\n                className=\"aspect-square bg-background-200 group-hover:bg-background-100\"\n              ></div>\n            ))}\n          </div>\n        </LinkBox>\n\n        <div className=\"relative flex h-full flex-col gap-6 bg-background-200 p-4 hover:bg-background-100\">\n          hej\n        </div> */}\n      </section>\n    </div>\n  )\n}\n\ninterface LinkBoxProps {\n  href: string\n  title: string\n  description: string\n  children: React.ReactNode\n}\n\nconst LinkBox: React.FC<LinkBoxProps> = ({\n  href,\n  title,\n  description,\n  children,\n}) => {\n  return (\n    <Link\n      href={href}\n      className=\"group relative flex h-full flex-col gap-6 bg-background-200 p-8 hover:bg-background-100\"\n    >\n      <div className=\"pointer-events-none flex-1\">{children}</div>\n      <div>\n        <Text size=\"heading-16\">{title}</Text>\n        <Text size={16} color=\"gray-900\">\n          {description}\n        </Text>\n      </div>\n      <div className=\"z-100 pointer-events-none absolute inset-0 border border-blue-700 opacity-0 group-focus-visible:opacity-100\"></div>\n    </Link>\n  )\n}\n\nconst ComponentsPreview: React.FC = ({}) => {\n  return (\n    <div\n      className=\"group w-full space-y-2 overflow-x-hidden [&>*>*]:pointer-events-none\"\n      style={{ \"--offset\": \"75px\" } as React.CSSProperties}\n    >\n      <div className=\"relative left-1/2 flex w-max translate-x-[calc(-50%_+_var(--offset))] gap-2 transition-transform duration-300 group-hover:translate-x-[calc(-50%_-_var(--offset))]\">\n        <Button shadow shape=\"rounded\" variant=\"error\" loading size=\"small\">\n          Saving\n        </Button>\n        <Button variant=\"default\" shape=\"rounded\" size=\"small\">\n          Long save button\n        </Button>\n        <Button disabled size=\"small\">\n          Save\n        </Button>\n        <Button variant=\"warning\" size=\"small\">\n          Warning\n        </Button>\n        <Button variant=\"secondary\" size=\"small\">\n          Action\n        </Button>\n        <Button variant=\"secondary\" shadow shape=\"rounded\" size=\"small\">\n          Super long button\n        </Button>\n        <Button variant=\"error\" size=\"small\">\n          Delete\n        </Button>\n        <Button variant=\"default\" size=\"small\">\n          Save\n        </Button>\n        <Button shadow shape=\"rounded\" variant=\"error\" size=\"small\">\n          Round delete\n        </Button>\n        <Button shadow shape=\"rounded\" variant=\"secondary\" size=\"small\">\n          Logout\n        </Button>\n        <Button shadow shape=\"rounded\" variant=\"error\" loading size=\"small\">\n          Saving\n        </Button>\n        <Button shadow shape=\"rounded\" variant=\"error\" size=\"small\">\n          Logout\n        </Button>\n        <Button loading size=\"small\">\n          Upload\n        </Button>\n\n        <Button shadow shape=\"rounded\" variant=\"error\" loading size=\"small\">\n          Saving\n        </Button>\n        <Button variant=\"default\" shape=\"rounded\" size=\"small\">\n          Long save button\n        </Button>\n        <Button disabled size=\"small\">\n          Save\n        </Button>\n        <Button variant=\"warning\" size=\"small\">\n          Warning\n        </Button>\n        <Button variant=\"secondary\" size=\"small\">\n          Action\n        </Button>\n        <Button variant=\"secondary\" shadow shape=\"rounded\" size=\"small\">\n          Super long button\n        </Button>\n        <Button variant=\"error\" size=\"small\">\n          Delete\n        </Button>\n        <Button variant=\"default\" size=\"small\">\n          Save\n        </Button>\n        <Button shadow shape=\"rounded\" variant=\"error\" size=\"small\">\n          Round delete\n        </Button>\n        <Button shadow shape=\"rounded\" variant=\"secondary\" size=\"small\">\n          Logout\n        </Button>\n\n        <Button variant=\"error\" size=\"small\">\n          Delete\n        </Button>\n        <Button variant=\"default\" size=\"small\">\n          Save\n        </Button>\n        <Button shadow shape=\"rounded\" variant=\"error\" size=\"small\">\n          Round delete\n        </Button>\n        <Button shadow shape=\"rounded\" variant=\"secondary\" size=\"small\">\n          Logout\n        </Button>\n        <Button shadow shape=\"rounded\" variant=\"error\" loading size=\"small\">\n          Saving\n        </Button>\n        <Button shadow shape=\"rounded\" variant=\"error\" size=\"small\">\n          Logout\n        </Button>\n        <Button loading size=\"small\">\n          Upload\n        </Button>\n      </div>\n\n      <div className=\"delay-[50ms] relative left-1/2 mb-2 flex w-max translate-x-[calc(-50%_-_var(--offset))] gap-2 transition-transform duration-300 group-hover:translate-x-[calc(-50%_+_var(--offset))]\">\n        <Badge variant=\"gray\">gray</Badge>\n        <Badge variant=\"gray-subtle\">gray-subtle</Badge>\n        <Badge variant=\"blue\">blue</Badge>\n\n        <Badge variant=\"pink-subtle\">pink-subtle</Badge>\n        <Badge variant=\"green\">green</Badge>\n        <Badge variant=\"green-subtle\">green-subtle</Badge>\n        <Badge variant=\"teal\">teal</Badge>\n        <Badge variant=\"teal-subtle\">teal-subtle</Badge>\n        <Badge variant=\"blue-subtle\">blue-subtle</Badge>\n        <Badge variant=\"purple\">purple</Badge>\n        <Badge variant=\"purple-subtle\">purple-subtle</Badge>\n\n        <Badge variant=\"gray\">gray</Badge>\n        <Badge variant=\"gray-subtle\">gray-subtle</Badge>\n        <Badge variant=\"blue\">blue</Badge>\n        <Badge variant=\"blue-subtle\">blue-subtle</Badge>\n        <Badge variant=\"purple\">purple</Badge>\n        <Badge variant=\"purple-subtle\">purple-subtle</Badge>\n        <Badge variant=\"amber\">amber</Badge>\n        <Badge variant=\"amber-subtle\">amber-subtle</Badge>\n        <Badge variant=\"red\">red</Badge>\n        <Badge variant=\"red-subtle\">red-subtle</Badge>\n        <Badge variant=\"pink\">pink</Badge>\n        <Badge variant=\"amber\">amber</Badge>\n        <Badge variant=\"amber-subtle\">amber-subtle</Badge>\n        <Badge variant=\"red\">red</Badge>\n        <Badge variant=\"red-subtle\">red-subtle</Badge>\n        <Badge variant=\"pink\">pink</Badge>\n        <Badge variant=\"pink-subtle\">pink-subtle</Badge>\n        <Badge variant=\"green\">green</Badge>\n        <Badge variant=\"green-subtle\">green-subtle</Badge>\n        <Badge variant=\"teal\">teal</Badge>\n        <Badge variant=\"teal-subtle\">teal-subtle</Badge>\n      </div>\n\n      <div className=\"relative left-1/2 flex w-max translate-x-[calc(-50%_+_var(--offset))] gap-2 transition-transform delay-100 duration-300 group-hover:translate-x-[calc(-50%_-_var(--offset))]\">\n        <Gauge size=\"small\" value={50} />\n        <Gauge size=\"small\" value={80} />\n        <Gauge size=\"small\" value={10} />\n        <Gauge size=\"small\" value={15} />\n        <Gauge size=\"small\" value={95} />\n        <Gauge size=\"small\" value={35} />\n        <Gauge size=\"small\" value={100} />\n        <Gauge size=\"small\" value={5} />\n        <Gauge size=\"small\" value={67} />\n        <Gauge size=\"small\" value={76} />\n        <Gauge size=\"small\" value={46} />\n        <Gauge size=\"small\" value={52} />\n        <Gauge size=\"small\" value={38} />\n        <Gauge size=\"small\" value={81} />\n        <Gauge size=\"small\" value={50} />\n        <Gauge size=\"small\" value={80} />\n        <Gauge size=\"small\" value={10} />\n        <Gauge size=\"small\" value={15} />\n        <Gauge size=\"small\" value={95} />\n        <Gauge size=\"small\" value={35} />\n        <Gauge size=\"small\" value={100} />\n        <Gauge size=\"small\" value={5} />\n        <Gauge size=\"small\" value={67} />\n        <Gauge size=\"small\" value={76} />\n        <Gauge size=\"small\" value={46} />\n        <Gauge size=\"small\" value={52} />\n        <Gauge size=\"small\" value={38} />\n        <Gauge size=\"small\" value={81} />\n        <Gauge size=\"small\" value={50} />\n        <Gauge size=\"small\" value={80} />\n        <Gauge size=\"small\" value={10} />\n        <Gauge size=\"small\" value={15} />\n        <Gauge size=\"small\" value={95} />\n        <Gauge size=\"small\" value={35} />\n        <Gauge size=\"small\" value={100} />\n        <Gauge size=\"small\" value={5} />\n        <Gauge size=\"small\" value={67} />\n        <Gauge size=\"small\" value={76} />\n        <Gauge size=\"small\" value={46} />\n        <Gauge size=\"small\" value={52} />\n        <Gauge size=\"small\" value={38} />\n        <Gauge size=\"small\" value={81} />\n\n        <Gauge size=\"small\" value={67} />\n        <Gauge size=\"small\" value={76} />\n        <Gauge size=\"small\" value={46} />\n        <Gauge size=\"small\" value={52} />\n        <Gauge size=\"small\" value={38} />\n        <Gauge size=\"small\" value={81} />\n        <Gauge size=\"small\" value={50} />\n        <Gauge size=\"small\" value={80} />\n        <Gauge size=\"small\" value={10} />\n        <Gauge size=\"small\" value={15} />\n        <Gauge size=\"small\" value={95} />\n\n        <Gauge size=\"small\" value={67} />\n        <Gauge size=\"small\" value={76} />\n        <Gauge size=\"small\" value={46} />\n        <Gauge size=\"small\" value={52} />\n        <Gauge size=\"small\" value={38} />\n        <Gauge size=\"small\" value={81} />\n        <Gauge size=\"small\" value={50} />\n        <Gauge size=\"small\" value={80} />\n        <Gauge size=\"small\" value={10} />\n        <Gauge size=\"small\" value={15} />\n        <Gauge size=\"small\" value={95} />\n      </div>\n\n      <div className=\"relative left-1/2 flex w-max translate-x-[calc(-50%_-_var(--offset))] gap-2 transition-transform delay-150 duration-300 group-hover:translate-x-[calc(-50%_+_var(--offset))]\">\n        <Snippet text=\"npm init next-app\" width=\"230px\" />\n        <Snippet text=\"Blue\" prompt={false} type=\"success\" width=\"120px\" />\n        <Snippet text=\"Matheus\" width=\"200px\" />\n        <Snippet text=\"Is this red?\" type=\"error\" width=\"250px\" />\n        <Snippet text=\"Vaaarning\" type=\"warning\" width=\"250px\" />\n        <Snippet text=\"npm init next-app\" width=\"230px\" />\n\n        <Snippet text=\"npm init next-app\" width=\"230px\" />\n        <Snippet text=\"Blue\" prompt={false} type=\"success\" width=\"120px\" />\n        <Snippet text=\"Matheus\" width=\"200px\" />\n        <Snippet text=\"Is this red?\" type=\"error\" width=\"250px\" />\n        <Snippet text=\"Vaaarning\" type=\"warning\" width=\"180px\" />\n        <Snippet text=\"npm init next-app\" width=\"230px\" />\n        <Snippet text=\"npm init next-app\" width=\"230px\" />\n\n        <Snippet text=\"Blue\" prompt={false} type=\"success\" width=\"120px\" />\n        <Snippet text=\"Matheus\" width=\"200px\" />\n        <Snippet text=\"Is this red?\" type=\"error\" width=\"250px\" />\n        <Snippet text=\"Vaaarning\" type=\"warning\" width=\"250px\" />\n        <Snippet text=\"npm init next-app\" width=\"230px\" />\n      </div>\n    </div>\n  )\n}\n",
    "dependencies": [
      "next/link",
      "lucide-react",
      "@/config/site",
      "@/lib/utils",
      "@/components/announcement",
      "@/components/icons",
      "@/components/page-header",
      "@/registry/default/ui/badge",
      "@/registry/default/ui/button",
      "@/registry/default/ui/gauge",
      "@/registry/default/ui/input",
      "@/registry/default/ui/snippet",
      "@/registry/default/ui/text"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/components/analytics.tsx": {
    "source": "\"use client\"\n\nimport { Analytics as VercelAnalytics } from \"@vercel/analytics/react\"\n\nexport function Analytics() {\n  return <VercelAnalytics />\n}\n",
    "dependencies": ["@vercel/analytics/react"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/components/announcement.tsx": {
    "source": "import { Badge } from \"@/registry/default/ui/badge\"\n\nexport function Announcement() {\n  return (\n    <Badge variant=\"blue-subtle\" size=\"lg\">\n      Just Released In Alpha 🎉\n    </Badge>\n  )\n}\n",
    "dependencies": ["@/registry/default/ui/badge"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/components/callout.tsx": {
    "source": "import {\n  Alert,\n  AlertDescription,\n  AlertTitle,\n} from \"@/registry/default/ui/alert\"\n\ninterface CalloutProps {\n  icon?: string\n  title?: string\n  children?: React.ReactNode\n}\n\nexport function Callout({ title, children, icon, ...props }: CalloutProps) {\n  return (\n    <Alert {...props}>\n      {icon && <span className=\"mr-4 text-2xl\">{icon}</span>}\n      {title && <AlertTitle>{title}</AlertTitle>}\n      <AlertDescription>{children}</AlertDescription>\n    </Alert>\n  )\n}\n",
    "dependencies": ["@/registry/default/ui/alert"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/components/code-block-wrapper.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/registry/default/ui/button\"\nimport {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleTrigger,\n} from \"@/registry/default/ui/collapsible\"\n\ninterface CodeBlockProps extends React.HTMLAttributes<HTMLDivElement> {\n  expandButtonTitle?: string\n}\n\nexport function CodeBlockWrapper({\n  expandButtonTitle = \"View Code\",\n  className,\n  children,\n  ...props\n}: CodeBlockProps) {\n  const [isOpened, setIsOpened] = React.useState(false)\n\n  return (\n    <Collapsible open={isOpened} onOpenChange={setIsOpened}>\n      <div className={cn(\"relative overflow-hidden\", className)} {...props}>\n        <CollapsibleContent\n          forceMount\n          className={cn(\"overflow-hidden\", !isOpened && \"max-h-32\")}\n        >\n          <div\n            className={cn(\n              \"[&_pre]:my-0 [&_pre]:max-h-[650px] [&_pre]:pb-[100px]\",\n              !isOpened ? \"[&_pre]:overflow-hidden\" : \"[&_pre]:overflow-auto]\"\n            )}\n          >\n            {children}\n          </div>\n        </CollapsibleContent>\n        <div\n          className={cn(\n            \"absolute flex items-center justify-center bg-gradient-to-b from-zinc-700/30 to-zinc-950/90 p-2\",\n            isOpened ? \"inset-x-0 bottom-0 h-12\" : \"inset-0\"\n          )}\n        >\n          <CollapsibleTrigger asChild>\n            <Button variant=\"secondary\" className=\"h-8 text-xs\">\n              {isOpened ? \"Collapse\" : expandButtonTitle}\n            </Button>\n          </CollapsibleTrigger>\n        </div>\n      </div>\n    </Collapsible>\n  )\n}\n",
    "dependencies": [
      "react",
      "@/lib/utils",
      "@/registry/default/ui/button",
      "@/registry/default/ui/collapsible"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/components/command-menu.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\nimport { useRouter } from \"next/navigation\"\nimport { DialogProps } from \"@radix-ui/react-alert-dialog\"\nimport {\n  CircleIcon,\n  FileIcon,\n  LaptopIcon,\n  MoonIcon,\n  SunIcon,\n} from \"@radix-ui/react-icons\"\nimport { useTheme } from \"next-themes\"\n\nimport { docsConfig } from \"@/config/docs\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/registry/default/ui/button\"\nimport {\n  CommandDialog,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n  CommandSeparator,\n} from \"@/registry/default/ui/command\"\n\nexport function CommandMenu({ ...props }: DialogProps) {\n  const router = useRouter()\n  const [open, setOpen] = React.useState(false)\n  const { setTheme } = useTheme()\n\n  React.useEffect(() => {\n    const down = (e: KeyboardEvent) => {\n      if ((e.key === \"k\" && (e.metaKey || e.ctrlKey)) || e.key === \"/\") {\n        if (\n          (e.target instanceof HTMLElement && e.target.isContentEditable) ||\n          e.target instanceof HTMLInputElement ||\n          e.target instanceof HTMLTextAreaElement ||\n          e.target instanceof HTMLSelectElement\n        ) {\n          return\n        }\n\n        e.preventDefault()\n        setOpen((open) => !open)\n      }\n    }\n\n    document.addEventListener(\"keydown\", down)\n    return () => document.removeEventListener(\"keydown\", down)\n  }, [])\n\n  const runCommand = React.useCallback((command: () => unknown) => {\n    setOpen(false)\n    command()\n  }, [])\n\n  return (\n    <>\n      <Button\n        variant=\"secondary\"\n        className={cn(\n          \"relative h-8 w-full justify-start rounded-[0.5rem] bg-background-200 text-sm font-normal text-muted-foreground shadow-none sm:pr-12 md:w-40 lg:w-64\"\n        )}\n        onClick={() => setOpen(true)}\n        {...props}\n      >\n        <span className=\"hidden lg:inline-flex\">Search documentation...</span>\n        <span className=\"inline-flex lg:hidden\">Search...</span>\n        <kbd className=\"pointer-events-none absolute right-[0.3rem] top-[0.3rem] hidden h-5 select-none items-center gap-1 rounded border bg-muted px-1.5 font-mono text-[10px] font-medium opacity-100 sm:flex\">\n          <span className=\"text-xs\">⌘</span>K\n        </kbd>\n      </Button>\n      <CommandDialog open={open} onOpenChange={setOpen}>\n        <CommandInput placeholder=\"Type a command or search...\" />\n        <CommandList>\n          <CommandEmpty>No results found.</CommandEmpty>\n          <CommandGroup heading=\"Links\">\n            {docsConfig.mainNav\n              .filter((navitem) => !navitem.external)\n              .map((navItem) => (\n                <CommandItem\n                  key={navItem.href}\n                  value={navItem.title}\n                  onSelect={() => {\n                    runCommand(() => router.push(navItem.href as string))\n                  }}\n                >\n                  <FileIcon className=\"mr-2 h-4 w-4\" />\n                  {navItem.title}\n                </CommandItem>\n              ))}\n          </CommandGroup>\n          {docsConfig.sidebarNav.map((group) => (\n            <CommandGroup key={group.title} heading={group.title}>\n              {group.items.map((navItem) => (\n                <CommandItem\n                  key={navItem.href}\n                  value={navItem.title}\n                  onSelect={() => {\n                    runCommand(() => router.push(navItem.href as string))\n                  }}\n                >\n                  <div className=\"mr-2 flex h-4 w-4 items-center justify-center\">\n                    <CircleIcon className=\"h-3 w-3\" />\n                  </div>\n                  {navItem.title}\n                </CommandItem>\n              ))}\n            </CommandGroup>\n          ))}\n          <CommandSeparator />\n          <CommandGroup heading=\"Theme\">\n            <CommandItem onSelect={() => runCommand(() => setTheme(\"light\"))}>\n              <SunIcon className=\"mr-2 h-4 w-4\" />\n              Light\n            </CommandItem>\n            <CommandItem onSelect={() => runCommand(() => setTheme(\"dark\"))}>\n              <MoonIcon className=\"mr-2 h-4 w-4\" />\n              Dark\n            </CommandItem>\n            <CommandItem onSelect={() => runCommand(() => setTheme(\"system\"))}>\n              <LaptopIcon className=\"mr-2 h-4 w-4\" />\n              System\n            </CommandItem>\n          </CommandGroup>\n        </CommandList>\n      </CommandDialog>\n    </>\n  )\n}\n",
    "dependencies": [
      "react",
      "next/navigation",
      "@radix-ui/react-alert-dialog",
      "@radix-ui/react-icons",
      "next-themes",
      "@/config/docs",
      "@/lib/utils",
      "@/registry/default/ui/button",
      "@/registry/default/ui/command"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/components/component-card.tsx": {
    "source": "import React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { AspectRatio } from \"@/registry/default/ui/aspect-ratio\"\n\nexport function ComponentCard({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <AspectRatio ratio={1 / 1} asChild>\n      <div\n        className={cn(\n          \"flex items-center justify-center rounded-md border p-8\",\n          className\n        )}\n        {...props}\n      />\n    </AspectRatio>\n  )\n}\n",
    "dependencies": [
      "react",
      "@/lib/utils",
      "@/registry/default/ui/aspect-ratio"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/components/component-example.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { CopyButton, CopyWithClassNames } from \"@/components/copy-button\"\nimport {\n  Tabs,\n  TabsContent,\n  TabsList,\n  TabsTrigger,\n} from \"@/registry/default/ui/tabs\"\n\ninterface ComponentExampleProps extends React.HTMLAttributes<HTMLDivElement> {\n  extractClassname?: boolean\n  extractedClassNames?: string\n  align?: \"center\" | \"start\" | \"end\"\n  src?: string\n}\n\nexport function ComponentExample({\n  children,\n  className,\n  extractClassname,\n  extractedClassNames,\n  align = \"center\",\n  src: _,\n  ...props\n}: ComponentExampleProps) {\n  const [Example, Code, ...Children] = React.Children.toArray(\n    children\n  ) as React.ReactElement[]\n\n  const codeString = React.useMemo(() => {\n    if (\n      typeof Code?.props[\"data-rehype-pretty-code-fragment\"] !== \"undefined\"\n    ) {\n      const [, Button] = React.Children.toArray(\n        Code.props.children\n      ) as React.ReactElement[]\n      return Button?.props?.value || Button?.props?.__rawString__ || null\n    }\n  }, [Code])\n\n  return (\n    <div\n      className={cn(\"group relative my-4 flex flex-col space-y-2\", className)}\n      {...props}\n    >\n      <Tabs defaultValue=\"preview\" className=\"relative mr-auto w-full\">\n        <div className=\"flex items-center justify-between pb-3\">\n          <TabsList className=\"w-full justify-start rounded-none border-b bg-transparent p-0\">\n            <TabsTrigger\n              value=\"preview\"\n              className=\"relative rounded-none border-b-2 border-b-transparent bg-transparent px-4 pb-3 pt-2 font-semibold text-muted-foreground shadow-none transition-none data-[state=active]:border-b-primary data-[state=active]:text-foreground data-[state=active]:shadow-none\"\n            >\n              Preview\n            </TabsTrigger>\n            <TabsTrigger\n              value=\"code\"\n              className=\"relative rounded-none border-b-2 border-b-transparent bg-transparent px-4 pb-3 pt-2 font-semibold text-muted-foreground shadow-none transition-none data-[state=active]:border-b-primary data-[state=active]:text-foreground data-[state=active]:shadow-none\"\n            >\n              Code\n            </TabsTrigger>\n          </TabsList>\n          {extractedClassNames ? (\n            <CopyWithClassNames\n              value={codeString}\n              classNames={extractedClassNames}\n              className=\"absolute right-4 top-20\"\n            />\n          ) : (\n            codeString && (\n              <CopyButton\n                value={codeString}\n                className=\"absolute right-4 top-20\"\n              />\n            )\n          )}\n        </div>\n        <TabsContent value=\"preview\" className=\"rounded-md border\">\n          <div\n            className={cn(\"flex min-h-[350px] justify-center p-10\", {\n              \"items-center\": align === \"center\",\n              \"items-start\": align === \"start\",\n              \"items-end\": align === \"end\",\n            })}\n          >\n            {Example}\n          </div>\n        </TabsContent>\n        <TabsContent value=\"code\">\n          <div className=\"flex flex-col space-y-4\">\n            <div className=\"w-full rounded-md [&_button]:hidden [&_pre]:my-0 [&_pre]:max-h-[350px] [&_pre]:overflow-auto\">\n              {Code}\n            </div>\n            {Children?.length ? (\n              <div className=\"rounded-md [&_button]:hidden [&_pre]:my-0 [&_pre]:max-h-[350px] [&_pre]:overflow-auto\">\n                {Children}\n              </div>\n            ) : null}\n          </div>\n        </TabsContent>\n      </Tabs>\n    </div>\n  )\n}\n",
    "dependencies": [
      "react",
      "@/lib/utils",
      "@/components/copy-button",
      "@/registry/default/ui/tabs"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/components/component-preview.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\nimport { Index } from \"@/__registry__\"\nimport * as Accordion from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { useConfig } from \"@/hooks/use-config\"\nimport { CopyButton, CopyWithClassNames } from \"@/components/copy-button\"\nimport { Icons } from \"@/components/icons\"\nimport { ThemeWrapper } from \"@/components/theme-wrapper\"\nimport { styles } from \"@/registry/styles\"\n\ninterface ComponentPreviewProps extends React.HTMLAttributes<HTMLDivElement> {\n  name: string\n  extractClassname?: boolean\n  extractedClassNames?: string\n  align?: \"center\" | \"start\" | \"end\"\n}\n\nexport function ComponentPreview({\n  name,\n  children,\n  className,\n  extractClassname,\n  extractedClassNames,\n  align = \"center\",\n  ...props\n}: ComponentPreviewProps) {\n  const [config] = useConfig()\n  const index = styles.findIndex((style) => style.name === config.style)\n\n  const Codes = React.Children.toArray(children) as React.ReactElement[]\n  const Code = Codes[index]\n\n  const Preview = React.useMemo(() => {\n    const Component = Index[config.style][name]?.component\n\n    if (!Component) {\n      return (\n        <p className=\"text-sm text-muted-foreground\">\n          Component{\" \"}\n          <code className=\"relative rounded bg-muted px-[0.3rem] py-[0.2rem] font-mono text-sm\">\n            {name}\n          </code>{\" \"}\n          not found in registry.\n        </p>\n      )\n    }\n\n    return <Component />\n  }, [name, config.style])\n\n  const codeString = React.useMemo(() => {\n    if (\n      typeof Code?.props[\"data-rehype-pretty-code-fragment\"] !== \"undefined\"\n    ) {\n      const [, Button] = React.Children.toArray(\n        Code.props.children\n      ) as React.ReactElement[]\n      return Button?.props?.value || Button?.props?.__rawString__ || null\n    }\n  }, [Code])\n\n  return (\n    <div\n      className={cn(\n        \"group relative overflow-hidden rounded-xl border border-gray-alpha-400 bg-background-100\",\n        className\n      )}\n      {...props}\n    >\n      {extractedClassNames && codeString && (\n        <div className=\"flex items-center justify-between p-4\">\n          {extractedClassNames ? (\n            <CopyWithClassNames\n              value={codeString}\n              classNames={extractedClassNames}\n            />\n          ) : (\n            codeString && <CopyButton value={codeString} />\n          )}\n        </div>\n      )}\n      <ThemeWrapper defaultTheme=\"zinc\">\n        <div\n          className={cn(\"w-full p-6\", {\n            \"items-center\": align === \"center\",\n            \"items-start\": align === \"start\",\n            \"items-end\": align === \"end\",\n          })}\n        >\n          <React.Suspense\n            fallback={\n              <div className=\"flex items-center text-sm text-muted-foreground\">\n                <Icons.spinner className=\"mr-2 h-4 w-4 animate-spin\" />\n                Loading...\n              </div>\n            }\n          >\n            {Preview}\n          </React.Suspense>\n        </div>\n      </ThemeWrapper>\n\n      <Accordion.Root type=\"single\" collapsible>\n        <Accordion.Item value=\"code\">\n          <Accordion.Header className=\"border-t border-t-gray-alpha-400 bg-background-200 px-4 text-sm text-gray-900\">\n            <Accordion.Trigger className=\"group flex h-12 items-center gap-3\">\n              <ChevronDown\n                className=\"h-4 w-4 group-data-[state=closed]:-rotate-90\"\n                aria-hidden\n              />\n              <p className=\"hidden group-data-[state=open]:block\">Hide code</p>\n              <p className=\"group-data-[state=open]:hidden\">Show code</p>\n            </Accordion.Trigger>\n          </Accordion.Header>\n          <Accordion.Content>\n            <div className=\"border-flex-col flex space-y-4 border-t border-gray-alpha-400\">\n              <div className=\"w-full [&_pre]:my-0 [&_pre]:overflow-auto\">\n                {Code}\n              </div>\n            </div>\n          </Accordion.Content>\n        </Accordion.Item>\n      </Accordion.Root>\n    </div>\n  )\n}\n",
    "dependencies": [
      "react",
      "@/__registry__",
      "@radix-ui/react-accordion",
      "lucide-react",
      "@/lib/utils",
      "@/hooks/use-config",
      "@/components/copy-button",
      "@/components/icons",
      "@/components/theme-wrapper",
      "@/registry/styles"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/components/component-source.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { CodeBlockWrapper } from \"@/components/code-block-wrapper\"\n\ninterface ComponentSourceProps extends React.HTMLAttributes<HTMLDivElement> {\n  src: string\n}\n\nexport function ComponentSource({\n  children,\n  className,\n  ...props\n}: ComponentSourceProps) {\n  return (\n    <CodeBlockWrapper\n      expandButtonTitle=\"Expand\"\n      className={cn(\"my-6 overflow-hidden rounded-md\", className)}\n    >\n      {children}\n    </CodeBlockWrapper>\n  )\n}\n",
    "dependencies": ["react", "@/lib/utils", "@/components/code-block-wrapper"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/components/copy-button.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\nimport { DropdownMenuTriggerProps } from \"@radix-ui/react-dropdown-menu\"\nimport { CheckIcon, CopyIcon } from \"@radix-ui/react-icons\"\nimport { NpmCommands } from \"types/unist\"\n\nimport { Event, trackEvent } from \"@/lib/events\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/registry/default/ui/button\"\nimport {\n  Menu,\n  MenuButton,\n  MenuContainer,\n  MenuItem,\n} from \"@/registry/default/ui/menu\"\n\ninterface CopyButtonProps extends React.HTMLAttributes<HTMLButtonElement> {\n  value: string\n  src?: string\n  event?: Event[\"name\"]\n}\n\nexport async function copyToClipboardWithMeta(value: string, event?: Event) {\n  navigator.clipboard.writeText(value)\n  if (event) {\n    trackEvent(event)\n  }\n}\n\nexport function CopyButton({\n  value,\n  className,\n  src,\n  event,\n  ...props\n}: CopyButtonProps) {\n  const [hasCopied, setHasCopied] = React.useState(false)\n\n  React.useEffect(() => {\n    setTimeout(() => {\n      setHasCopied(false)\n    }, 2000)\n  }, [hasCopied])\n\n  // TODO change this to icon button\n  return (\n    <Button\n      size=\"sm\"\n      variant=\"tertiary\"\n      className={cn(\"relative z-10 h-6 w-6\", className)}\n      onClick={() => {\n        copyToClipboardWithMeta(\n          value,\n          event\n            ? {\n                name: event,\n                properties: {\n                  code: value,\n                },\n              }\n            : undefined\n        )\n        setHasCopied(true)\n      }}\n      {...props}\n    >\n      <span className=\"sr-only\">Copy</span>\n      {hasCopied ? (\n        <CheckIcon className=\"h-3 w-3\" />\n      ) : (\n        <CopyIcon className=\"h-3 w-3\" />\n      )}\n    </Button>\n  )\n}\n\ninterface CopyWithClassNamesProps extends DropdownMenuTriggerProps {\n  value: string\n  classNames: string\n  className?: string\n}\n\nexport function CopyWithClassNames({\n  value,\n  classNames,\n  className,\n  ...props\n}: CopyWithClassNamesProps) {\n  const [hasCopied, setHasCopied] = React.useState(false)\n\n  React.useEffect(() => {\n    setTimeout(() => {\n      setHasCopied(false)\n    }, 2000)\n  }, [hasCopied])\n\n  const copyToClipboard = React.useCallback((value: string) => {\n    copyToClipboardWithMeta(value)\n    setHasCopied(true)\n  }, [])\n\n  // TODO change this to icon button\n  return (\n    <MenuContainer>\n      <MenuButton asChild>\n        {hasCopied ? (\n          <CheckIcon className=\"h-3 w-3\" />\n        ) : (\n          <CopyIcon className=\"h-3 w-3\" />\n        )}\n        <span className=\"sr-only\">Copy</span>\n      </MenuButton>\n      <Menu align=\"end\">\n        <MenuItem onClick={() => copyToClipboard(value)}>Component</MenuItem>\n        <MenuItem onClick={() => copyToClipboard(classNames)}>\n          Classname\n        </MenuItem>\n      </Menu>\n    </MenuContainer>\n  )\n}\n\ninterface CopyNpmCommandButtonProps extends DropdownMenuTriggerProps {\n  commands: Required<NpmCommands>\n}\n\nexport function CopyNpmCommandButton({\n  commands,\n  className,\n  ...props\n}: CopyNpmCommandButtonProps) {\n  const [hasCopied, setHasCopied] = React.useState(false)\n\n  React.useEffect(() => {\n    setTimeout(() => {\n      setHasCopied(false)\n    }, 2000)\n  }, [hasCopied])\n\n  const copyCommand = React.useCallback(\n    (value: string, pm: \"npm\" | \"pnpm\" | \"yarn\" | \"bun\") => {\n      copyToClipboardWithMeta(value, {\n        name: \"copy_npm_command\",\n        properties: {\n          command: value,\n          pm,\n        },\n      })\n      setHasCopied(true)\n    },\n    []\n  )\n\n  // TODO change this to icon button\n  return (\n    <MenuContainer>\n      <MenuButton>\n        {hasCopied ? (\n          <CheckIcon className=\"h-3 w-3\" />\n        ) : (\n          <CopyIcon className=\"h-3 w-3\" />\n        )}\n        <span className=\"sr-only\">Copy</span>\n      </MenuButton>\n      <Menu align=\"end\">\n        <MenuItem onClick={() => copyCommand(commands.__npmCommand__, \"npm\")}>\n          npm\n        </MenuItem>\n        <MenuItem onClick={() => copyCommand(commands.__yarnCommand__, \"yarn\")}>\n          yarn\n        </MenuItem>\n        <MenuItem onClick={() => copyCommand(commands.__pnpmCommand__, \"pnpm\")}>\n          pnpm\n        </MenuItem>\n        <MenuItem onClick={() => copyCommand(commands.__bunCommand__, \"bun\")}>\n          bun\n        </MenuItem>\n      </Menu>\n    </MenuContainer>\n  )\n}\n",
    "dependencies": [
      "react",
      "@radix-ui/react-dropdown-menu",
      "@radix-ui/react-icons",
      "types/unist",
      "@/lib/events",
      "@/lib/utils",
      "@/registry/default/ui/button",
      "@/registry/default/ui/menu"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/components/drawer.tsx": {
    "source": "\"use client\"\n\nimport { forwardRef } from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerContent = forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPrimitive.Portal>\n    <DrawerPrimitive.Overlay className=\"fixed inset-0 z-50 bg-black/80\" />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 h-[96%] rounded-t-[10px] bg-background-200\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"absolute left-1/2 top-3 h-2 w-[100px] translate-x-[-50%] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPrimitive.Portal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nexport { DrawerTrigger, DrawerContent }\n",
    "dependencies": ["react", "vaul", "@/lib/utils"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/components/examples-nav.tsx": {
    "source": "\"use client\"\n\nimport Link from \"next/link\"\nimport { usePathname } from \"next/navigation\"\nimport { ArrowRightIcon } from \"@radix-ui/react-icons\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ScrollArea, ScrollBar } from \"@/registry/default/ui/scroll-area\"\n\nconst examples = [\n  {\n    name: \"Mail\",\n    href: \"/examples/mail\",\n    code: \"https://github.com/shadcn/ui/tree/main/apps/www/app/examples/mail\",\n  },\n  {\n    name: \"Dashboard\",\n    href: \"/examples/dashboard\",\n    code: \"https://github.com/shadcn/ui/tree/main/apps/www/app/examples/dashboard\",\n  },\n  {\n    name: \"Tasks\",\n    href: \"/examples/tasks\",\n    code: \"https://github.com/shadcn/ui/tree/main/apps/www/app/examples/tasks\",\n  },\n  {\n    name: \"Playground\",\n    href: \"/examples/playground\",\n    code: \"https://github.com/shadcn/ui/tree/main/apps/www/app/examples/playground\",\n  },\n  {\n    name: \"Forms\",\n    href: \"/examples/forms\",\n    code: \"https://github.com/shadcn/ui/tree/main/apps/www/app/examples/forms\",\n  },\n  {\n    name: \"Music\",\n    href: \"/examples/music\",\n    code: \"https://github.com/shadcn/ui/tree/main/apps/www/app/examples/music\",\n  },\n  {\n    name: \"Authentication\",\n    href: \"/examples/authentication\",\n    code: \"https://github.com/shadcn/ui/tree/main/apps/www/app/examples/authentication\",\n  },\n]\n\ninterface ExamplesNavProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nexport function ExamplesNav({ className, ...props }: ExamplesNavProps) {\n  const pathname = usePathname()\n\n  return (\n    <div className=\"relative\">\n      <ScrollArea className=\"max-w-[600px] lg:max-w-none\">\n        <div className={cn(\"mb-4 flex items-center\", className)} {...props}>\n          {examples.map((example, index) => (\n            <Link\n              href={example.href}\n              key={example.href}\n              className={cn(\n                \"flex h-7 items-center justify-center rounded-full px-4 text-center text-sm transition-colors hover:text-primary\",\n                pathname?.startsWith(example.href) ||\n                  (index === 0 && pathname === \"/\")\n                  ? \"bg-muted font-medium text-primary\"\n                  : \"text-muted-foreground\"\n              )}\n            >\n              {example.name}\n            </Link>\n          ))}\n        </div>\n        <ScrollBar orientation=\"horizontal\" className=\"invisible\" />\n      </ScrollArea>\n    </div>\n  )\n}\n\ninterface ExampleCodeLinkProps {\n  pathname: string | null\n}\n\nexport function ExampleCodeLink({ pathname }: ExampleCodeLinkProps) {\n  const example = examples.find((example) => pathname?.startsWith(example.href))\n\n  if (!example?.code) {\n    return null\n  }\n\n  return (\n    <Link\n      href={example?.code}\n      target=\"_blank\"\n      rel=\"nofollow\"\n      className=\"absolute right-0 top-0 hidden items-center rounded-[0.5rem] text-sm font-medium md:flex\"\n    >\n      View code\n      <ArrowRightIcon className=\"ml-1 h-4 w-4\" />\n    </Link>\n  )\n}\n",
    "dependencies": [
      "next/link",
      "next/navigation",
      "@radix-ui/react-icons",
      "@/lib/utils",
      "@/registry/default/ui/scroll-area"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/components/framework-docs.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\nimport { allDocs } from \"contentlayer/generated\"\n\nimport { Mdx } from \"./mdx-components\"\n\ninterface FrameworkDocsProps extends React.HTMLAttributes<HTMLDivElement> {\n  data: string\n}\n\nexport function FrameworkDocs({ ...props }: FrameworkDocsProps) {\n  const frameworkDoc = allDocs.find(\n    (doc) => doc.slug === `/docs/installation/${props.data}`\n  )\n\n  if (!frameworkDoc) {\n    return null\n  }\n\n  return <Mdx code={frameworkDoc.body.code} />\n}\n",
    "dependencies": ["react", "contentlayer/generated", "./mdx-components"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/components/icons.tsx": {
    "source": "type IconProps = React.HTMLAttributes<SVGElement>\n\nexport const Icons = {\n  logo: (props: IconProps) => (\n    <svg\n      width=\"427\"\n      height=\"427\"\n      viewBox=\"0 0 427 427\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <rect width=\"427\" height=\"427\" fill=\"\" />\n      <line\n        strokeWidth=\"12\"\n        x1=\"403.5\"\n        y1=\"23\"\n        x2=\"403.5\"\n        y2=\"403\"\n        stroke=\"hsl(var(--ds-gray-500))\"\n      />\n      <line\n        strokeWidth=\"12\"\n        x1=\"23.5\"\n        y1=\"23\"\n        x2=\"23.5\"\n        y2=\"403\"\n        stroke=\"hsl(var(--ds-gray-500))\"\n      />\n      <line\n        strokeWidth=\"12\"\n        x1=\"213.5\"\n        y1=\"23\"\n        x2=\"213.5\"\n        y2=\"403\"\n        stroke=\"hsl(var(--ds-gray-500))\"\n      />\n      <line\n        strokeWidth=\"12\"\n        x1=\"23\"\n        y1=\"212.5\"\n        x2=\"403\"\n        y2=\"212.5\"\n        stroke=\"hsl(var(--ds-gray-500))\"\n      />\n      <line\n        strokeWidth=\"12\"\n        x1=\"23\"\n        y1=\"22.5\"\n        x2=\"404\"\n        y2=\"22.5\"\n        stroke=\"hsl(var(--ds-gray-500))\"\n      />\n      <line\n        strokeWidth=\"12\"\n        x1=\"23\"\n        y1=\"402.5\"\n        x2=\"404\"\n        y2=\"402.5\"\n        stroke=\"hsl(var(--ds-gray-500))\"\n      />\n      <line\n        x1=\"213.658\"\n        y1=\"402.671\"\n        x2=\"23.6584\"\n        y2=\"22.6708\"\n        stroke=\"currentColor\"\n        strokeWidth=\"18\"\n      />\n      <line\n        x1=\"404.34\"\n        y1=\"22.6736\"\n        x2=\"213.34\"\n        y2=\"402.674\"\n        stroke=\"currentColor\"\n        strokeWidth=\"18\"\n      />\n    </svg>\n  ),\n  twitter: (props: IconProps) => (\n    <svg\n      {...props}\n      height=\"23\"\n      viewBox=\"0 0 1200 1227\"\n      width=\"23\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d=\"M714.163 519.284L1160.89 0H1055.03L667.137 450.887L357.328 0H0L468.492 681.821L0 1226.37H105.866L515.491 750.218L842.672 1226.37H1200L714.137 519.284H714.163ZM569.165 687.828L521.697 619.934L144.011 79.6944H306.615L611.412 515.685L658.88 583.579L1055.08 1150.3H892.476L569.165 687.854V687.828Z\" />\n    </svg>\n  ),\n  gitHub: (props: IconProps) => (\n    <svg viewBox=\"0 0 438.549 438.549\" {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M409.132 114.573c-19.608-33.596-46.205-60.194-79.798-79.8-33.598-19.607-70.277-29.408-110.063-29.408-39.781 0-76.472 9.804-110.063 29.408-33.596 19.605-60.192 46.204-79.8 79.8C9.803 148.168 0 184.854 0 224.63c0 47.78 13.94 90.745 41.827 128.906 27.884 38.164 63.906 64.572 108.063 79.227 5.14.954 8.945.283 11.419-1.996 2.475-2.282 3.711-5.14 3.711-8.562 0-.571-.049-5.708-.144-15.417a2549.81 2549.81 0 01-.144-25.406l-6.567 1.136c-4.187.767-9.469 1.092-15.846 1-6.374-.089-12.991-.757-19.842-1.999-6.854-1.231-13.229-4.086-19.13-8.559-5.898-4.473-10.085-10.328-12.56-17.556l-2.855-6.57c-1.903-4.374-4.899-9.233-8.992-14.559-4.093-5.331-8.232-8.945-12.419-10.848l-1.999-1.431c-1.332-.951-2.568-2.098-3.711-3.429-1.142-1.331-1.997-2.663-2.568-3.997-.572-1.335-.098-2.43 1.427-3.289 1.525-.859 4.281-1.276 8.28-1.276l5.708.853c3.807.763 8.516 3.042 14.133 6.851 5.614 3.806 10.229 8.754 13.846 14.842 4.38 7.806 9.657 13.754 15.846 17.847 6.184 4.093 12.419 6.136 18.699 6.136 6.28 0 11.704-.476 16.274-1.423 4.565-.952 8.848-2.383 12.847-4.285 1.713-12.758 6.377-22.559 13.988-29.41-10.848-1.14-20.601-2.857-29.264-5.14-8.658-2.286-17.605-5.996-26.835-11.14-9.235-5.137-16.896-11.516-22.985-19.126-6.09-7.614-11.088-17.61-14.987-29.979-3.901-12.374-5.852-26.648-5.852-42.826 0-23.035 7.52-42.637 22.557-58.817-7.044-17.318-6.379-36.732 1.997-58.24 5.52-1.715 13.706-.428 24.554 3.853 10.85 4.283 18.794 7.952 23.84 10.994 5.046 3.041 9.089 5.618 12.135 7.708 17.705-4.947 35.976-7.421 54.818-7.421s37.117 2.474 54.823 7.421l10.849-6.849c7.419-4.57 16.18-8.758 26.262-12.565 10.088-3.805 17.802-4.853 23.134-3.138 8.562 21.509 9.325 40.922 2.279 58.24 15.036 16.18 22.559 35.787 22.559 58.817 0 16.178-1.958 30.497-5.853 42.966-3.9 12.471-8.941 22.457-15.125 29.979-6.191 7.521-13.901 13.85-23.131 18.986-9.232 5.14-18.182 8.85-26.84 11.136-8.662 2.286-18.415 4.004-29.263 5.146 9.894 8.562 14.842 22.077 14.842 40.539v60.237c0 3.422 1.19 6.279 3.572 8.562 2.379 2.279 6.136 2.95 11.276 1.995 44.163-14.653 80.185-41.062 108.068-79.226 27.88-38.161 41.825-81.126 41.825-128.906-.01-39.771-9.818-76.454-29.414-110.049z\"\n      ></path>\n    </svg>\n  ),\n  radix: (props: IconProps) => (\n    <svg viewBox=\"0 0 25 25\" fill=\"none\" {...props}>\n      <path\n        d=\"M12 25C7.58173 25 4 21.4183 4 17C4 12.5817 7.58173 9 12 9V25Z\"\n        fill=\"currentcolor\"\n      ></path>\n      <path d=\"M12 0H4V8H12V0Z\" fill=\"currentcolor\"></path>\n      <path\n        d=\"M17 8C19.2091 8 21 6.20914 21 4C21 1.79086 19.2091 0 17 0C14.7909 0 13 1.79086 13 4C13 6.20914 14.7909 8 17 8Z\"\n        fill=\"currentcolor\"\n      ></path>\n    </svg>\n  ),\n  aria: (props: IconProps) => (\n    <svg role=\"img\" viewBox=\"0 0 24 24\" fill=\"currentColor\" {...props}>\n      <path d=\"M13.966 22.624l-1.69-4.281H8.122l3.892-9.144 5.662 13.425zM8.884 1.376H0v21.248zm15.116 0h-8.884L24 22.624Z\" />\n    </svg>\n  ),\n  npm: (props: IconProps) => (\n    <svg viewBox=\"0 0 24 24\" {...props}>\n      <path\n        d=\"M1.763 0C.786 0 0 .786 0 1.763v20.474C0 23.214.786 24 1.763 24h20.474c.977 0 1.763-.786 1.763-1.763V1.763C24 .786 23.214 0 22.237 0zM5.13 5.323l13.837.019-.009 13.836h-3.464l.01-10.382h-3.456L12.04 19.17H5.113z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  ),\n  yarn: (props: IconProps) => (\n    <svg viewBox=\"0 0 24 24\" {...props}>\n      <path\n        d=\"M12 0C5.375 0 0 5.375 0 12s5.375 12 12 12 12-5.375 12-12S18.625 0 12 0zm.768 4.105c.183 0 .363.053.525.157.125.083.287.185.755 1.154.31-.088.468-.042.551-.019.204.056.366.19.463.375.477.917.542 2.553.334 3.605-.241 1.232-.755 2.029-1.131 2.576.324.329.778.899 1.117 1.825.278.774.31 1.478.273 2.015a5.51 5.51 0 0 0 .602-.329c.593-.366 1.487-.917 2.553-.931.714-.009 1.269.445 1.353 1.103a1.23 1.23 0 0 1-.945 1.362c-.649.158-.95.278-1.821.843-1.232.797-2.539 1.242-3.012 1.39a1.686 1.686 0 0 1-.704.343c-.737.181-3.266.315-3.466.315h-.046c-.783 0-1.214-.241-1.45-.491-.658.329-1.51.19-2.122-.134a1.078 1.078 0 0 1-.58-1.153 1.243 1.243 0 0 1-.153-.195c-.162-.25-.528-.936-.454-1.946.056-.723.556-1.367.88-1.71a5.522 5.522 0 0 1 .408-2.256c.306-.727.885-1.348 1.32-1.737-.32-.537-.644-1.367-.329-2.21.227-.602.412-.936.82-1.08h-.005c.199-.074.389-.153.486-.259a3.418 3.418 0 0 1 2.298-1.103c.037-.093.079-.185.125-.283.31-.658.639-1.029 1.024-1.168a.94.94 0 0 1 .328-.06zm.006.7c-.507.016-1.001 1.519-1.001 1.519s-1.27-.204-2.266.871c-.199.218-.468.334-.746.44-.079.028-.176.023-.417.672-.371.991.625 2.094.625 2.094s-1.186.839-1.626 1.881c-.486 1.144-.338 2.261-.338 2.261s-.843.732-.899 1.487c-.051.663.139 1.2.343 1.515.227.343.51.176.51.176s-.561.653-.037.931c.477.25 1.283.394 1.71-.037.31-.31.371-1.001.486-1.283.028-.065.12.111.209.199.097.093.264.195.264.195s-.755.324-.445 1.066c.102.246.468.403 1.066.398.222-.005 2.664-.139 3.313-.296.375-.088.505-.283.505-.283s1.566-.431 2.998-1.357c.917-.598 1.293-.76 2.034-.936.612-.148.57-1.098-.241-1.084-.839.009-1.575.44-2.196.825-1.163.718-1.742.672-1.742.672l-.018-.032c-.079-.13.371-1.293-.134-2.678-.547-1.515-1.413-1.881-1.344-1.997.297-.5 1.038-1.297 1.334-2.78.176-.899.13-2.377-.269-3.151-.074-.144-.732.241-.732.241s-.616-1.371-.788-1.483a.271.271 0 0 0-.157-.046z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  ),\n  pnpm: (props: IconProps) => (\n    <svg viewBox=\"0 0 24 24\" {...props}>\n      <path\n        d=\"M0 0v7.5h7.5V0zm8.25 0v7.5h7.498V0zm8.25 0v7.5H24V0zM8.25 8.25v7.5h7.498v-7.5zm8.25 0v7.5H24v-7.5zM0 16.5V24h7.5v-7.5zm8.25 0V24h7.498v-7.5zm8.25 0V24H24v-7.5z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  ),\n  react: (props: IconProps) => (\n    <svg viewBox=\"0 0 24 24\" {...props}>\n      <path\n        d=\"M14.23 12.004a2.236 2.236 0 0 1-2.235 2.236 2.236 2.236 0 0 1-2.236-2.236 2.236 2.236 0 0 1 2.235-2.236 2.236 2.236 0 0 1 2.236 2.236zm2.648-10.69c-1.346 0-3.107.96-4.888 2.622-1.78-1.653-3.542-2.602-4.887-2.602-.41 0-.783.093-1.106.278-1.375.793-1.683 3.264-.973 6.365C1.98 8.917 0 10.42 0 12.004c0 1.59 1.99 3.097 5.043 4.03-.704 3.113-.39 5.588.988 6.38.32.187.69.275 1.102.275 1.345 0 3.107-.96 4.888-2.624 1.78 1.654 3.542 2.603 4.887 2.603.41 0 .783-.09 1.106-.275 1.374-.792 1.683-3.263.973-6.365C22.02 15.096 24 13.59 24 12.004c0-1.59-1.99-3.097-5.043-4.032.704-3.11.39-5.587-.988-6.38-.318-.184-.688-.277-1.092-.278zm-.005 1.09v.006c.225 0 .406.044.558.127.666.382.955 1.835.73 3.704-.054.46-.142.945-.25 1.44-.96-.236-2.006-.417-3.107-.534-.66-.905-1.345-1.727-2.035-2.447 1.592-1.48 3.087-2.292 4.105-2.295zm-9.77.02c1.012 0 2.514.808 4.11 2.28-.686.72-1.37 1.537-2.02 2.442-1.107.117-2.154.298-3.113.538-.112-.49-.195-.964-.254-1.42-.23-1.868.054-3.32.714-3.707.19-.09.4-.127.563-.132zm4.882 3.05c.455.468.91.992 1.36 1.564-.44-.02-.89-.034-1.345-.034-.46 0-.915.01-1.36.034.44-.572.895-1.096 1.345-1.565zM12 8.1c.74 0 1.477.034 2.202.093.406.582.802 1.203 1.183 1.86.372.64.71 1.29 1.018 1.946-.308.655-.646 1.31-1.013 1.95-.38.66-.773 1.288-1.18 1.87-.728.063-1.466.098-2.21.098-.74 0-1.477-.035-2.202-.093-.406-.582-.802-1.204-1.183-1.86-.372-.64-.71-1.29-1.018-1.946.303-.657.646-1.313 1.013-1.954.38-.66.773-1.286 1.18-1.868.728-.064 1.466-.098 2.21-.098zm-3.635.254c-.24.377-.48.763-.704 1.16-.225.39-.435.782-.635 1.174-.265-.656-.49-1.31-.676-1.947.64-.15 1.315-.283 2.015-.386zm7.26 0c.695.103 1.365.23 2.006.387-.18.632-.405 1.282-.66 1.933-.2-.39-.41-.783-.64-1.174-.225-.392-.465-.774-.705-1.146zm3.063.675c.484.15.944.317 1.375.498 1.732.74 2.852 1.708 2.852 2.476-.005.768-1.125 1.74-2.857 2.475-.42.18-.88.342-1.355.493-.28-.958-.646-1.956-1.1-2.98.45-1.017.81-2.01 1.085-2.964zm-13.395.004c.278.96.645 1.957 1.1 2.98-.45 1.017-.812 2.01-1.086 2.964-.484-.15-.944-.318-1.37-.5-1.732-.737-2.852-1.706-2.852-2.474 0-.768 1.12-1.742 2.852-2.476.42-.18.88-.342 1.356-.494zm11.678 4.28c.265.657.49 1.312.676 1.948-.64.157-1.316.29-2.016.39.24-.375.48-.762.705-1.158.225-.39.435-.788.636-1.18zm-9.945.02c.2.392.41.783.64 1.175.23.39.465.772.705 1.143-.695-.102-1.365-.23-2.006-.386.18-.63.406-1.282.66-1.933zM17.92 16.32c.112.493.2.968.254 1.423.23 1.868-.054 3.32-.714 3.708-.147.09-.338.128-.563.128-1.012 0-2.514-.807-4.11-2.28.686-.72 1.37-1.536 2.02-2.44 1.107-.118 2.154-.3 3.113-.54zm-11.83.01c.96.234 2.006.415 3.107.532.66.905 1.345 1.727 2.035 2.446-1.595 1.483-3.092 2.295-4.11 2.295-.22-.005-.406-.05-.553-.132-.666-.38-.955-1.834-.73-3.703.054-.46.142-.944.25-1.438zm4.56.64c.44.02.89.034 1.345.034.46 0 .915-.01 1.36-.034-.44.572-.895 1.095-1.345 1.565-.455-.47-.91-.993-1.36-1.565z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  ),\n  tailwind: (props: IconProps) => (\n    <svg viewBox=\"0 0 24 24\" {...props}>\n      <path\n        d=\"M12.001,4.8c-3.2,0-5.2,1.6-6,4.8c1.2-1.6,2.6-2.2,4.2-1.8c0.913,0.228,1.565,0.89,2.288,1.624 C13.666,10.618,15.027,12,18.001,12c3.2,0,5.2-1.6,6-4.8c-1.2,1.6-2.6,2.2-4.2,1.8c-0.913-0.228-1.565-0.89-2.288-1.624 C16.337,6.182,14.976,4.8,12.001,4.8z M6.001,12c-3.2,0-5.2,1.6-6,4.8c1.2-1.6,2.6-2.2,4.2-1.8c0.913,0.228,1.565,0.89,2.288,1.624 c1.177,1.194,2.538,2.576,5.512,2.576c3.2,0,5.2-1.6,6-4.8c-1.2,1.6-2.6,2.2-4.2,1.8c-0.913-0.228-1.565-0.89-2.288-1.624 C10.337,13.382,8.976,12,6.001,12z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  ),\n  google: (props: IconProps) => (\n    <svg role=\"img\" viewBox=\"0 0 24 24\" {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M12.48 10.92v3.28h7.84c-.24 1.84-.853 3.187-1.787 4.133-1.147 1.147-2.933 2.4-6.053 2.4-4.827 0-8.6-3.893-8.6-8.72s3.773-8.72 8.6-8.72c2.6 0 4.507 1.027 5.907 2.347l2.307-2.307C18.747 1.44 16.133 0 12.48 0 5.867 0 .307 5.387.307 12s5.56 12 12.173 12c3.573 0 6.267-1.173 8.373-3.36 2.16-2.16 2.84-5.213 2.84-7.667 0-.76-.053-1.467-.173-2.053H12.48z\"\n      />\n    </svg>\n  ),\n  apple: (props: IconProps) => (\n    <svg role=\"img\" viewBox=\"0 0 24 24\" {...props}>\n      <path\n        d=\"M12.152 6.896c-.948 0-2.415-1.078-3.96-1.04-2.04.027-3.91 1.183-4.961 3.014-2.117 3.675-.546 9.103 1.519 12.09 1.013 1.454 2.208 3.09 3.792 3.039 1.52-.065 2.09-.987 3.935-.987 1.831 0 2.35.987 3.96.948 1.637-.026 2.676-1.48 3.676-2.948 1.156-1.688 1.636-3.325 1.662-3.415-.039-.013-3.182-1.221-3.22-4.857-.026-3.04 2.48-4.494 2.597-4.559-1.429-2.09-3.623-2.324-4.39-2.376-2-.156-3.675 1.09-4.61 1.09zM15.53 3.83c.843-1.012 1.4-2.427 1.245-3.83-1.207.052-2.662.805-3.532 1.818-.78.896-1.454 2.338-1.273 3.714 1.338.104 2.715-.688 3.559-1.701\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  ),\n  paypal: (props: IconProps) => (\n    <svg role=\"img\" viewBox=\"0 0 24 24\" {...props}>\n      <path\n        d=\"M7.076 21.337H2.47a.641.641 0 0 1-.633-.74L4.944.901C5.026.382 5.474 0 5.998 0h7.46c2.57 0 4.578.543 5.69 1.81 1.01 1.15 1.304 2.42 1.012 4.287-.023.143-.047.288-.077.437-.983 5.05-4.349 6.797-8.647 6.797h-2.19c-.524 0-.968.382-1.05.9l-1.12 7.106zm14.146-14.42a3.35 3.35 0 0 0-.607-.541c-.013.076-.026.175-.041.254-.93 4.778-4.005 7.201-9.138 7.201h-2.19a.563.563 0 0 0-.556.479l-1.187 7.527h-.506l-.24 1.516a.56.56 0 0 0 .554.647h3.882c.46 0 .85-.334.922-.788.06-.26.76-4.852.816-5.09a.932.932 0 0 1 .923-.788h.58c3.76 0 6.705-1.528 7.565-5.946.36-1.847.174-3.388-.777-4.471z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  ),\n  spinner: (props: IconProps) => (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      {...props}\n    >\n      <path d=\"M21 12a9 9 0 1 1-6.219-8.56\" />\n    </svg>\n  ),\n}\n",
    "dependencies": []
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/components/main-nav.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\nimport Link from \"next/link\"\nimport { usePathname } from \"next/navigation\"\n\nimport { siteConfig } from \"@/config/site\"\nimport { cn } from \"@/lib/utils\"\nimport { Icons } from \"@/components/icons\"\nimport { Badge } from \"@/registry/default/ui/badge\"\n\nexport function MainNav() {\n  const pathname = usePathname()\n\n  return (\n    <div className=\"mr-4 hidden pl-6 md:flex\">\n      <Link\n        href=\"/\"\n        className=\"mr-6 flex h-16 items-center space-x-2 xl:w-[236px] xl:border-r xl:pr-4\"\n      >\n        <Icons.logo className=\"h-6 w-6\" />\n        <span className=\"hidden font-bold sm:inline-block\">\n          {siteConfig.name}\n        </span>\n      </Link>\n      <nav className=\"flex items-center gap-6 text-sm\">\n        <Link\n          href=\"/docs\"\n          className={cn(\n            \"transition-colors\",\n            pathname === \"/docs\"\n              ? \"text-gray-1000\"\n              : \"text-gray-700 hover:text-gray-900\"\n          )}\n        >\n          Docs\n        </Link>\n        <Link\n          href=\"/docs/components\"\n          className={cn(\n            \"transition-colors\",\n            pathname?.startsWith(\"/docs/components\")\n              ? \"text-gray-1000\"\n              : \"text-gray-700 hover:text-gray-900\"\n          )}\n        >\n          Components\n        </Link>\n\n        {/* <Link\n          href=\"/examples\"\n          className={cn(\n            \"transition-colors hover:text-foreground/80\",\n            pathname?.startsWith(\"/examples\")\n              ? \"text-foreground\"\n              : \"text-foreground/60\"\n          )}\n        >\n          Examples\n        </Link> */}\n      </nav>\n    </div>\n  )\n}\n",
    "dependencies": [
      "react",
      "next/link",
      "next/navigation",
      "@/config/site",
      "@/lib/utils",
      "@/components/icons",
      "@/registry/default/ui/badge"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/components/mdx-components.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\nimport Image from \"next/image\"\nimport Link from \"next/link\"\nimport { useMDXComponent } from \"next-contentlayer/hooks\"\nimport { NpmCommands } from \"types/unist\"\n\nimport { Event } from \"@/lib/events\"\nimport { cn } from \"@/lib/utils\"\nimport { useConfig } from \"@/hooks/use-config\"\nimport { Callout } from \"@/components/callout\"\nimport { CodeBlockWrapper } from \"@/components/code-block-wrapper\"\nimport { ComponentExample } from \"@/components/component-example\"\nimport { ComponentPreview } from \"@/components/component-preview\"\nimport { ComponentSource } from \"@/components/component-source\"\nimport { CopyButton, CopyNpmCommandButton } from \"@/components/copy-button\"\nimport { FrameworkDocs } from \"@/components/framework-docs\"\nimport { PaddingBox } from \"@/components/padding-box\"\nimport { StyleWrapper } from \"@/components/style-wrapper\"\nimport {\n  Alert,\n  AlertDescription,\n  AlertTitle,\n} from \"@/registry/default/ui/alert\"\nimport { AspectRatio } from \"@/registry/default/ui/aspect-ratio\"\nimport { Collapse, CollapseGroup } from \"@/registry/default/ui/collapse\"\nimport { Note } from \"@/registry/default/ui/note\"\nimport { Snippet } from \"@/registry/default/ui/snippet\"\nimport {\n  Tabs,\n  TabsContent,\n  TabsList,\n  TabsTrigger,\n} from \"@/registry/default/ui/tabs\"\nimport { Tooltip } from \"@/registry/default/ui/tooltip\"\nimport { Style } from \"@/registry/styles\"\n\nconst components = {\n  CollapseGroup,\n  Collapse,\n  Alert,\n  AlertTitle,\n  AlertDescription,\n  h1: ({ className, ...props }: React.HTMLAttributes<HTMLHeadingElement>) => (\n    <h1\n      className={cn(\n        \"font-heading mt-2 scroll-m-20 text-4xl font-bold\",\n        className\n      )}\n      {...props}\n    />\n  ),\n  h2: ({ className, ...props }: React.HTMLAttributes<HTMLHeadingElement>) => (\n    <h2\n      className={cn(\n        \"font-heading mt-12 scroll-m-20 border-b pb-2 text-2xl font-semibold tracking-tight first:mt-0\",\n        className\n      )}\n      {...props}\n    />\n  ),\n  h3: ({ className, ...props }: React.HTMLAttributes<HTMLHeadingElement>) => (\n    <h3\n      className={cn(\n        \"font-heading mt-8 scroll-m-20 text-xl font-semibold tracking-tight\",\n        className\n      )}\n      {...props}\n    />\n  ),\n  h4: ({ className, ...props }: React.HTMLAttributes<HTMLHeadingElement>) => (\n    <h4\n      className={cn(\n        \"font-heading mt-8 scroll-m-20 text-lg font-semibold tracking-tight\",\n        className\n      )}\n      {...props}\n    />\n  ),\n  h5: ({ className, ...props }: React.HTMLAttributes<HTMLHeadingElement>) => (\n    <h5\n      className={cn(\n        \"mt-8 scroll-m-20 text-lg font-semibold tracking-tight\",\n        className\n      )}\n      {...props}\n    />\n  ),\n  h6: ({ className, ...props }: React.HTMLAttributes<HTMLHeadingElement>) => (\n    <h6\n      className={cn(\n        \"mt-8 scroll-m-20 text-base font-semibold tracking-tight\",\n        className\n      )}\n      {...props}\n    />\n  ),\n  a: ({ className, ...props }: React.HTMLAttributes<HTMLAnchorElement>) => (\n    <a\n      className={cn(\"font-medium underline underline-offset-4\", className)}\n      {...props}\n    />\n  ),\n  p: ({ className, ...props }: React.HTMLAttributes<HTMLParagraphElement>) => (\n    <p\n      className={cn(\"leading-7 [&:not(:first-child)]:mt-6\", className)}\n      {...props}\n    />\n  ),\n  ul: ({ className, ...props }: React.HTMLAttributes<HTMLUListElement>) => (\n    <ul className={cn(\"my-6 ml-6 list-disc\", className)} {...props} />\n  ),\n  ol: ({ className, ...props }: React.HTMLAttributes<HTMLOListElement>) => (\n    <ol className={cn(\"my-6 ml-6 list-decimal\", className)} {...props} />\n  ),\n  li: ({ className, ...props }: React.HTMLAttributes<HTMLElement>) => (\n    <li className={cn(\"mt-2\", className)} {...props} />\n  ),\n  blockquote: ({ className, ...props }: React.HTMLAttributes<HTMLElement>) => (\n    <blockquote\n      className={cn(\"mt-6 border-l-2 pl-6 italic\", className)}\n      {...props}\n    />\n  ),\n  img: ({\n    className,\n    alt,\n    ...props\n  }: React.ImgHTMLAttributes<HTMLImageElement>) => (\n    // eslint-disable-next-line @next/next/no-img-element\n    <img className={cn(\"rounded-md\", className)} alt={alt} {...props} />\n  ),\n  hr: ({ ...props }: React.HTMLAttributes<HTMLHRElement>) => (\n    <hr className=\"my-4 md:my-8\" {...props} />\n  ),\n  table: ({ className, ...props }: React.HTMLAttributes<HTMLTableElement>) => (\n    <div className=\"my-6 w-full overflow-y-auto\">\n      <table className={cn(\"w-full\", className)} {...props} />\n    </div>\n  ),\n  tr: ({ className, ...props }: React.HTMLAttributes<HTMLTableRowElement>) => (\n    <tr\n      className={cn(\"m-0 border-t p-0 even:bg-muted\", className)}\n      {...props}\n    />\n  ),\n  th: ({ className, ...props }: React.HTMLAttributes<HTMLTableCellElement>) => (\n    <th\n      className={cn(\n        \"border px-4 py-2 text-left font-bold [&[align=center]]:text-center [&[align=right]]:text-right\",\n        className\n      )}\n      {...props}\n    />\n  ),\n  td: ({ className, ...props }: React.HTMLAttributes<HTMLTableCellElement>) => (\n    <td\n      className={cn(\n        \"border px-4 py-2 text-left [&[align=center]]:text-center [&[align=right]]:text-right\",\n        className\n      )}\n      {...props}\n    />\n  ),\n  pre: ({\n    className,\n    __rawString__,\n    __npmCommand__,\n    __yarnCommand__,\n    __pnpmCommand__,\n    __bunCommand__,\n    __withMeta__,\n    __src__,\n    __event__,\n    __style__,\n    ...props\n  }: React.HTMLAttributes<HTMLPreElement> & {\n    __style__?: Style[\"name\"]\n    __rawString__?: string\n    __withMeta__?: boolean\n    __src__?: string\n    __event__?: Event[\"name\"]\n  } & NpmCommands) => {\n    return (\n      <StyleWrapper styleName={__style__}>\n        {!__npmCommand__ && (\n          <pre\n            className={cn(\n              \"mb-4 mt-6 overflow-x-auto bg-background-100 py-4\",\n              className\n            )}\n            {...props}\n          />\n        )}\n        {__rawString__ && !__npmCommand__ && (\n          <CopyButton\n            value={__rawString__}\n            src={__src__}\n            event={__event__}\n            className={cn(\"absolute right-4 top-4\", __withMeta__ && \"top-16\")}\n          />\n        )}\n\n        {/* TODO maybe rethink this */}\n        {/* {__npmCommand__ &&\n          __yarnCommand__ &&\n          __pnpmCommand__ &&\n          __bunCommand__ && (\n            <CopyNpmCommandButton\n              commands={{\n                __npmCommand__,\n                __yarnCommand__,\n                __pnpmCommand__,\n                __bunCommand__,\n              }}\n              className={cn(\"absolute right-4 top-4\", __withMeta__ && \"top-16\")}\n            />\n          )} */}\n        {/* TODO add back the tracking on click */}\n        <div className=\"space-y-2\">\n          {__npmCommand__ && <Snippet text={__npmCommand__} />}\n          {/* {__yarnCommand__ && <Snippet text={__yarnCommand__} />}\n          {__pnpmCommand__ && <Snippet text={__pnpmCommand__} />}\n          {__bunCommand__ && <Snippet text={__bunCommand__} />} */}\n        </div>\n      </StyleWrapper>\n    )\n  },\n  code: ({ className, ...props }: React.HTMLAttributes<HTMLElement>) => (\n    <code\n      className={cn(\n        \"relative rounded bg-background-100 px-[0.3rem] py-[0.2rem] font-mono text-sm\",\n        className\n      )}\n      {...props}\n    />\n  ),\n  Image,\n  Callout,\n  ComponentPreview,\n  PaddingBox,\n  Note,\n  ComponentExample,\n  ComponentSource,\n  AspectRatio,\n  CodeBlockWrapper: ({ ...props }) => (\n    <CodeBlockWrapper className=\"rounded-md border\" {...props} />\n  ),\n  Step: ({ className, ...props }: React.ComponentProps<\"h3\">) => (\n    <h3\n      className={cn(\n        \"font-heading mt-8 scroll-m-20 text-xl font-semibold tracking-tight\",\n        className\n      )}\n      {...props}\n    />\n  ),\n  Steps: ({ ...props }) => (\n    <div\n      className=\"[&>h3]:step steps mb-12 ml-4 border-l pl-8 [counter-reset:step]\"\n      {...props}\n    />\n  ),\n  Tabs: (props: React.ComponentProps<typeof Tabs>) => <Tabs {...props} />,\n  TabsList: (props: React.ComponentProps<typeof TabsList>) => (\n    <TabsList {...props} />\n  ),\n  TabsTrigger: ({\n    className,\n    ...props\n  }: React.ComponentProps<typeof TabsTrigger>) => (\n    <TabsTrigger className={cn(\"min-w-14\", className)} {...props} />\n  ),\n  TabsContent: (props: React.ComponentProps<typeof TabsContent>) => (\n    <div className=\"mt-4\">\n      <TabsContent {...props} />\n    </div>\n  ),\n  FrameworkDocs: ({\n    className,\n    ...props\n  }: React.ComponentProps<typeof FrameworkDocs>) => (\n    <FrameworkDocs className={cn(className)} {...props} />\n  ),\n  Link: ({ className, ...props }: React.ComponentProps<typeof Link>) => (\n    <Link\n      className={cn(\"font-medium underline underline-offset-4\", className)}\n      {...props}\n    />\n  ),\n  LinkedCard: ({ className, ...props }: React.ComponentProps<typeof Link>) => (\n    <Link\n      className={cn(\n        \"flex w-full flex-col items-center bg-background-200 p-6 text-card-foreground shadow transition-colors hover:bg-background-100 sm:p-10\",\n        className\n      )}\n      {...props}\n    />\n  ),\n  ColorSteps: () => {\n    const colors = [\n      { label: \"Gray\", key: \"gray\" },\n      { label: \"Gray alpha\", key: \"gray-alpha\", skipHslDisplay: true },\n      { label: \"Blue\", key: \"blue\" },\n      { label: \"Red\", key: \"red\" },\n      { label: \"Amber\", key: \"amber\" },\n      { label: \"Green\", key: \"green\" },\n      { label: \"Teal\", key: \"teal\" },\n      { label: \"Purple\", key: \"purple\" },\n      { label: \"Pink\", key: \"pink\" },\n    ]\n\n    return (\n      <div className=\"mt-6\">\n        <div className=\"space-y-6\">\n          <div className=\"flex flex-col items-start gap-2 md:flex-row md:items-center\">\n            <div className=\"w-[100px] shrink-0\">Backgrounds</div>\n\n            <div className=\"flex w-full gap-1 md:gap-2\">\n              <div className=\"w-[68px]\">\n                <Tooltip text=\"bg-background-100\">\n                  <button className=\"h-10 w-full rounded bg-background-100 shadow-inner\"></button>\n                </Tooltip>\n              </div>\n              <div className=\"w-[68px]\">\n                <Tooltip text=\"bg-background-200\">\n                  <button className=\"h-10 w-full rounded bg-background-200 shadow-inner\"></button>\n                </Tooltip>\n              </div>\n            </div>\n          </div>\n\n          {colors.map((color) => (\n            <div\n              key={color.key}\n              className=\"flex flex-col items-start gap-2 md:flex-row md:items-center\"\n            >\n              <div className=\"w-[100px] shrink-0\">{color.label}</div>\n\n              <div className=\"flex w-full gap-1 md:gap-2\">\n                {Array(10)\n                  .fill(0)\n                  .map((_, index) => (\n                    <div key={index} className=\"w-full\">\n                      <Tooltip\n                        text={`var(--ds-${color.key}-${(index + 1) * 100})`}\n                      >\n                        <button\n                          className=\"h-10 w-full rounded shadow-inner\"\n                          style={{\n                            background: color.skipHslDisplay\n                              ? `var(--ds-${color.key}-${(index + 1) * 100})`\n                              : `hsl(var(--ds-${color.key}-${\n                                  (index + 1) * 100\n                                }))`,\n                          }}\n                        />\n                      </Tooltip>\n                    </div>\n                  ))}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    )\n  },\n}\n\ninterface MdxProps {\n  code: string\n}\n\nexport function Mdx({ code }: MdxProps) {\n  const [config] = useConfig()\n  const Component = useMDXComponent(code, {\n    style: config.style,\n  })\n\n  return (\n    <div className=\"mdx\">\n      <Component components={components} />\n    </div>\n  )\n}\n",
    "dependencies": [
      "react",
      "next/image",
      "next/link",
      "next-contentlayer/hooks",
      "types/unist",
      "@/lib/events",
      "@/lib/utils",
      "@/hooks/use-config",
      "@/components/callout",
      "@/components/code-block-wrapper",
      "@/components/component-example",
      "@/components/component-preview",
      "@/components/component-source",
      "@/components/copy-button",
      "@/components/framework-docs",
      "@/components/padding-box",
      "@/components/style-wrapper",
      "@/registry/default/ui/alert",
      "@/registry/default/ui/aspect-ratio",
      "@/registry/default/ui/collapse",
      "@/registry/default/ui/note",
      "@/registry/default/ui/snippet",
      "@/registry/default/ui/tabs",
      "@/registry/default/ui/tooltip",
      "@/registry/styles"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/components/mobile-nav.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\nimport Link, { LinkProps } from \"next/link\"\nimport { useRouter } from \"next/navigation\"\n\nimport { docsConfig } from \"@/config/docs\"\nimport { siteConfig } from \"@/config/site\"\nimport { cn } from \"@/lib/utils\"\nimport { Icons } from \"@/components/icons\"\nimport { Button } from \"@/registry/default/ui/button\"\nimport { ScrollArea } from \"@/registry/default/ui/scroll-area\"\nimport { Sheet, SheetContent, SheetTrigger } from \"@/registry/default/ui/sheet\"\n\nexport function MobileNav() {\n  const [open, setOpen] = React.useState(false)\n\n  return (\n    <Sheet open={open} onOpenChange={setOpen}>\n      <SheetTrigger asChild>\n        <Button\n          variant=\"tertiary\"\n          className=\"ml-4 mr-2 px-0 text-base hover:bg-transparent focus-visible:bg-transparent focus-visible:ring-0 focus-visible:ring-offset-0 md:hidden\"\n        >\n          <svg\n            strokeWidth=\"1.5\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-5 w-5\"\n          >\n            <path\n              d=\"M3 5H11\"\n              stroke=\"currentColor\"\n              strokeWidth=\"1.5\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            ></path>\n            <path\n              d=\"M3 12H16\"\n              stroke=\"currentColor\"\n              strokeWidth=\"1.5\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            ></path>\n            <path\n              d=\"M3 19H21\"\n              stroke=\"currentColor\"\n              strokeWidth=\"1.5\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            ></path>\n          </svg>\n          <span className=\"sr-only\">Toggle Menu</span>\n        </Button>\n      </SheetTrigger>\n      <SheetContent side=\"left\" className=\"pr-0\">\n        <MobileLink\n          href=\"/\"\n          className=\"flex items-center\"\n          onOpenChange={setOpen}\n        >\n          <Icons.logo className=\"mr-2 h-4 w-4\" />\n          <span className=\"font-bold\">{siteConfig.name}</span>\n        </MobileLink>\n        <ScrollArea className=\"my-4 h-[calc(100vh-3rem)] pb-10 pl-6\">\n          <div className=\"mb-6 flex flex-col space-y-3\">\n            {docsConfig.mainNav?.map(\n              (item) =>\n                item.href && (\n                  <MobileLink\n                    key={item.href}\n                    href={item.href}\n                    onOpenChange={setOpen}\n                    className=\"text-gray-900\"\n                  >\n                    {item.title}\n                  </MobileLink>\n                )\n            )}\n          </div>\n          <div className=\"flex flex-col space-y-8\">\n            {docsConfig.sidebarNav.map((item, index) => (\n              <div key={index} className=\"flex flex-col space-y-3\">\n                <h4 className=\"font-medium text-gray-1000\">{item.title}</h4>\n                {item?.items?.length &&\n                  item.items.map((item) => (\n                    <React.Fragment key={item.href}>\n                      {!item.disabled &&\n                        (item.href ? (\n                          <MobileLink\n                            href={item.href}\n                            onOpenChange={setOpen}\n                            className=\"text-gray-900\"\n                          >\n                            {item.title}\n                            {item.label && (\n                              <span className=\"ml-2 rounded-md bg-[#adfa1d] px-1.5 py-0.5 text-xs leading-none text-[#000000] no-underline group-hover:no-underline\">\n                                {item.label}\n                              </span>\n                            )}\n                          </MobileLink>\n                        ) : (\n                          item.title\n                        ))}\n                    </React.Fragment>\n                  ))}\n              </div>\n            ))}\n          </div>\n        </ScrollArea>\n      </SheetContent>\n    </Sheet>\n  )\n}\n\ninterface MobileLinkProps extends LinkProps {\n  onOpenChange?: (open: boolean) => void\n  children: React.ReactNode\n  className?: string\n}\n\nfunction MobileLink({\n  href,\n  onOpenChange,\n  className,\n  children,\n  ...props\n}: MobileLinkProps) {\n  const router = useRouter()\n  return (\n    <Link\n      href={href}\n      onClick={() => {\n        router.push(href.toString())\n        onOpenChange?.(false)\n      }}\n      className={cn(className)}\n      {...props}\n    >\n      {children}\n    </Link>\n  )\n}\n",
    "dependencies": [
      "react",
      "next/link",
      "next/navigation",
      "@/config/docs",
      "@/config/site",
      "@/lib/utils",
      "@/components/icons",
      "@/registry/default/ui/button",
      "@/registry/default/ui/scroll-area",
      "@/registry/default/ui/sheet"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/components/mode-toggle.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\nimport { LaptopIcon, MoonIcon, SunIcon } from \"@radix-ui/react-icons\"\nimport { useTheme } from \"next-themes\"\n\nexport function ModeToggle() {\n  const { setTheme, theme } = useTheme()\n\n  // NOTE vercel seems to have a bug on there site where the switcher has \"32x\" in height\n  return (\n    <div className=\"flex w-fit rounded-full bg-background-100 shadow-border\">\n      <span className=\"h-full\">\n        <input\n          className=\"peer sr-only\"\n          type=\"radio\"\n          id=\"theme-switch-system\"\n          value=\"system\"\n          checked={theme === \"system\"}\n          onChange={(e) => setTheme(e.target.value)}\n        />\n        <label\n          htmlFor=\"theme-switch-system\"\n          className=\"relative flex h-[28px] w-[28px] items-center justify-center rounded-full text-gray-700 peer-checked:text-gray-1000 peer-checked:shadow-border\"\n        >\n          <LaptopIcon className=\"h-4 w-4\" />\n        </label>\n      </span>\n      <span className=\"h-full\">\n        <input\n          className=\"peer sr-only\"\n          type=\"radio\"\n          id=\"theme-switch-light\"\n          value=\"light\"\n          checked={theme === \"light\"}\n          onChange={(e) => setTheme(e.target.value)}\n        />\n        <label\n          htmlFor=\"theme-switch-light\"\n          className=\"relative flex h-[28px] w-[28px] items-center justify-center rounded-full text-gray-700 peer-checked:text-gray-1000 peer-checked:shadow-border\"\n        >\n          <SunIcon className=\"h-4 w-4\" />\n        </label>\n      </span>\n      <span className=\"h-full\">\n        <input\n          className=\"peer sr-only\"\n          type=\"radio\"\n          id=\"theme-switch-dark\"\n          value=\"dark\"\n          checked={theme === \"dark\"}\n          onChange={(e) => setTheme(e.target.value)}\n        />\n        <label\n          htmlFor=\"theme-switch-dark\"\n          className=\"relative flex h-[28px] w-[28px] items-center justify-center rounded-full text-gray-700 peer-checked:text-gray-1000 peer-checked:shadow-border\"\n        >\n          <MoonIcon className=\"h-4 w-4\" />\n        </label>\n      </span>\n    </div>\n  )\n}\n",
    "dependencies": ["react", "@radix-ui/react-icons", "next-themes"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/components/padding-box.tsx": {
    "source": "import * as React from \"react\"\n\ninterface PaddingBoxProps {\n  title?: string\n  description?: string\n  children: React.ReactNode\n}\n\nexport function PaddingBox({ title, description, children }: PaddingBoxProps) {\n  const hasLabel = !!title || !!description\n\n  return (\n    <div className=\"border-b border-b-gray-400 p-6 last:border-b-0 md:p-10 lg:p-12\">\n      {hasLabel && (\n        <div className=\"mb-4 xl:mb-7\">\n          {title && (\n            <h2 className=\"text-2xl font-semibold text-gray-1000\">{title}</h2>\n          )}\n          {description && (\n            <p className=\"mt-2 leading-6 text-gray-900 xl:mt-4\">\n              {description}\n            </p>\n          )}\n        </div>\n      )}\n      {children}\n    </div>\n  )\n}\n",
    "dependencies": ["react"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/components/page-header.tsx": {
    "source": "import Balance from \"react-wrap-balancer\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction PageHeader({\n  className,\n  children,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <section\n      className={cn(\n        \"mx-auto flex max-w-[980px] flex-col items-center gap-2 py-8 md:py-12 md:pb-8 lg:py-24 lg:pb-20\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </section>\n  )\n}\n\nfunction PageHeaderHeading({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLHeadingElement>) {\n  return (\n    <h1\n      className={cn(\n        \"text-center text-3xl font-bold leading-tight tracking-tighter md:text-5xl lg:text-6xl lg:leading-[1.1]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction PageHeaderDescription({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLParagraphElement>) {\n  return (\n    <Balance\n      className={cn(\n        \"max-w-[750px] text-center text-lg text-gray-700 sm:text-lg lg:text-xl\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction PageActions({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\n        \"flex w-full items-center justify-center space-x-4 py-4 md:pb-10\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { PageHeader, PageHeaderHeading, PageHeaderDescription, PageActions }\n",
    "dependencies": ["react-wrap-balancer", "@/lib/utils"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/components/pager.tsx": {
    "source": "import Link from \"next/link\"\nimport { ChevronLeftIcon, ChevronRightIcon } from \"@radix-ui/react-icons\"\nimport { Doc } from \"contentlayer/generated\"\nimport { NavItem, NavItemWithChildren } from \"types/nav\"\n\nimport { docsConfig } from \"@/config/docs\"\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/registry/default/ui/button\"\nimport { Text } from \"@/registry/default/ui/text\"\n\ninterface DocsPagerProps {\n  doc: Doc\n}\n\nexport function DocsPager({ doc }: DocsPagerProps) {\n  const pager = getPagerForDoc(doc)\n\n  if (!pager) {\n    return null\n  }\n\n  return (\n    <div className=\"border-t border-gray-alpha-400 p-4 xl:px-12 xl:pb-8 xl:pt-0\">\n      {/* TODO add feedback here */}\n\n      <div className=\"pt-8\">\n        <nav className=\"relative flex w-full items-start justify-between\">\n          {pager?.prev?.href && (\n            <Link href={pager.prev.href} className=\"group py-1 pl-7 pr-2\">\n              <div className=\"\">\n                <Text\n                  size=\"copy-13\"\n                  color=\"gray-900\"\n                  className=\"transition-colors group-hover:text-contrast\"\n                >\n                  Previous\n                </Text>\n              </div>\n              <div className=\"relative\">\n                <ChevronLeftIcon className=\"absolute left-[-26px] mt-0.5 h-5 w-5 text-gray-900 transition-colors group-hover:text-contrast\" />\n                {pager.prev.title}\n              </div>\n            </Link>\n          )}\n\n          {pager?.next?.href && (\n            <Link href={pager.next.href} className=\"group py-1 pl-7 pr-2\">\n              <div className=\"\">\n                <Text\n                  size=\"copy-13\"\n                  color=\"gray-900\"\n                  className=\"transition-colors group-hover:text-contrast\"\n                >\n                  Next\n                </Text>\n              </div>\n              <div className=\"relative\">\n                <ChevronRightIcon className=\"absolute right-[-26px] mt-0.5 h-5 w-5 text-gray-900 transition-colors group-hover:text-contrast\" />\n                {pager.next.title}\n              </div>\n            </Link>\n          )}\n        </nav>\n      </div>\n    </div>\n  )\n}\n\nexport function getPagerForDoc(doc: Doc) {\n  const flattenedLinks = [null, ...flatten(docsConfig.sidebarNav), null]\n  const activeIndex = flattenedLinks.findIndex(\n    (link) => doc.slug === link?.href\n  )\n  const prev = activeIndex !== 0 ? flattenedLinks[activeIndex - 1] : null\n  const next =\n    activeIndex !== flattenedLinks.length - 1\n      ? flattenedLinks[activeIndex + 1]\n      : null\n  return {\n    prev,\n    next,\n  }\n}\n\nexport function flatten(links: NavItemWithChildren[]): NavItem[] {\n  return links\n    .reduce<NavItem[]>((flat, link) => {\n      return flat.concat(link.items?.length ? flatten(link.items) : link)\n    }, [])\n    .filter((link) => !link?.disabled)\n}\n",
    "dependencies": [
      "next/link",
      "@radix-ui/react-icons",
      "contentlayer/generated",
      "types/nav",
      "@/config/docs",
      "@/lib/utils",
      "@/registry/default/ui/button",
      "@/registry/default/ui/text"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/components/promo-video.tsx": {
    "source": "\"use client\"\n\nimport { AspectRatio } from \"@/registry/default/ui/aspect-ratio\"\n\nexport function PromoVideo() {\n  return (\n    <AspectRatio\n      ratio={16 / 9}\n      className=\"overflow-hidden rounded-lg border bg-white shadow-xl\"\n    >\n      <video autoPlay muted playsInline>\n        <source\n          src=\"https://ui-shadcn.s3.amazonaws.com/ui-promo-hd.mp4\"\n          type=\"video/mp4\"\n        />\n      </video>\n    </AspectRatio>\n  )\n}\n",
    "dependencies": ["@/registry/default/ui/aspect-ratio"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/components/providers.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\nimport { ThemeProvider as NextThemesProvider } from \"next-themes\"\nimport { ThemeProviderProps } from \"next-themes/dist/types\"\n\nexport function ThemeProvider({ children, ...props }: ThemeProviderProps) {\n  return <NextThemesProvider {...props}>{children}</NextThemesProvider>\n}\n",
    "dependencies": ["react", "next-themes", "next-themes/dist/types"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/components/sidebar-nav.tsx": {
    "source": "\"use client\"\n\nimport Link from \"next/link\"\nimport { usePathname } from \"next/navigation\"\nimport { SidebarNavItem } from \"types/nav\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface DocsSidebarNavProps {\n  items: SidebarNavItem[]\n}\n\nexport function DocsSidebarNav({ items }: DocsSidebarNavProps) {\n  const pathname = usePathname()\n\n  return items.length ? (\n    <div className=\"w-full\">\n      {items.map((item, index) => (\n        <div key={index} className={cn(\"pb-4\")}>\n          <h4 className=\"mb-0.5 rounded-md py-1.5 text-sm font-medium text-gray-1000\">\n            {item.title}\n          </h4>\n          {item?.items?.length && (\n            <DocsSidebarNavItems items={item.items} pathname={pathname} />\n          )}\n        </div>\n      ))}\n    </div>\n  ) : null\n}\n\ninterface DocsSidebarNavItemsProps {\n  items: SidebarNavItem[]\n  pathname: string | null\n}\n\n// SHADCNUI should not export here\nfunction DocsSidebarNavItems({ items, pathname }: DocsSidebarNavItemsProps) {\n  return items?.length ? (\n    <div className=\"grid grid-flow-row auto-rows-max space-y-1 text-sm\">\n      {items.map((item, index) =>\n        item.href && !item.disabled ? (\n          <Link\n            key={index}\n            href={item.href}\n            className={cn(\n              \"group flex h-10 w-full items-center rounded-md px-3 leading-5 text-gray-900 hover:no-underline\",\n              item.disabled && \"cursor-not-allowed opacity-60\",\n              pathname === item.href\n                ? \"bg-gray-alpha-100 text-gray-1000\"\n                : \"hover:bg-gray-100\"\n            )}\n            target={item.external ? \"_blank\" : \"\"}\n            rel={item.external ? \"noreferrer\" : \"\"}\n          >\n            {item.title}\n            {item.label && (\n              <span className=\"ml-2 rounded-md bg-[#adfa1d] px-1.5 py-0.5 text-xs leading-none text-[#000000] no-underline group-hover:no-underline\">\n                {item.label}\n              </span>\n            )}\n          </Link>\n        ) : (\n          <span\n            key={index}\n            className={cn(\n              \"flex w-full cursor-not-allowed items-center rounded-md p-2 text-muted-foreground hover:underline\",\n              item.disabled && \"cursor-not-allowed opacity-60\"\n            )}\n          >\n            {item.title}\n            {item.label && (\n              <span className=\"ml-2 rounded-md bg-muted px-1.5 py-0.5 text-xs leading-none text-muted-foreground no-underline group-hover:no-underline\">\n                {item.label}\n              </span>\n            )}\n          </span>\n        )\n      )}\n    </div>\n  ) : null\n}\n",
    "dependencies": ["next/link", "next/navigation", "types/nav", "@/lib/utils"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/components/site-footer.tsx": {
    "source": "import { siteConfig } from \"@/config/site\"\n\nexport function SiteFooter() {\n  return (\n    <footer className=\"py-6 md:px-8 md:py-0\">\n      <div className=\"container flex flex-col items-center justify-between gap-4 md:h-24 md:flex-row\">\n        <p className=\"text-balance text-center text-sm leading-loose text-muted-foreground md:text-left\">\n          Built by{\" \"}\n          <a\n            href={siteConfig.links.twitter}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            className=\"font-medium underline underline-offset-4\"\n          >\n            shadcn\n          </a>\n          . The source code is available on{\" \"}\n          <a\n            href={siteConfig.links.github}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            className=\"font-medium underline underline-offset-4\"\n          >\n            GitHub\n          </a>\n          .\n        </p>\n      </div>\n    </footer>\n  )\n}\n",
    "dependencies": ["@/config/site"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/components/site-header.tsx": {
    "source": "import Link from \"next/link\"\n\nimport { siteConfig } from \"@/config/site\"\nimport { cn } from \"@/lib/utils\"\nimport { CommandMenu } from \"@/components/command-menu\"\nimport { Icons } from \"@/components/icons\"\nimport { MainNav } from \"@/components/main-nav\"\nimport { MobileNav } from \"@/components/mobile-nav\"\nimport { ModeToggle } from \"@/components/mode-toggle\"\nimport { buttonVariants } from \"@/registry/default/ui/button\"\n\nexport function SiteHeader() {\n  return (\n    <header className=\"sticky top-0 z-50 mx-auto w-full max-w-[1220px] border-border bg-background-100 sm:border-x sm:border-b\">\n      <div className=\"flex h-16 max-w-screen-2xl items-center\">\n        <MainNav />\n        <MobileNav />\n        <div className=\"flex flex-1 items-center justify-between space-x-2 pr-4 md:justify-end\">\n          <div className=\"w-full flex-1 md:w-auto md:flex-none\">\n            <CommandMenu />\n          </div>\n          <nav className=\"flex items-center gap-2\">\n            <Link\n              href={siteConfig.links.github}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              className=\"hidden md:block\"\n            >\n              <div\n                className={cn(\n                  buttonVariants({\n                    variant: \"tertiary\",\n                  }),\n                  \"w-9 px-0\"\n                )}\n              >\n                <Icons.gitHub className=\"h-4 w-4\" />\n                <span className=\"sr-only\">GitHub</span>\n              </div>\n            </Link>\n            <Link\n              href={siteConfig.links.twitter}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              className=\"hidden md:block\"\n            >\n              <div\n                className={cn(\n                  buttonVariants({\n                    variant: \"tertiary\",\n                  }),\n                  \"w-9 px-0\"\n                )}\n              >\n                <Icons.twitter className=\"h-3 w-3 fill-current\" />\n                <span className=\"sr-only\">Twitter</span>\n              </div>\n            </Link>\n            <ModeToggle />\n          </nav>\n        </div>\n      </div>\n    </header>\n  )\n}\n",
    "dependencies": [
      "next/link",
      "@/config/site",
      "@/lib/utils",
      "@/components/command-menu",
      "@/components/icons",
      "@/components/main-nav",
      "@/components/mobile-nav",
      "@/components/mode-toggle",
      "@/registry/default/ui/button"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/components/style-wrapper.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\n\nimport { useConfig } from \"@/hooks/use-config\"\nimport { Style } from \"@/registry/styles\"\n\ninterface StyleWrapperProps extends React.HTMLAttributes<HTMLDivElement> {\n  styleName?: Style[\"name\"]\n}\n\nexport function StyleWrapper({ styleName, children }: StyleWrapperProps) {\n  const [config] = useConfig()\n\n  if (!styleName || config.style === styleName) {\n    return <>{children}</>\n  }\n\n  return null\n}\n",
    "dependencies": ["react", "@/hooks/use-config", "@/registry/styles"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/components/tailwind-indicator.tsx": {
    "source": "export function TailwindIndicator() {\n  if (process.env.NODE_ENV === \"production\") return null\n\n  return (\n    <div className=\"fixed bottom-1 left-1 z-50 flex h-6 w-6 items-center justify-center rounded-full bg-gray-800 p-3 font-mono text-xs text-white\">\n      <div className=\"block sm:hidden\">xs</div>\n      <div className=\"hidden sm:block md:hidden\">sm</div>\n      <div className=\"hidden md:block lg:hidden\">md</div>\n      <div className=\"hidden lg:block xl:hidden\">lg</div>\n      <div className=\"hidden xl:block 2xl:hidden\">xl</div>\n      <div className=\"hidden 2xl:block\">2xl</div>\n    </div>\n  )\n}\n",
    "dependencies": []
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/components/theme-component.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\nimport { Index } from \"@/__registry__\"\n\nimport { cn } from \"@/lib/utils\"\nimport { useConfig } from \"@/hooks/use-config\"\nimport { Icons } from \"@/components/icons\"\n\ninterface ThemeComponentProps extends React.HTMLAttributes<HTMLDivElement> {\n  name: string\n  extractClassname?: boolean\n  extractedClassNames?: string\n  align?: \"center\" | \"start\" | \"end\"\n}\n\nexport function ThemeComponent({ name, ...props }: ThemeComponentProps) {\n  const [config] = useConfig()\n\n  const Preview = React.useMemo(() => {\n    const Component = Index[config.style][name]?.component\n\n    if (!Component) {\n      return (\n        <p className=\"text-sm text-muted-foreground\">\n          Component{\" \"}\n          <code className=\"relative rounded bg-muted px-[0.3rem] py-[0.2rem] font-mono text-sm\">\n            {name}\n          </code>{\" \"}\n          not found in registry.\n        </p>\n      )\n    }\n\n    return <Component />\n  }, [name, config.style])\n\n  return (\n    <div className={cn(\"relative\")} {...props}>\n      <React.Suspense\n        fallback={\n          <div className=\"flex items-center text-sm text-muted-foreground\">\n            <Icons.spinner className=\"mr-2 h-4 w-4 animate-spin\" />\n            Loading...\n          </div>\n        }\n      >\n        {Preview}\n      </React.Suspense>\n    </div>\n  )\n}\n",
    "dependencies": [
      "react",
      "@/__registry__",
      "@/lib/utils",
      "@/hooks/use-config",
      "@/components/icons"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/components/theme-switcher.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\nimport { useSelectedLayoutSegment } from \"next/navigation\"\n\nimport { useConfig } from \"@/hooks/use-config\"\n\nexport function ThemeSwitcher() {\n  const [config] = useConfig()\n  const segment = useSelectedLayoutSegment()\n\n  React.useEffect(() => {\n    document.body.classList.forEach((className) => {\n      if (className.match(/^theme.*/)) {\n        document.body.classList.remove(className)\n      }\n    })\n\n    const theme = segment === \"themes\" ? config.theme : null\n    if (theme) {\n      return document.body.classList.add(`theme-${theme}`)\n    }\n  }, [segment, config])\n\n  return null\n}\n",
    "dependencies": ["react", "next/navigation", "@/hooks/use-config"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/components/theme-wrapper.tsx": {
    "source": "\"use client\"\n\nimport { cn } from \"@/lib/utils\"\nimport { useConfig } from \"@/hooks/use-config\"\n\ninterface ThemeWrapperProps extends React.ComponentProps<\"div\"> {\n  defaultTheme?: string\n}\n\nexport function ThemeWrapper({\n  defaultTheme,\n  children,\n  className,\n}: ThemeWrapperProps) {\n  const [config] = useConfig()\n\n  return (\n    <div\n      className={cn(\n        `theme-${defaultTheme || config.theme}`,\n        \"w-full\",\n        className\n      )}\n      style={\n        {\n          \"--radius\": `${defaultTheme ? 0.5 : config.radius}rem`,\n        } as React.CSSProperties\n      }\n    >\n      {children}\n    </div>\n  )\n}\n",
    "dependencies": ["@/lib/utils", "@/hooks/use-config"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/components/toc.tsx": {
    "source": "// @ts-nocheck\n\"use client\"\n\nimport * as React from \"react\"\n\nimport { TableOfContents } from \"@/lib/toc\"\nimport { cn } from \"@/lib/utils\"\nimport { useMounted } from \"@/hooks/use-mounted\"\n\ninterface TocProps {\n  toc: TableOfContents\n}\n\nexport function DashboardTableOfContents({ toc }: TocProps) {\n  const itemIds = React.useMemo(\n    () =>\n      toc.items\n        ? toc.items\n            .flatMap((item) => [item.url, item?.items?.map((item) => item.url)])\n            .flat()\n            .filter(Boolean)\n            .map((id) => id?.split(\"#\")[1])\n        : [],\n    [toc]\n  )\n  const activeHeading = useActiveItem(itemIds)\n  const mounted = useMounted()\n\n  if (!toc?.items || !mounted) {\n    return null\n  }\n\n  return (\n    <div className=\"space-y-2\">\n      <p className=\"font-medium\">On This Page</p>\n      <Tree tree={toc} activeItem={activeHeading} />\n    </div>\n  )\n}\n\nfunction useActiveItem(itemIds: string[]) {\n  const [activeId, setActiveId] = React.useState(null)\n\n  React.useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            setActiveId(entry.target.id)\n          }\n        })\n      },\n      { rootMargin: `0% 0% -80% 0%` }\n    )\n\n    itemIds?.forEach((id) => {\n      const element = document.getElementById(id)\n      if (element) {\n        observer.observe(element)\n      }\n    })\n\n    return () => {\n      itemIds?.forEach((id) => {\n        const element = document.getElementById(id)\n        if (element) {\n          observer.unobserve(element)\n        }\n      })\n    }\n  }, [itemIds])\n\n  return activeId\n}\n\ninterface TreeProps {\n  tree: TableOfContents\n  level?: number\n  activeItem?: string\n}\n\nfunction Tree({ tree, level = 1, activeItem }: TreeProps) {\n  return tree?.items?.length && level < 3 ? (\n    <ul className={cn(\"m-0 list-none\", { \"pl-4\": level !== 1 })}>\n      {tree.items.map((item, index) => {\n        return (\n          <li key={index} className={cn(\"mt-0 pt-2\")}>\n            <a\n              href={item.url}\n              className={cn(\n                \"inline-block no-underline transition-colors hover:text-foreground\",\n                item.url === `#${activeItem}`\n                  ? \"font-medium text-foreground\"\n                  : \"text-muted-foreground\"\n              )}\n            >\n              {item.title}\n            </a>\n            {item.items?.length ? (\n              <Tree tree={item} level={level + 1} activeItem={activeItem} />\n            ) : null}\n          </li>\n        )\n      })}\n    </ul>\n  ) : null\n}\n",
    "dependencies": ["react", "@/lib/toc", "@/lib/utils", "@/hooks/use-mounted"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/config/docs.ts": {
    "source": "import { MainNavItem, SidebarNavItem } from \"types/nav\"\n\ninterface DocsConfig {\n  mainNav: MainNavItem[]\n  sidebarNav: SidebarNavItem[]\n}\n\nexport const docsConfig: DocsConfig = {\n  mainNav: [\n    {\n      title: \"Documentation\",\n      href: \"/docs\",\n    },\n    {\n      title: \"Components\",\n      href: \"/docs/components/collapse\",\n    },\n    // {\n    //   title: \"Examples\",\n    //   href: \"/examples\",\n    // },\n    {\n      title: \"GitHub\",\n      href: \"https://github.com/shadcn/ui\",\n      external: true,\n    },\n    {\n      title: \"Twitter\",\n      href: \"https://twitter.com/whosmatu\",\n      external: true,\n    },\n  ],\n  sidebarNav: [\n    {\n      title: \"Getting Started\",\n      items: [\n        {\n          title: \"Introduction\",\n          href: \"/docs\",\n          items: [],\n        },\n        {\n          title: \"Installation\",\n          href: \"/docs/installation\",\n          items: [],\n        },\n        {\n          title: \"components.json\",\n          href: \"/docs/components-json\",\n          items: [],\n        },\n        {\n          title: \"Colors\",\n          href: \"/docs/colors\",\n          items: [],\n        },\n        {\n          title: \"Dark mode\",\n          href: \"/docs/dark-mode\",\n          items: [],\n        },\n        {\n          title: \"CLI\",\n          href: \"/docs/cli\",\n          items: [],\n        },\n        {\n          title: \"Changelog\",\n          href: \"/docs/changelog\",\n          items: [],\n        },\n      ],\n    },\n    {\n      title: \"Components\",\n      items: [\n        // {\n        //   title: \"Aspect Ratio\",\n        //   href: \"/docs/components/aspect-ratio\",\n        //   items: [],\n        // },\n        // {\n        //   title: \"Avatar\",\n        //   href: \"/docs/components/avatar\",\n        //   items: [],\n        // },\n        {\n          title: \"Badge\",\n          href: \"/docs/components/badge\",\n          items: [],\n        },\n        {\n          title: \"Button\",\n          href: \"/docs/components/button\",\n          items: [],\n        },\n        // {\n        //   title: \"Calendar\",\n        //   href: \"/docs/components/calendar\",\n        //   items: [],\n        // },\n        // {\n        //   title: \"Card\",\n        //   href: \"/docs/components/card\",\n        //   items: [],\n        // },\n        // {\n        //   title: \"Checkbox\",\n        //   href: \"/docs/components/checkbox\",\n        //   items: [],\n        // },\n        {\n          title: \"Collapse\",\n          href: \"/docs/components/collapse\",\n          items: [],\n        },\n        // {\n        //   title: \"Collapsible\",\n        //   href: \"/docs/components/collapsible\",\n        //   items: [],\n        // },\n        // {\n        //   title: \"Combobox\",\n        //   href: \"/docs/components/combobox\",\n        //   items: [],\n        // },\n        // {\n        //   title: \"Command\",\n        //   href: \"/docs/components/command\",\n        //   items: [],\n        // },\n        {\n          title: \"Context Menu\",\n          href: \"/docs/components/context-menu\",\n          items: [],\n        },\n        // {\n        //   title: \"Date Picker\",\n        //   href: \"/docs/components/date-picker\",\n        //   items: [],\n        // },\n        // {\n        //   title: \"Dialog\",\n        //   href: \"/docs/components/dialog\",\n        //   items: [],\n        // },\n        // {\n        //   title: \"Drawer\",\n        //   href: \"/docs/components/drawer\",\n        //   items: [],\n        // },\n        // {\n        //   title: \"Form\",\n        //   href: \"/docs/components/form\",\n        //   items: [],\n        // },\n        {\n          title: \"Gauge\",\n          href: \"/docs/components/gauge\",\n          items: [],\n        },\n        // {\n        //   title: \"Hover Card\",\n        //   href: \"/docs/components/hover-card\",\n        //   items: [],\n        // },\n        {\n          title: \"Input\",\n          href: \"/docs/components/input\",\n          items: [],\n        },\n        {\n          title: \"Keyboard Input\",\n          href: \"/docs/components/kbd\",\n          items: [],\n        },\n        {\n          title: \"Loading dots\",\n          href: \"/docs/components/loading-dots\",\n          items: [],\n        },\n        // {\n        //   title: \"Label\",\n        //   href: \"/docs/components/label\",\n        //   items: [],\n        // },\n        {\n          title: \"Menu\",\n          href: \"/docs/components/menu\",\n          items: [],\n        },\n        // {\n        //   title: \"Menubar\",\n        //   href: \"/docs/components/menubar\",\n        //   items: [],\n        // },\n        {\n          title: \"Modal\",\n          href: \"/docs/components/modal\",\n          items: [],\n        },\n        // {\n        //   title: \"Navigation Menu\",\n        //   href: \"/docs/components/navigation-menu\",\n        //   items: [],\n        // },\n        {\n          title: \"Note\",\n          href: \"/docs/components/note\",\n          items: [],\n        },\n        // {\n        //   title: \"Pagination\",\n        //   href: \"/docs/components/pagination\",\n        //   items: [],\n        // },\n        // {\n        //   title: \"Popover\",\n        //   href: \"/docs/components/popover\",\n        //   items: [],\n        // },\n        // {\n        //   title: \"Progress\",\n        //   href: \"/docs/components/progress\",\n        //   items: [],\n        // },\n        // {\n        //   title: \"Radio Group\",\n        //   href: \"/docs/components/radio-group\",\n        //   items: [],\n        // },\n        // {\n        //   title: \"Resizable\",\n        //   href: \"/docs/components/resizable\",\n        //   items: [],\n        // },\n        // {\n        //   title: \"Scroll Area\",\n        //   href: \"/docs/components/scroll-area\",\n        //   items: [],\n        // },\n        // {\n        //   title: \"Select\",\n        //   href: \"/docs/components/select\",\n        //   items: [],\n        // },\n        // {\n        //   title: \"Sheet\",\n        //   href: \"/docs/components/sheet\",\n        //   items: [],\n        // },\n        {\n          title: \"Show more\",\n          href: \"/docs/components/show-more\",\n          items: [],\n        },\n        // {\n        //   title: \"Skeleton\",\n        //   href: \"/docs/components/skeleton\",\n        //   items: [],\n        // },\n        {\n          title: \"Snippet\",\n          href: \"/docs/components/snippet\",\n          items: [],\n        },\n        // {\n        //   title: \"Sonner\",\n        //   href: \"/docs/components/sonner\",\n        //   items: [],\n        // },\n        {\n          title: \"Spinner\",\n          href: \"/docs/components/spinner\",\n          items: [],\n        },\n        {\n          title: \"Stack\",\n          href: \"/docs/components/stack\",\n          items: [],\n        },\n        {\n          title: \"Status dot\",\n          href: \"/docs/components/status-dot\",\n          items: [],\n        },\n        {\n          title: \"Switch\",\n          href: \"/docs/components/switch\",\n          items: [],\n        },\n        {\n          title: \"Tabs\",\n          href: \"/docs/components/tabs\",\n          items: [],\n        },\n        {\n          title: \"Text\",\n          href: \"/docs/components/text\",\n          items: [],\n        },\n        // {\n        //   title: \"Textarea\",\n        //   href: \"/docs/components/textarea\",\n        //   items: [],\n        // },\n        // {\n        //   title: \"Toast\",\n        //   href: \"/docs/components/toast\",\n        //   items: [],\n        // },\n        {\n          title: \"Toggle\",\n          href: \"/docs/components/toggle\",\n          items: [],\n        },\n        {\n          title: \"Tooltip\",\n          href: \"/docs/components/tooltip\",\n          items: [],\n        },\n      ],\n    },\n  ],\n}\n",
    "dependencies": ["types/nav"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/config/site.ts": {
    "source": "export const siteConfig = {\n  name: \"vercel/ui\",\n  url: \"https://ui.shadcn.com\",\n  ogImage: \"https://ui.shadcn.com/og.jpg\",\n  description:\n    \"Beautifully designed components that you can copy and paste into your apps. Accessible. Customizable. Open Source.\",\n  links: {\n    twitter: \"https://twitter.com/whosmatu\",\n    github: \"https://github.com/immatheus/vercel-ui\",\n  },\n}\n\nexport type SiteConfig = typeof siteConfig\n",
    "dependencies": []
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/contentlayer.config.js": {
    "source": "import path from \"path\"\nimport { getHighlighter } from \"@shikijs/compat\"\nimport {\n  defineDocumentType,\n  defineNestedType,\n  makeSource,\n} from \"contentlayer/source-files\"\nimport rehypeAutolinkHeadings from \"rehype-autolink-headings\"\nimport rehypePrettyCode from \"rehype-pretty-code\"\nimport rehypeSlug from \"rehype-slug\"\nimport { codeImport } from \"remark-code-import\"\nimport remarkGfm from \"remark-gfm\"\nimport { createCssVariablesTheme } from \"shiki\"\nimport { visit } from \"unist-util-visit\"\n\nimport { rehypeComponent } from \"./lib/rehype-component\"\nimport { rehypeNpmCommand } from \"./lib/rehype-npm-command\"\n\n/** @type {import('contentlayer/source-files').ComputedFields} */\nconst computedFields = {\n  slug: {\n    type: \"string\",\n    resolve: (doc) => `/${doc._raw.flattenedPath}`,\n  },\n  slugAsParams: {\n    type: \"string\",\n    resolve: (doc) => doc._raw.flattenedPath.split(\"/\").slice(1).join(\"/\"),\n  },\n}\n\nconst LinksProperties = defineNestedType(() => ({\n  name: \"LinksProperties\",\n  fields: {\n    doc: {\n      type: \"string\",\n    },\n    api: {\n      type: \"string\",\n    },\n  },\n}))\n\nexport const Doc = defineDocumentType(() => ({\n  name: \"Doc\",\n  filePathPattern: `docs/**/*.mdx`,\n  contentType: \"mdx\",\n  fields: {\n    title: {\n      type: \"string\",\n      required: true,\n    },\n    description: {\n      type: \"string\",\n      required: true,\n    },\n    published: {\n      type: \"boolean\",\n      default: true,\n    },\n    links: {\n      type: \"nested\",\n      of: LinksProperties,\n    },\n    featured: {\n      type: \"boolean\",\n      default: false,\n      required: false,\n    },\n    component: {\n      type: \"boolean\",\n      default: false,\n      required: false,\n    },\n    toc: {\n      type: \"boolean\",\n      default: true,\n      required: false,\n    },\n  },\n  computedFields,\n}))\n\nexport default makeSource({\n  contentDirPath: \"./content\",\n  documentTypes: [Doc],\n  mdx: {\n    remarkPlugins: [remarkGfm, codeImport],\n    rehypePlugins: [\n      rehypeSlug,\n      rehypeComponent,\n      () => (tree) => {\n        visit(tree, (node) => {\n          if (node?.type === \"element\" && node?.tagName === \"pre\") {\n            const [codeEl] = node.children\n            if (codeEl.tagName !== \"code\") {\n              return\n            }\n\n            if (codeEl.data?.meta) {\n              // Extract event from meta and pass it down the tree.\n              const regex = /event=\"([^\"]*)\"/\n              const match = codeEl.data?.meta.match(regex)\n              if (match) {\n                node.__event__ = match ? match[1] : null\n                codeEl.data.meta = codeEl.data.meta.replace(regex, \"\")\n              }\n            }\n\n            node.__rawString__ = codeEl.children?.[0].value\n            node.__src__ = node.properties?.__src__\n            node.__style__ = node.properties?.__style__\n          }\n        })\n      },\n      [\n        rehypePrettyCode,\n        {\n          getHighlighter: async () => {\n            // colors are defined in styles/mdx.css file\n            const myTheme = createCssVariablesTheme({\n              name: \"css-variables\",\n              variablePrefix: \"--shiki-\",\n              variableDefaults: {},\n              fontStyle: true,\n            })\n\n            return await getHighlighter({\n              langs: [\"tsx\", \"typescript\"],\n              themes: [myTheme],\n              theme: myTheme,\n            })\n          },\n          onVisitLine(node) {\n            // Prevent lines from collapsing in `display: grid` mode, and allow empty\n            // lines to be copy/pasted\n            if (node.children.length === 0) {\n              node.children = [{ type: \"text\", value: \" \" }]\n            }\n          },\n          onVisitHighlightedLine(node) {\n            node.properties.className.push(\"line--highlighted\")\n          },\n          onVisitHighlightedWord(node) {\n            node.properties.className = [\"word--highlighted\"]\n          },\n        },\n      ],\n      () => (tree) => {\n        visit(tree, (node) => {\n          if (node?.type === \"element\" && node?.tagName === \"div\") {\n            if (!(\"data-rehype-pretty-code-fragment\" in node.properties)) {\n              return\n            }\n\n            const preElement = node.children.at(-1)\n            if (preElement.tagName !== \"pre\") {\n              return\n            }\n\n            preElement.properties[\"__withMeta__\"] =\n              node.children.at(0).tagName === \"div\"\n            preElement.properties[\"__rawString__\"] = node.__rawString__\n\n            if (node.__src__) {\n              preElement.properties[\"__src__\"] = node.__src__\n            }\n\n            if (node.__event__) {\n              preElement.properties[\"__event__\"] = node.__event__\n            }\n\n            if (node.__style__) {\n              preElement.properties[\"__style__\"] = node.__style__\n            }\n          }\n        })\n      },\n      rehypeNpmCommand,\n      [\n        rehypeAutolinkHeadings,\n        {\n          properties: {\n            className: [\"subheading-anchor\"],\n            ariaLabel: \"Link to section\",\n          },\n        },\n      ],\n    ],\n  },\n})\n",
    "dependencies": [
      "path",
      "@shikijs/compat",
      "contentlayer/source-files",
      "rehype-autolink-headings",
      "rehype-pretty-code",
      "rehype-slug",
      "remark-code-import",
      "remark-gfm",
      "shiki",
      "unist-util-visit",
      "./lib/rehype-component",
      "./lib/rehype-npm-command"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/hooks/use-config.ts": {
    "source": "import { useAtom } from \"jotai\"\nimport { atomWithStorage } from \"jotai/utils\"\n\nimport { Style } from \"@/registry/styles\"\nimport { Theme } from \"@/registry/themes\"\n\ntype Config = {\n  style: Style[\"name\"]\n  theme: Theme[\"name\"]\n  radius: number\n}\n\nconst configAtom = atomWithStorage<Config>(\"config\", {\n  style: \"default\",\n  theme: \"zinc\",\n  radius: 0.5,\n})\n\nexport function useConfig() {\n  return useAtom(configAtom)\n}\n",
    "dependencies": [
      "jotai",
      "jotai/utils",
      "@/registry/styles",
      "@/registry/themes"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/hooks/use-lock-body.ts": {
    "source": "import * as React from \"react\"\n\n// @see https://usehooks.com/useLockBodyScroll.\nexport function useLockBody() {\n  React.useLayoutEffect((): (() => void) => {\n    const originalStyle: string = window.getComputedStyle(\n      document.body\n    ).overflow\n    document.body.style.overflow = \"hidden\"\n    return () => (document.body.style.overflow = originalStyle)\n  }, [])\n}\n",
    "dependencies": ["react"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/hooks/use-media-query.tsx": {
    "source": "import * as React from \"react\"\n\nexport function useMediaQuery(query: string) {\n  const [value, setValue] = React.useState(false)\n\n  React.useEffect(() => {\n    function onChange(event: MediaQueryListEvent) {\n      setValue(event.matches)\n    }\n\n    const result = matchMedia(query)\n    result.addEventListener(\"change\", onChange)\n    setValue(result.matches)\n\n    return () => result.removeEventListener(\"change\", onChange)\n  }, [query])\n\n  return value\n}\n",
    "dependencies": ["react"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/hooks/use-mounted.ts": {
    "source": "import * as React from \"react\"\n\nexport function useMounted() {\n  const [mounted, setMounted] = React.useState(false)\n\n  React.useEffect(() => {\n    setMounted(true)\n  }, [])\n\n  return mounted\n}\n",
    "dependencies": ["react"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/hooks/use-mutation-observer.ts": {
    "source": "import * as React from \"react\"\n\nexport const useMutationObserver = (\n  ref: React.MutableRefObject<HTMLElement | null>,\n  callback: MutationCallback,\n  options = {\n    attributes: true,\n    characterData: true,\n    childList: true,\n    subtree: true,\n  }\n) => {\n  React.useEffect(() => {\n    if (ref.current) {\n      const observer = new MutationObserver(callback)\n      observer.observe(ref.current, options)\n      return () => observer.disconnect()\n    }\n  }, [ref, callback, options])\n}\n",
    "dependencies": ["react"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/lib/events.ts": {
    "source": "import va from \"@vercel/analytics\"\nimport { z } from \"zod\"\n\nconst eventSchema = z.object({\n  name: z.enum([\n    \"copy_npm_command\",\n    \"copy_usage_import_code\",\n    \"copy_usage_code\",\n    \"copy_primitive_code\",\n    \"copy_theme_code\",\n  ]),\n  // declare type AllowedPropertyValues = string | number | boolean | null\n  properties: z\n    .record(z.union([z.string(), z.number(), z.boolean(), z.null()]))\n    .optional(),\n})\n\nexport type Event = z.infer<typeof eventSchema>\n\nexport function trackEvent(input: Event): void {\n  const event = eventSchema.parse(input)\n  if (event) {\n    va.track(event.name, event.properties)\n  }\n}\n",
    "dependencies": ["@vercel/analytics", "zod"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/lib/fonts.ts": {
    "source": "// import { JetBrains_Mono as FontMono, Inter as FontSans } from \"next/font/google\"\nimport { JetBrains_Mono as FontMono } from \"next/font/google\"\n// import { GeistMono } from \"geist/font/mono\"\nimport { GeistSans } from \"geist/font/sans\"\n\n// export const fontSans = FontSans({\n//   subsets: [\"latin\"],\n//   variable: \"--font-sans\",\n// })\nexport const fontSans = GeistSans\n\nexport const fontMono = FontMono({\n  subsets: [\"latin\"],\n  variable: \"--font-mono\",\n})\n",
    "dependencies": ["next/font/google", "geist/font/sans"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/lib/rehype-component.ts": {
    "source": "import fs from \"fs\"\nimport path from \"path\"\nimport { UnistNode, UnistTree } from \"types/unist\"\nimport { u } from \"unist-builder\"\nimport { visit } from \"unist-util-visit\"\n\nimport { Index } from \"../__registry__\"\nimport { styles } from \"../registry/styles\"\n\nexport function rehypeComponent() {\n  return async (tree: UnistTree) => {\n    visit(tree, (node: UnistNode) => {\n      // src prop overrides both name and fileName.\n      const { value: srcPath } =\n        (getNodeAttributeByName(node, \"src\") as {\n          name: string\n          value?: string\n          type?: string\n        }) || {}\n\n      if (node.name === \"ComponentSource\") {\n        const name = getNodeAttributeByName(node, \"name\")?.value as string\n        const fileName = getNodeAttributeByName(node, \"fileName\")?.value as\n          | string\n          | undefined\n\n        if (!name && !srcPath) {\n          return null\n        }\n\n        try {\n          for (const style of styles) {\n            let src: string\n\n            if (srcPath) {\n              src = srcPath\n            } else {\n              const component = Index[style.name][name]\n              src = fileName\n                ? component.files.find((file: string) => {\n                    return (\n                      file.endsWith(`${fileName}.tsx`) ||\n                      file.endsWith(`${fileName}.ts`)\n                    )\n                  }) || component.files[0]\n                : component.files[0]\n            }\n\n            // Read the source file.\n            const filePath = path.join(process.cwd(), src)\n            let source = fs.readFileSync(filePath, \"utf8\")\n\n            // Replace imports.\n            // TODO: Use @swc/core and a visitor to replace this.\n            // For now a simple regex should do.\n            source = source.replaceAll(\n              `@/registry/${style.name}/`,\n              \"@/components/\"\n            )\n            source = source.replaceAll(\"export default\", \"export\")\n\n            // Add code as children so that rehype can take over at build time.\n            node.children?.push(\n              u(\"element\", {\n                tagName: \"pre\",\n                properties: {\n                  __src__: src,\n                  __style__: style.name,\n                },\n                attributes: [\n                  {\n                    name: \"styleName\",\n                    type: \"mdxJsxAttribute\",\n                    value: style.name,\n                  },\n                ],\n                children: [\n                  u(\"element\", {\n                    tagName: \"code\",\n                    properties: {\n                      className: [\"language-tsx\"],\n                    },\n                    children: [\n                      {\n                        type: \"text\",\n                        value: source,\n                      },\n                    ],\n                  }),\n                ],\n              })\n            )\n          }\n        } catch (error) {\n          console.error(error)\n        }\n      }\n\n      if (node.name === \"ComponentPreview\") {\n        const name = getNodeAttributeByName(node, \"name\")?.value as string\n\n        if (!name) {\n          return null\n        }\n\n        try {\n          for (const style of styles) {\n            const component = Index[style.name][name]\n            const src = component.files[0]\n\n            // Read the source file.\n            const filePath = path.join(process.cwd(), src)\n            let source = fs.readFileSync(filePath, \"utf8\")\n\n            // Replace imports.\n            // TODO: Use @swc/core and a visitor to replace this.\n            // For now a simple regex should do.\n            source = source.replaceAll(\n              `@/registry/${style.name}/`,\n              \"@/components/\"\n            )\n            source = source.replaceAll(\"export default\", \"export\")\n\n            // Add code as children so that rehype can take over at build time.\n            node.children?.push(\n              u(\"element\", {\n                tagName: \"pre\",\n                properties: {\n                  __src__: src,\n                },\n                children: [\n                  u(\"element\", {\n                    tagName: \"code\",\n                    properties: {\n                      className: [\"language-tsx\"],\n                    },\n                    children: [\n                      {\n                        type: \"text\",\n                        value: source,\n                      },\n                    ],\n                  }),\n                ],\n              })\n            )\n          }\n        } catch (error) {\n          console.error(error)\n        }\n      }\n\n      // if (node.name === \"ComponentExample\") {\n      //   const source = getComponentSourceFileContent(node)\n      //   if (!source) {\n      //     return\n      //   }\n\n      //   // Replace the Example component with a pre element.\n      //   node.children?.push(\n      //     u(\"element\", {\n      //       tagName: \"pre\",\n      //       properties: {\n      //         __src__: src,\n      //       },\n      //       children: [\n      //         u(\"element\", {\n      //           tagName: \"code\",\n      //           properties: {\n      //             className: [\"language-tsx\"],\n      //           },\n      //           children: [\n      //             {\n      //               type: \"text\",\n      //               value: source,\n      //             },\n      //           ],\n      //         }),\n      //       ],\n      //     })\n      //   )\n\n      //   const extractClassname = getNodeAttributeByName(\n      //     node,\n      //     \"extractClassname\"\n      //   )\n      //   if (\n      //     extractClassname &&\n      //     typeof extractClassname.value !== \"undefined\" &&\n      //     extractClassname.value !== \"false\"\n      //   ) {\n      //     // Extract className from string\n      //     // TODO: Use @swc/core and a visitor to extract this.\n      //     // For now, a simple regex should do.\n      //     const values = source.match(/className=\"(.*)\"/)\n      //     const className = values ? values[1] : \"\"\n\n      //     // Add the className as a jsx prop so we can pass it to the copy button.\n      //     node.attributes?.push({\n      //       name: \"extractedClassNames\",\n      //       type: \"mdxJsxAttribute\",\n      //       value: className,\n      //     })\n\n      //     // Add a pre element with the className only.\n      //     node.children?.push(\n      //       u(\"element\", {\n      //         tagName: \"pre\",\n      //         properties: {},\n      //         children: [\n      //           u(\"element\", {\n      //             tagName: \"code\",\n      //             properties: {\n      //               className: [\"language-tsx\"],\n      //             },\n      //             children: [\n      //               {\n      //                 type: \"text\",\n      //                 value: className,\n      //               },\n      //             ],\n      //           }),\n      //         ],\n      //       })\n      //     )\n      //   }\n      // }\n\n      // if (node.name === \"ComponentSource\") {\n      //   const source = getComponentSourceFileContent(node)\n      //   if (!source) {\n      //     return\n      //   }\n\n      //   // Replace the Source component with a pre element.\n      //   node.children?.push(\n      //     u(\"element\", {\n      //       tagName: \"pre\",\n      //       properties: {\n      //         __src__: src,\n      //       },\n      //       children: [\n      //         u(\"element\", {\n      //           tagName: \"code\",\n      //           properties: {\n      //             className: [\"language-tsx\"],\n      //           },\n      //           children: [\n      //             {\n      //               type: \"text\",\n      //               value: source,\n      //             },\n      //           ],\n      //         }),\n      //       ],\n      //     })\n      //   )\n      // }\n    })\n  }\n}\n\nfunction getNodeAttributeByName(node: UnistNode, name: string) {\n  return node.attributes?.find((attribute) => attribute.name === name)\n}\n\nfunction getComponentSourceFileContent(node: UnistNode) {\n  const src = getNodeAttributeByName(node, \"src\")?.value as string\n\n  if (!src) {\n    return null\n  }\n\n  // Read the source file.\n  const filePath = path.join(process.cwd(), src)\n  const source = fs.readFileSync(filePath, \"utf8\")\n\n  return source\n}\n",
    "dependencies": [
      "fs",
      "path",
      "types/unist",
      "unist-builder",
      "unist-util-visit",
      "../__registry__",
      "../registry/styles"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/lib/rehype-npm-command.ts": {
    "source": "import { UnistNode, UnistTree } from \"types/unist\"\nimport { visit } from \"unist-util-visit\"\n\nexport function rehypeNpmCommand() {\n  return (tree: UnistTree) => {\n    visit(tree, (node: UnistNode) => {\n      if (node.type !== \"element\" || node?.tagName !== \"pre\") {\n        return\n      }\n\n      // npm install.\n      if (node.properties?.[\"__rawString__\"]?.startsWith(\"npm install\")) {\n        const npmCommand = node.properties?.[\"__rawString__\"]\n        node.properties[\"__npmCommand__\"] = npmCommand\n        node.properties[\"__yarnCommand__\"] = npmCommand.replace(\n          \"npm install\",\n          \"yarn add\"\n        )\n        node.properties[\"__pnpmCommand__\"] = npmCommand.replace(\n          \"npm install\",\n          \"pnpm add\"\n        )\n        node.properties[\"__bunCommand__\"] = npmCommand.replace(\n          \"npm install\",\n          \"bun add\"\n        )\n      }\n\n      // npx create.\n      if (node.properties?.[\"__rawString__\"]?.startsWith(\"npx create-\")) {\n        const npmCommand = node.properties?.[\"__rawString__\"]\n        node.properties[\"__npmCommand__\"] = npmCommand\n        node.properties[\"__yarnCommand__\"] = npmCommand.replace(\n          \"npx create-\",\n          \"yarn create \"\n        )\n        node.properties[\"__pnpmCommand__\"] = npmCommand.replace(\n          \"npx create-\",\n          \"pnpm create \"\n        )\n        node.properties[\"__bunCommand__\"] = npmCommand.replace(\n          \"npx\",\n          \"bunx --bun\"\n        )\n      }\n\n      // npx.\n      if (\n        node.properties?.[\"__rawString__\"]?.startsWith(\"npx\") &&\n        !node.properties?.[\"__rawString__\"]?.startsWith(\"npx create-\")\n      ) {\n        const npmCommand = node.properties?.[\"__rawString__\"]\n        node.properties[\"__npmCommand__\"] = npmCommand\n        node.properties[\"__yarnCommand__\"] = npmCommand\n        node.properties[\"__pnpmCommand__\"] = npmCommand.replace(\n          \"npx\",\n          \"pnpm dlx\"\n        )\n        node.properties[\"__bunCommand__\"] = npmCommand.replace(\n          \"npx\",\n          \"bunx --bun\"\n        )\n      }\n    })\n  }\n}\n",
    "dependencies": ["types/unist", "unist-util-visit"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/lib/toc.ts": {
    "source": "// @ts-nocheck\n// TODO: I'll fix this later.\n\nimport { toc } from \"mdast-util-toc\"\nimport { remark } from \"remark\"\nimport { visit } from \"unist-util-visit\"\n\nconst textTypes = [\"text\", \"emphasis\", \"strong\", \"inlineCode\"]\n\nfunction flattenNode(node) {\n  const p = []\n  visit(node, (node) => {\n    if (!textTypes.includes(node.type)) return\n    p.push(node.value)\n  })\n  return p.join(``)\n}\n\ninterface Item {\n  title: string\n  url: string\n  items?: Item[]\n}\n\ninterface Items {\n  items?: Item[]\n}\n\nfunction getItems(node, current): Items {\n  if (!node) {\n    return {}\n  }\n\n  if (node.type === \"paragraph\") {\n    visit(node, (item) => {\n      if (item.type === \"link\") {\n        current.url = item.url\n        current.title = flattenNode(node)\n      }\n\n      if (item.type === \"text\") {\n        current.title = flattenNode(node)\n      }\n    })\n\n    return current\n  }\n\n  if (node.type === \"list\") {\n    current.items = node.children.map((i) => getItems(i, {}))\n\n    return current\n  } else if (node.type === \"listItem\") {\n    const heading = getItems(node.children[0], {})\n\n    if (node.children.length > 1) {\n      getItems(node.children[1], heading)\n    }\n\n    return heading\n  }\n\n  return {}\n}\n\nconst getToc = () => (node, file) => {\n  const table = toc(node)\n  const items = getItems(table.map, {})\n\n  file.data = items\n}\n\nexport type TableOfContents = Items\n\nexport async function getTableOfContents(\n  content: string\n): Promise<TableOfContents> {\n  const result = await remark().use(getToc).process(content)\n\n  return result.data\n}\n",
    "dependencies": ["mdast-util-toc", "remark", "unist-util-visit"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/lib/utils.ts": {
    "source": "import * as React from \"react\"\nimport { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\nexport function formatDate(input: string | number): string {\n  const date = new Date(input)\n  return date.toLocaleDateString(\"en-US\", {\n    month: \"long\",\n    day: \"numeric\",\n    year: \"numeric\",\n  })\n}\n\nexport function absoluteUrl(path: string) {\n  return `${process.env.NEXT_PUBLIC_APP_URL}${path}`\n}\n",
    "dependencies": ["react", "clsx", "tailwind-merge"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/lib/validations/log.ts": {
    "source": "import { z } from \"zod\"\n\nexport const logSchema = z.object({\n  event: z.enum([\"copy_primitive\"]),\n  data: z.record(z.string()),\n})\n",
    "dependencies": ["zod"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/lib/validations/og.ts": {
    "source": "import { z } from \"zod\"\n\nexport const ogImageSchema = z.object({\n  heading: z.string(),\n  type: z.string(),\n  mode: z.enum([\"light\", \"dark\"]).default(\"dark\"),\n})\n",
    "dependencies": ["zod"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/next-env.d.ts": {
    "source": "/// <reference types=\"next\" />\n/// <reference types=\"next/image-types/global\" />\n/// <reference types=\"next/navigation-types/compat/navigation\" />\n\n// NOTE: This file should not be edited\n// see https://nextjs.org/docs/basic-features/typescript for more information.\n",
    "dependencies": []
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/next.config.mjs": {
    "source": "import { createContentlayerPlugin } from \"next-contentlayer\"\n\n/** @type {import('next').NextConfig} */\nconst nextConfig = {\n  reactStrictMode: true,\n  swcMinify: true,\n  images: {\n    remotePatterns: [\n      {\n        protocol: \"https\",\n        hostname: \"avatars.githubusercontent.com\",\n      },\n      {\n        protocol: \"https\",\n        hostname: \"images.unsplash.com\",\n      },\n    ],\n  },\n  redirects() {\n    return [\n      {\n        source: \"/components\",\n        destination: \"/docs/components/button\",\n        permanent: true,\n      },\n      {\n        source: \"/docs/components\",\n        destination: \"/docs/components/button\",\n        permanent: true,\n      },\n      {\n        source: \"/examples\",\n        destination: \"/examples/mail\",\n        permanent: false,\n      },\n      {\n        source: \"/docs/primitives/:path*\",\n        destination: \"/docs/components/:path*\",\n        permanent: true,\n      },\n      {\n        source: \"/docs/forms\",\n        destination: \"/docs/components/form\",\n        permanent: false,\n      },\n      {\n        source: \"/docs/forms/react-hook-form\",\n        destination: \"/docs/components/form\",\n        permanent: false,\n      },\n    ]\n  },\n}\n\nconst withContentlayer = createContentlayerPlugin({\n  // Additional Contentlayer config options\n})\n\nexport default withContentlayer(nextConfig)\n",
    "dependencies": []
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/pages/api/components.ts": {
    "source": "import { NextApiRequest, NextApiResponse } from \"next\"\n\nimport components from \"./components.json\"\n\nexport default async function handler(\n  req: NextApiRequest,\n  res: NextApiResponse\n) {\n  if (req.method !== \"GET\") {\n    return res.status(405).end()\n  }\n\n  return res.status(200).json(components)\n}\n",
    "dependencies": ["next", "./components.json"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/postcss.config.cjs": {
    "source": "module.exports = require(\"../../postcss.config.cjs\")\n",
    "dependencies": []
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/public/registry/themes.css": {
    "source": "\n  .theme-zinc {\n    --background: 0 0% 100%;\n    --foreground: 240 10% 3.9%;\n \n    --muted: 240 4.8% 95.9%;\n    --muted-foreground: 240 3.8% 46.1%;\n \n    --popover: 0 0% 100%;\n    --popover-foreground: 240 10% 3.9%;\n \n    --card: 0 0% 100%;\n    --card-foreground: 240 10% 3.9%;\n \n    --border: 240 5.9% 90%;\n    --input: 240 5.9% 90%;\n \n    --primary: 240 5.9% 10%;\n    --primary-foreground: 0 0% 98%;\n \n    --secondary: 240 4.8% 95.9%;\n    --secondary-foreground: 240 5.9% 10%;\n \n    --accent: 240 4.8% 95.9%;\n    --accent-foreground: 240 5.9% 10%;\n \n    --destructive: 0 84.2% 60.2%;\n    --destructive-foreground: 0 0% 98%;\n \n    --ring: 240 5.9% 10%;\n \n    --radius: 0.5rem;\n  }\n \n  .dark .theme-zinc {\n    --background: 240 10% 3.9%;\n    --foreground: 0 0% 98%;\n \n    --muted: 240 3.7% 15.9%;\n    --muted-foreground: 240 5% 64.9%;\n \n    --popover: 240 10% 3.9%;\n    --popover-foreground: 0 0% 98%;\n \n    --card: 240 10% 3.9%;\n    --card-foreground: 0 0% 98%;\n \n    --border: 240 3.7% 15.9%;\n    --input: 240 3.7% 15.9%;\n \n    --primary: 0 0% 98%;\n    --primary-foreground: 240 5.9% 10%;\n \n    --secondary: 240 3.7% 15.9%;\n    --secondary-foreground: 0 0% 98%;\n \n    --accent: 240 3.7% 15.9%;\n    --accent-foreground: 0 0% 98%;\n \n    --destructive: 0 62.8% 30.6%;\n    --destructive-foreground: 0 0% 98%;\n \n    --ring: 240 4.9% 83.9%;\n  }\n\n  .theme-slate {\n    --background: 0 0% 100%;\n    --foreground: 222.2 84% 4.9%;\n \n    --muted: 210 40% 96.1%;\n    --muted-foreground: 215.4 16.3% 46.9%;\n \n    --popover: 0 0% 100%;\n    --popover-foreground: 222.2 84% 4.9%;\n \n    --card: 0 0% 100%;\n    --card-foreground: 222.2 84% 4.9%;\n \n    --border: 214.3 31.8% 91.4%;\n    --input: 214.3 31.8% 91.4%;\n \n    --primary: 222.2 47.4% 11.2%;\n    --primary-foreground: 210 40% 98%;\n \n    --secondary: 210 40% 96.1%;\n    --secondary-foreground: 222.2 47.4% 11.2%;\n \n    --accent: 210 40% 96.1%;\n    --accent-foreground: 222.2 47.4% 11.2%;\n \n    --destructive: 0 84.2% 60.2%;\n    --destructive-foreground: 210 40% 98%;\n \n    --ring: 222.2 84% 4.9%;\n \n    --radius: 0.5rem;\n  }\n \n  .dark .theme-slate {\n    --background: 222.2 84% 4.9%;\n    --foreground: 210 40% 98%;\n \n    --muted: 217.2 32.6% 17.5%;\n    --muted-foreground: 215 20.2% 65.1%;\n \n    --popover: 222.2 84% 4.9%;\n    --popover-foreground: 210 40% 98%;\n \n    --card: 222.2 84% 4.9%;\n    --card-foreground: 210 40% 98%;\n \n    --border: 217.2 32.6% 17.5%;\n    --input: 217.2 32.6% 17.5%;\n \n    --primary: 210 40% 98%;\n    --primary-foreground: 222.2 47.4% 11.2%;\n \n    --secondary: 217.2 32.6% 17.5%;\n    --secondary-foreground: 210 40% 98%;\n \n    --accent: 217.2 32.6% 17.5%;\n    --accent-foreground: 210 40% 98%;\n \n    --destructive: 0 62.8% 30.6%;\n    --destructive-foreground: 210 40% 98%;\n \n    --ring: 212.7 26.8% 83.9;\n  }\n\n  .theme-stone {\n    --background: 0 0% 100%;\n    --foreground: 20 14.3% 4.1%;\n \n    --muted: 60 4.8% 95.9%;\n    --muted-foreground: 25 5.3% 44.7%;\n \n    --popover: 0 0% 100%;\n    --popover-foreground: 20 14.3% 4.1%;\n \n    --card: 0 0% 100%;\n    --card-foreground: 20 14.3% 4.1%;\n \n    --border: 20 5.9% 90%;\n    --input: 20 5.9% 90%;\n \n    --primary: 24 9.8% 10%;\n    --primary-foreground: 60 9.1% 97.8%;\n \n    --secondary: 60 4.8% 95.9%;\n    --secondary-foreground: 24 9.8% 10%;\n \n    --accent: 60 4.8% 95.9%;\n    --accent-foreground: 24 9.8% 10%;\n \n    --destructive: 0 84.2% 60.2%;\n    --destructive-foreground: 60 9.1% 97.8%;\n \n    --ring: 20 14.3% 4.1%;\n \n    --radius: 0.95rem;\n  }\n \n  .dark .theme-stone {\n    --background: 20 14.3% 4.1%;\n    --foreground: 60 9.1% 97.8%;\n \n    --muted: 12 6.5% 15.1%;\n    --muted-foreground: 24 5.4% 63.9%;\n \n    --popover: 20 14.3% 4.1%;\n    --popover-foreground: 60 9.1% 97.8%;\n \n    --card: 20 14.3% 4.1%;\n    --card-foreground: 60 9.1% 97.8%;\n \n    --border: 12 6.5% 15.1%;\n    --input: 12 6.5% 15.1%;\n \n    --primary: 60 9.1% 97.8%;\n    --primary-foreground: 24 9.8% 10%;\n \n    --secondary: 12 6.5% 15.1%;\n    --secondary-foreground: 60 9.1% 97.8%;\n \n    --accent: 12 6.5% 15.1%;\n    --accent-foreground: 60 9.1% 97.8%;\n \n    --destructive: 0 62.8% 30.6%;\n    --destructive-foreground: 60 9.1% 97.8%;\n \n    --ring: 24 5.7% 82.9%;\n  }\n\n  .theme-gray {\n    --background: 0 0% 100%;\n    --foreground: 224 71.4% 4.1%;\n \n    --muted: 220 14.3% 95.9%;\n    --muted-foreground: 220 8.9% 46.1%;\n \n    --popover: 0 0% 100%;\n    --popover-foreground: 224 71.4% 4.1%;\n \n    --card: 0 0% 100%;\n    --card-foreground: 224 71.4% 4.1%;\n \n    --border: 220 13% 91%;\n    --input: 220 13% 91%;\n \n    --primary: 220.9 39.3% 11%;\n    --primary-foreground: 210 20% 98%;\n \n    --secondary: 220 14.3% 95.9%;\n    --secondary-foreground: 220.9 39.3% 11%;\n \n    --accent: 220 14.3% 95.9%;\n    --accent-foreground: 220.9 39.3% 11%;\n \n    --destructive: 0 84.2% 60.2%;\n    --destructive-foreground: 210 20% 98%;\n \n    --ring: 224 71.4% 4.1%;\n \n    --radius: 0.35rem;\n  }\n \n  .dark .theme-gray {\n    --background: 224 71.4% 4.1%;\n    --foreground: 210 20% 98%;\n \n    --muted: 215 27.9% 16.9%;\n    --muted-foreground: 217.9 10.6% 64.9%;\n \n    --popover: 224 71.4% 4.1%;\n    --popover-foreground: 210 20% 98%;\n \n    --card: 224 71.4% 4.1%;\n    --card-foreground: 210 20% 98%;\n \n    --border: 215 27.9% 16.9%;\n    --input: 215 27.9% 16.9%;\n \n    --primary: 210 20% 98%;\n    --primary-foreground: 220.9 39.3% 11%;\n \n    --secondary: 215 27.9% 16.9%;\n    --secondary-foreground: 210 20% 98%;\n \n    --accent: 215 27.9% 16.9%;\n    --accent-foreground: 210 20% 98%;\n \n    --destructive: 0 62.8% 30.6%;\n    --destructive-foreground: 210 20% 98%;\n \n    --ring: 216 12.2% 83.9%;\n  }\n\n  .theme-neutral {\n    --background: 0 0% 100%;\n    --foreground: 0 0% 3.9%;\n \n    --muted: 0 0% 96.1%;\n    --muted-foreground: 0 0% 45.1%;\n \n    --popover: 0 0% 100%;\n    --popover-foreground: 0 0% 3.9%;\n \n    --card: 0 0% 100%;\n    --card-foreground: 0 0% 3.9%;\n \n    --border: 0 0% 89.8%;\n    --input: 0 0% 89.8%;\n \n    --primary: 0 0% 9%;\n    --primary-foreground: 0 0% 98%;\n \n    --secondary: 0 0% 96.1%;\n    --secondary-foreground: 0 0% 9%;\n \n    --accent: 0 0% 96.1%;\n    --accent-foreground: 0 0% 9%;\n \n    --destructive: 0 84.2% 60.2%;\n    --destructive-foreground: 0 0% 98%;\n \n    --ring: 0 0% 3.9%;\n \n    --radius: ;\n  }\n \n  .dark .theme-neutral {\n    --background: 0 0% 3.9%;\n    --foreground: 0 0% 98%;\n \n    --muted: 0 0% 14.9%;\n    --muted-foreground: 0 0% 63.9%;\n \n    --popover: 0 0% 3.9%;\n    --popover-foreground: 0 0% 98%;\n \n    --card: 0 0% 3.9%;\n    --card-foreground: 0 0% 98%;\n \n    --border: 0 0% 14.9%;\n    --input: 0 0% 14.9%;\n \n    --primary: 0 0% 98%;\n    --primary-foreground: 0 0% 9%;\n \n    --secondary: 0 0% 14.9%;\n    --secondary-foreground: 0 0% 98%;\n \n    --accent: 0 0% 14.9%;\n    --accent-foreground: 0 0% 98%;\n \n    --destructive: 0 62.8% 30.6%;\n    --destructive-foreground: 0 0% 98%;\n \n    --ring: 0 0% 83.1%;\n  }\n\n  .theme-red {\n    --background: 0 0% 100%;\n    --foreground: 0 0% 3.9%;\n \n    --muted: 0 0% 96.1%;\n    --muted-foreground: 0 0% 45.1%;\n \n    --popover: 0 0% 100%;\n    --popover-foreground: 0 0% 3.9%;\n \n    --card: 0 0% 100%;\n    --card-foreground: 0 0% 3.9%;\n \n    --border: 0 0% 89.8%;\n    --input: 0 0% 89.8%;\n \n    --primary: 0 72.2% 50.6%;\n    --primary-foreground: 0 85.7% 97.3%;\n \n    --secondary: 0 0% 96.1%;\n    --secondary-foreground: 0 0% 9%;\n \n    --accent: 0 0% 96.1%;\n    --accent-foreground: 0 0% 9%;\n \n    --destructive: 0 84.2% 60.2%;\n    --destructive-foreground: 0 0% 98%;\n \n    --ring: 0 72.2% 50.6%;\n \n    --radius: 0.4rem;\n  }\n \n  .dark .theme-red {\n    --background: 0 0% 3.9%;\n    --foreground: 0 0% 98%;\n \n    --muted: 0 0% 14.9%;\n    --muted-foreground: 0 0% 63.9%;\n \n    --popover: 0 0% 3.9%;\n    --popover-foreground: 0 0% 98%;\n \n    --card: 0 0% 3.9%;\n    --card-foreground: 0 0% 98%;\n \n    --border: 0 0% 14.9%;\n    --input: 0 0% 14.9%;\n \n    --primary: 0 72.2% 50.6%;\n    --primary-foreground: 0 85.7% 97.3%;\n \n    --secondary: 0 0% 14.9%;\n    --secondary-foreground: 0 0% 98%;\n \n    --accent: 0 0% 14.9%;\n    --accent-foreground: 0 0% 98%;\n \n    --destructive: 0 62.8% 30.6%;\n    --destructive-foreground: 0 0% 98%;\n \n    --ring: 0 72.2% 50.6%;\n  }\n\n  .theme-rose {\n    --background: 0 0% 100%;\n    --foreground: 240 10% 3.9%;\n \n    --muted: 240 4.8% 95.9%;\n    --muted-foreground: 240 3.8% 46.1%;\n \n    --popover: 0 0% 100%;\n    --popover-foreground: 240 10% 3.9%;\n \n    --card: 0 0% 100%;\n    --card-foreground: 240 10% 3.9%;\n \n    --border: 240 5.9% 90%;\n    --input: 240 5.9% 90%;\n \n    --primary: 346.8 77.2% 49.8%;\n    --primary-foreground: 355.7 100% 97.3%;\n \n    --secondary: 240 4.8% 95.9%;\n    --secondary-foreground: 240 5.9% 10%;\n \n    --accent: 240 4.8% 95.9%;\n    --accent-foreground: 240 5.9% 10%;\n \n    --destructive: 0 84.2% 60.2%;\n    --destructive-foreground: 0 0% 98%;\n \n    --ring: 346.8 77.2% 49.8%;\n \n    --radius: 0.5rem;\n  }\n \n  .dark .theme-rose {\n    --background: 20 14.3% 4.1%;\n    --foreground: 0 0% 95%;\n \n    --muted: 0 0% 15%;\n    --muted-foreground: 240 5% 64.9%;\n \n    --popover: 0 0% 9%;\n    --popover-foreground: 0 0% 95%;\n \n    --card: 24 9.8% 10%;\n    --card-foreground: 0 0% 95%;\n \n    --border: 240 3.7% 15.9%;\n    --input: 240 3.7% 15.9%;\n \n    --primary: 346.8 77.2% 49.8%;\n    --primary-foreground: 355.7 100% 97.3%;\n \n    --secondary: 240 3.7% 15.9%;\n    --secondary-foreground: 0 0% 98%;\n \n    --accent: 12 6.5% 15.1%;\n    --accent-foreground: 0 0% 98%;\n \n    --destructive: 0 62.8% 30.6%;\n    --destructive-foreground: 0 85.7% 97.3%;\n \n    --ring: 346.8 77.2% 49.8%;\n  }\n\n  .theme-orange {\n    --background: 0 0% 100%;\n    --foreground: 20 14.3% 4.1%;\n \n    --muted: 60 4.8% 95.9%;\n    --muted-foreground: 25 5.3% 44.7%;\n \n    --popover: 0 0% 100%;\n    --popover-foreground: 20 14.3% 4.1%;\n \n    --card: 0 0% 100%;\n    --card-foreground: 20 14.3% 4.1%;\n \n    --border: 20 5.9% 90%;\n    --input: 20 5.9% 90%;\n \n    --primary: 24.6 95% 53.1%;\n    --primary-foreground: 60 9.1% 97.8%;\n \n    --secondary: 60 4.8% 95.9%;\n    --secondary-foreground: 24 9.8% 10%;\n \n    --accent: 60 4.8% 95.9%;\n    --accent-foreground: 24 9.8% 10%;\n \n    --destructive: 0 84.2% 60.2%;\n    --destructive-foreground: 60 9.1% 97.8%;\n \n    --ring: 24.6 95% 53.1%;\n \n    --radius: 0.95rem;\n  }\n \n  .dark .theme-orange {\n    --background: 20 14.3% 4.1%;\n    --foreground: 60 9.1% 97.8%;\n \n    --muted: 12 6.5% 15.1%;\n    --muted-foreground: 24 5.4% 63.9%;\n \n    --popover: 20 14.3% 4.1%;\n    --popover-foreground: 60 9.1% 97.8%;\n \n    --card: 20 14.3% 4.1%;\n    --card-foreground: 60 9.1% 97.8%;\n \n    --border: 12 6.5% 15.1%;\n    --input: 12 6.5% 15.1%;\n \n    --primary: 20.5 90.2% 48.2%;\n    --primary-foreground: 60 9.1% 97.8%;\n \n    --secondary: 12 6.5% 15.1%;\n    --secondary-foreground: 60 9.1% 97.8%;\n \n    --accent: 12 6.5% 15.1%;\n    --accent-foreground: 60 9.1% 97.8%;\n \n    --destructive: 0 72.2% 50.6%;\n    --destructive-foreground: 60 9.1% 97.8%;\n \n    --ring: 20.5 90.2% 48.2%;\n  }\n\n  .theme-green {\n    --background: 0 0% 100%;\n    --foreground: 240 10% 3.9%;\n \n    --muted: 240 4.8% 95.9%;\n    --muted-foreground: 240 3.8% 46.1%;\n \n    --popover: 0 0% 100%;\n    --popover-foreground: 240 10% 3.9%;\n \n    --card: 0 0% 100%;\n    --card-foreground: 240 10% 3.9%;\n \n    --border: 240 5.9% 90%;\n    --input: 240 5.9% 90%;\n \n    --primary: 142.1 76.2% 36.3%;\n    --primary-foreground: 355.7 100% 97.3%;\n \n    --secondary: 240 4.8% 95.9%;\n    --secondary-foreground: 240 5.9% 10%;\n \n    --accent: 240 4.8% 95.9%;\n    --accent-foreground: 240 5.9% 10%;\n \n    --destructive: 0 84.2% 60.2%;\n    --destructive-foreground: 0 0% 98%;\n \n    --ring: 142.1 76.2% 36.3%;\n \n    --radius: ;\n  }\n \n  .dark .theme-green {\n    --background: 20 14.3% 4.1%;\n    --foreground: 0 0% 95%;\n \n    --muted: 0 0% 15%;\n    --muted-foreground: 240 5% 64.9%;\n \n    --popover: 0 0% 9%;\n    --popover-foreground: 0 0% 95%;\n \n    --card: 24 9.8% 10%;\n    --card-foreground: 0 0% 95%;\n \n    --border: 240 3.7% 15.9%;\n    --input: 240 3.7% 15.9%;\n \n    --primary: 142.1 70.6% 45.3%;\n    --primary-foreground: 144.9 80.4% 10%;\n \n    --secondary: 240 3.7% 15.9%;\n    --secondary-foreground: 0 0% 98%;\n \n    --accent: 12 6.5% 15.1%;\n    --accent-foreground: 0 0% 98%;\n \n    --destructive: 0 62.8% 30.6%;\n    --destructive-foreground: 0 85.7% 97.3%;\n \n    --ring: 142.4 71.8% 29.2%;\n  }\n\n  .theme-blue {\n    --background: 0 0% 100%;\n    --foreground: 222.2 84% 4.9%;\n \n    --muted: 210 40% 96.1%;\n    --muted-foreground: 215.4 16.3% 46.9%;\n \n    --popover: 0 0% 100%;\n    --popover-foreground: 222.2 84% 4.9%;\n \n    --card: 0 0% 100%;\n    --card-foreground: 222.2 84% 4.9%;\n \n    --border: 214.3 31.8% 91.4%;\n    --input: 214.3 31.8% 91.4%;\n \n    --primary: 221.2 83.2% 53.3%;\n    --primary-foreground: 210 40% 98%;\n \n    --secondary: 210 40% 96.1%;\n    --secondary-foreground: 222.2 47.4% 11.2%;\n \n    --accent: 210 40% 96.1%;\n    --accent-foreground: 222.2 47.4% 11.2%;\n \n    --destructive: 0 84.2% 60.2%;\n    --destructive-foreground: 210 40% 98%;\n \n    --ring: 221.2 83.2% 53.3%;\n \n    --radius: ;\n  }\n \n  .dark .theme-blue {\n    --background: 222.2 84% 4.9%;\n    --foreground: 210 40% 98%;\n \n    --muted: 217.2 32.6% 17.5%;\n    --muted-foreground: 215 20.2% 65.1%;\n \n    --popover: 222.2 84% 4.9%;\n    --popover-foreground: 210 40% 98%;\n \n    --card: 222.2 84% 4.9%;\n    --card-foreground: 210 40% 98%;\n \n    --border: 217.2 32.6% 17.5%;\n    --input: 217.2 32.6% 17.5%;\n \n    --primary: 217.2 91.2% 59.8%;\n    --primary-foreground: 222.2 47.4% 11.2%;\n \n    --secondary: 217.2 32.6% 17.5%;\n    --secondary-foreground: 210 40% 98%;\n \n    --accent: 217.2 32.6% 17.5%;\n    --accent-foreground: 210 40% 98%;\n \n    --destructive: 0 62.8% 30.6%;\n    --destructive-foreground: 210 40% 98%;\n \n    --ring: 224.3 76.3% 48%;\n  }\n\n  .theme-yellow {\n    --background: 0 0% 100%;\n    --foreground: 20 14.3% 4.1%;\n \n    --muted: 60 4.8% 95.9%;\n    --muted-foreground: 25 5.3% 44.7%;\n \n    --popover: 0 0% 100%;\n    --popover-foreground: 20 14.3% 4.1%;\n \n    --card: 0 0% 100%;\n    --card-foreground: 20 14.3% 4.1%;\n \n    --border: 20 5.9% 90%;\n    --input: 20 5.9% 90%;\n \n    --primary: 47.9 95.8% 53.1%;\n    --primary-foreground: 26 83.3% 14.1%;\n \n    --secondary: 60 4.8% 95.9%;\n    --secondary-foreground: 24 9.8% 10%;\n \n    --accent: 60 4.8% 95.9%;\n    --accent-foreground: 24 9.8% 10%;\n \n    --destructive: 0 84.2% 60.2%;\n    --destructive-foreground: 60 9.1% 97.8%;\n \n    --ring: 20 14.3% 4.1%;\n \n    --radius: 0.95rem;\n  }\n \n  .dark .theme-yellow {\n    --background: 20 14.3% 4.1%;\n    --foreground: 60 9.1% 97.8%;\n \n    --muted: 12 6.5% 15.1%;\n    --muted-foreground: 24 5.4% 63.9%;\n \n    --popover: 20 14.3% 4.1%;\n    --popover-foreground: 60 9.1% 97.8%;\n \n    --card: 20 14.3% 4.1%;\n    --card-foreground: 60 9.1% 97.8%;\n \n    --border: 12 6.5% 15.1%;\n    --input: 12 6.5% 15.1%;\n \n    --primary: 47.9 95.8% 53.1%;\n    --primary-foreground: 26 83.3% 14.1%;\n \n    --secondary: 12 6.5% 15.1%;\n    --secondary-foreground: 60 9.1% 97.8%;\n \n    --accent: 12 6.5% 15.1%;\n    --accent-foreground: 60 9.1% 97.8%;\n \n    --destructive: 0 62.8% 30.6%;\n    --destructive-foreground: 60 9.1% 97.8%;\n \n    --ring: 35.5 91.7% 32.9%;\n  }\n\n  .theme-violet {\n    --background: 0 0% 100%;\n    --foreground: 224 71.4% 4.1%;\n \n    --muted: 220 14.3% 95.9%;\n    --muted-foreground: 220 8.9% 46.1%;\n \n    --popover: 0 0% 100%;\n    --popover-foreground: 224 71.4% 4.1%;\n \n    --card: 0 0% 100%;\n    --card-foreground: 224 71.4% 4.1%;\n \n    --border: 220 13% 91%;\n    --input: 220 13% 91%;\n \n    --primary: 262.1 83.3% 57.8%;\n    --primary-foreground: 210 20% 98%;\n \n    --secondary: 220 14.3% 95.9%;\n    --secondary-foreground: 220.9 39.3% 11%;\n \n    --accent: 220 14.3% 95.9%;\n    --accent-foreground: 220.9 39.3% 11%;\n \n    --destructive: 0 84.2% 60.2%;\n    --destructive-foreground: 210 20% 98%;\n \n    --ring: 262.1 83.3% 57.8%;\n \n    --radius: ;\n  }\n \n  .dark .theme-violet {\n    --background: 224 71.4% 4.1%;\n    --foreground: 210 20% 98%;\n \n    --muted: 215 27.9% 16.9%;\n    --muted-foreground: 217.9 10.6% 64.9%;\n \n    --popover: 224 71.4% 4.1%;\n    --popover-foreground: 210 20% 98%;\n \n    --card: 224 71.4% 4.1%;\n    --card-foreground: 210 20% 98%;\n \n    --border: 215 27.9% 16.9%;\n    --input: 215 27.9% 16.9%;\n \n    --primary: 263.4 70% 50.4%;\n    --primary-foreground: 210 20% 98%;\n \n    --secondary: 215 27.9% 16.9%;\n    --secondary-foreground: 210 20% 98%;\n \n    --accent: 215 27.9% 16.9%;\n    --accent-foreground: 210 20% 98%;\n \n    --destructive: 0 62.8% 30.6%;\n    --destructive-foreground: 210 20% 98%;\n \n    --ring: 263.4 70% 50.4%;\n  }",
    "dependencies": []
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/colors.ts": {
    "source": "export const colors = {\n  inherit: \"inherit\",\n  current: \"currentColor\",\n  transparent: \"transparent\",\n  black: {\n    hex: \"#000000\",\n    rgb: \"rgb(0,0,0)\",\n    hsl: \"hsl(0,0%,0%)\",\n  },\n  white: {\n    hex: \"#ffffff\",\n    rgb: \"rgb(255,255,255)\",\n    hsl: \"hsl(0,0%,100%)\",\n  },\n  slate: [\n    {\n      scale: 50,\n      hex: \"#f8fafc\",\n      rgb: \"rgb(248,250,252)\",\n      hsl: \"hsl(210,40%,98%)\",\n    },\n    {\n      scale: 100,\n      hex: \"#f1f5f9\",\n      rgb: \"rgb(241,245,249)\",\n      hsl: \"hsl(210,40%,96.1%)\",\n    },\n    {\n      scale: 200,\n      hex: \"#e2e8f0\",\n      rgb: \"rgb(226,232,240)\",\n      hsl: \"hsl(214.3,31.8%,91.4%)\",\n    },\n    {\n      scale: 300,\n      hex: \"#cbd5e1\",\n      rgb: \"rgb(203,213,225)\",\n      hsl: \"hsl(212.7,26.8%,83.9%)\",\n    },\n    {\n      scale: 400,\n      hex: \"#94a3b8\",\n      rgb: \"rgb(148,163,184)\",\n      hsl: \"hsl(215,20.2%,65.1%)\",\n    },\n    {\n      scale: 500,\n      hex: \"#64748b\",\n      rgb: \"rgb(100,116,139)\",\n      hsl: \"hsl(215.4,16.3%,46.9%)\",\n    },\n    {\n      scale: 600,\n      hex: \"#475569\",\n      rgb: \"rgb(71,85,105)\",\n      hsl: \"hsl(215.3,19.3%,34.5%)\",\n    },\n    {\n      scale: 700,\n      hex: \"#334155\",\n      rgb: \"rgb(51,65,85)\",\n      hsl: \"hsl(215.3,25%,26.7%)\",\n    },\n    {\n      scale: 800,\n      hex: \"#1e293b\",\n      rgb: \"rgb(30,41,59)\",\n      hsl: \"hsl(217.2,32.6%,17.5%)\",\n    },\n    {\n      scale: 900,\n      hex: \"#0f172a\",\n      rgb: \"rgb(15,23,42)\",\n      hsl: \"hsl(222.2,47.4%,11.2%)\",\n    },\n    {\n      scale: 950,\n      hex: \"#020617\",\n      rgb: \"rgb(2,6,23)\",\n      hsl: \"hsl(222.2,84%,4.9%)\",\n    },\n  ],\n  gray: [\n    {\n      scale: 50,\n      hex: \"#f9fafb\",\n      rgb: \"rgb(249,250,251)\",\n      hsl: \"hsl(210,20%,98%)\",\n    },\n    {\n      scale: 100,\n      hex: \"#f3f4f6\",\n      rgb: \"rgb(243,244,246)\",\n      hsl: \"hsl(220,14.3%,95.9%)\",\n    },\n    {\n      scale: 200,\n      hex: \"#e5e7eb\",\n      rgb: \"rgb(229,231,235)\",\n      hsl: \"hsl(220,13%,91%)\",\n    },\n    {\n      scale: 300,\n      hex: \"#d1d5db\",\n      rgb: \"rgb(209,213,219)\",\n      hsl: \"hsl(216,12.2%,83.9%)\",\n    },\n    {\n      scale: 400,\n      hex: \"#9ca3af\",\n      rgb: \"rgb(156,163,175)\",\n      hsl: \"hsl(217.9,10.6%,64.9%)\",\n    },\n    {\n      scale: 500,\n      hex: \"#6b7280\",\n      rgb: \"rgb(107,114,128)\",\n      hsl: \"hsl(220,8.9%,46.1%)\",\n    },\n    {\n      scale: 600,\n      hex: \"#4b5563\",\n      rgb: \"rgb(75,85,99)\",\n      hsl: \"hsl(215,13.8%,34.1%)\",\n    },\n    {\n      scale: 700,\n      hex: \"#374151\",\n      rgb: \"rgb(55,65,81)\",\n      hsl: \"hsl(216.9,19.1%,26.7%)\",\n    },\n    {\n      scale: 800,\n      hex: \"#1f2937\",\n      rgb: \"rgb(31,41,55)\",\n      hsl: \"hsl(215,27.9%,16.9%)\",\n    },\n    {\n      scale: 900,\n      hex: \"#111827\",\n      rgb: \"rgb(17,24,39)\",\n      hsl: \"hsl(220.9,39.3%,11%)\",\n    },\n    {\n      scale: 950,\n      hex: \"#030712\",\n      rgb: \"rgb(3,7,18)\",\n      hsl: \"hsl(224,71.4%,4.1%)\",\n    },\n  ],\n  zinc: [\n    {\n      scale: 50,\n      hex: \"#fafafa\",\n      rgb: \"rgb(250,250,250)\",\n      hsl: \"hsl(0,0%,98%)\",\n    },\n    {\n      scale: 100,\n      hex: \"#f4f4f5\",\n      rgb: \"rgb(244,244,245)\",\n      hsl: \"hsl(240,4.8%,95.9%)\",\n    },\n    {\n      scale: 200,\n      hex: \"#e4e4e7\",\n      rgb: \"rgb(228,228,231)\",\n      hsl: \"hsl(240,5.9%,90%)\",\n    },\n    {\n      scale: 300,\n      hex: \"#d4d4d8\",\n      rgb: \"rgb(212,212,216)\",\n      hsl: \"hsl(240,4.9%,83.9%)\",\n    },\n    {\n      scale: 400,\n      hex: \"#a1a1aa\",\n      rgb: \"rgb(161,161,170)\",\n      hsl: \"hsl(240,5%,64.9%)\",\n    },\n    {\n      scale: 500,\n      hex: \"#71717a\",\n      rgb: \"rgb(113,113,122)\",\n      hsl: \"hsl(240,3.8%,46.1%)\",\n    },\n    {\n      scale: 600,\n      hex: \"#52525b\",\n      rgb: \"rgb(82,82,91)\",\n      hsl: \"hsl(240,5.2%,33.9%)\",\n    },\n    {\n      scale: 700,\n      hex: \"#3f3f46\",\n      rgb: \"rgb(63,63,70)\",\n      hsl: \"hsl(240,5.3%,26.1%)\",\n    },\n    {\n      scale: 800,\n      hex: \"#27272a\",\n      rgb: \"rgb(39,39,42)\",\n      hsl: \"hsl(240,3.7%,15.9%)\",\n    },\n    {\n      scale: 900,\n      hex: \"#18181b\",\n      rgb: \"rgb(24,24,27)\",\n      hsl: \"hsl(240,5.9%,10%)\",\n    },\n    {\n      scale: 950,\n      hex: \"#09090b\",\n      rgb: \"rgb(9,9,11)\",\n      hsl: \"hsl(240,10%,3.9%)\",\n    },\n  ],\n  neutral: [\n    {\n      scale: 50,\n      hex: \"#fafafa\",\n      rgb: \"rgb(250,250,250)\",\n      hsl: \"hsl(0,0%,98%)\",\n    },\n    {\n      scale: 100,\n      hex: \"#f5f5f5\",\n      rgb: \"rgb(245,245,245)\",\n      hsl: \"hsl(0,0%,96.1%)\",\n    },\n    {\n      scale: 200,\n      hex: \"#e5e5e5\",\n      rgb: \"rgb(229,229,229)\",\n      hsl: \"hsl(0,0%,89.8%)\",\n    },\n    {\n      scale: 300,\n      hex: \"#d4d4d4\",\n      rgb: \"rgb(212,212,212)\",\n      hsl: \"hsl(0,0%,83.1%)\",\n    },\n    {\n      scale: 400,\n      hex: \"#a3a3a3\",\n      rgb: \"rgb(163,163,163)\",\n      hsl: \"hsl(0,0%,63.9%)\",\n    },\n    {\n      scale: 500,\n      hex: \"#737373\",\n      rgb: \"rgb(115,115,115)\",\n      hsl: \"hsl(0,0%,45.1%)\",\n    },\n    {\n      scale: 600,\n      hex: \"#525252\",\n      rgb: \"rgb(82,82,82)\",\n      hsl: \"hsl(0,0%,32.2%)\",\n    },\n    {\n      scale: 700,\n      hex: \"#404040\",\n      rgb: \"rgb(64,64,64)\",\n      hsl: \"hsl(0,0%,25.1%)\",\n    },\n    {\n      scale: 800,\n      hex: \"#262626\",\n      rgb: \"rgb(38,38,38)\",\n      hsl: \"hsl(0,0%,14.9%)\",\n    },\n    {\n      scale: 900,\n      hex: \"#171717\",\n      rgb: \"rgb(23,23,23)\",\n      hsl: \"hsl(0,0%,9%)\",\n    },\n    {\n      scale: 950,\n      hex: \"#0a0a0a\",\n      rgb: \"rgb(10,10,10)\",\n      hsl: \"hsl(0,0%,3.9%)\",\n    },\n  ],\n  stone: [\n    {\n      scale: 50,\n      hex: \"#fafaf9\",\n      rgb: \"rgb(250,250,249)\",\n      hsl: \"hsl(60,9.1%,97.8%)\",\n    },\n    {\n      scale: 100,\n      hex: \"#f5f5f4\",\n      rgb: \"rgb(245,245,244)\",\n      hsl: \"hsl(60,4.8%,95.9%)\",\n    },\n    {\n      scale: 200,\n      hex: \"#e7e5e4\",\n      rgb: \"rgb(231,229,228)\",\n      hsl: \"hsl(20,5.9%,90%)\",\n    },\n    {\n      scale: 300,\n      hex: \"#d6d3d1\",\n      rgb: \"rgb(214,211,209)\",\n      hsl: \"hsl(24,5.7%,82.9%)\",\n    },\n    {\n      scale: 400,\n      hex: \"#a8a29e\",\n      rgb: \"rgb(168,162,158)\",\n      hsl: \"hsl(24,5.4%,63.9%)\",\n    },\n    {\n      scale: 500,\n      hex: \"#78716c\",\n      rgb: \"rgb(120,113,108)\",\n      hsl: \"hsl(25,5.3%,44.7%)\",\n    },\n    {\n      scale: 600,\n      hex: \"#57534e\",\n      rgb: \"rgb(87,83,78)\",\n      hsl: \"hsl(33.3,5.5%,32.4%)\",\n    },\n    {\n      scale: 700,\n      hex: \"#44403c\",\n      rgb: \"rgb(68,64,60)\",\n      hsl: \"hsl(30,6.3%,25.1%)\",\n    },\n    {\n      scale: 800,\n      hex: \"#292524\",\n      rgb: \"rgb(41,37,36)\",\n      hsl: \"hsl(12,6.5%,15.1%)\",\n    },\n    {\n      scale: 900,\n      hex: \"#1c1917\",\n      rgb: \"rgb(28,25,23)\",\n      hsl: \"hsl(24,9.8%,10%)\",\n    },\n    {\n      scale: 950,\n      hex: \"#0c0a09\",\n      rgb: \"rgb(12,10,9)\",\n      hsl: \"hsl(20,14.3%,4.1%)\",\n    },\n  ],\n  red: [\n    {\n      scale: 50,\n      hex: \"#fef2f2\",\n      rgb: \"rgb(254,242,242)\",\n      hsl: \"hsl(0,85.7%,97.3%)\",\n    },\n    {\n      scale: 100,\n      hex: \"#fee2e2\",\n      rgb: \"rgb(254,226,226)\",\n      hsl: \"hsl(0,93.3%,94.1%)\",\n    },\n    {\n      scale: 200,\n      hex: \"#fecaca\",\n      rgb: \"rgb(254,202,202)\",\n      hsl: \"hsl(0,96.3%,89.4%)\",\n    },\n    {\n      scale: 300,\n      hex: \"#fca5a5\",\n      rgb: \"rgb(252,165,165)\",\n      hsl: \"hsl(0,93.5%,81.8%)\",\n    },\n    {\n      scale: 400,\n      hex: \"#f87171\",\n      rgb: \"rgb(248,113,113)\",\n      hsl: \"hsl(0,90.6%,70.8%)\",\n    },\n    {\n      scale: 500,\n      hex: \"#ef4444\",\n      rgb: \"rgb(239,68,68)\",\n      hsl: \"hsl(0,84.2%,60.2%)\",\n    },\n    {\n      scale: 600,\n      hex: \"#dc2626\",\n      rgb: \"rgb(220,38,38)\",\n      hsl: \"hsl(0,72.2%,50.6%)\",\n    },\n    {\n      scale: 700,\n      hex: \"#b91c1c\",\n      rgb: \"rgb(185,28,28)\",\n      hsl: \"hsl(0,73.7%,41.8%)\",\n    },\n    {\n      scale: 800,\n      hex: \"#991b1b\",\n      rgb: \"rgb(153,27,27)\",\n      hsl: \"hsl(0,70%,35.3%)\",\n    },\n    {\n      scale: 900,\n      hex: \"#7f1d1d\",\n      rgb: \"rgb(127,29,29)\",\n      hsl: \"hsl(0,62.8%,30.6%)\",\n    },\n    {\n      scale: 950,\n      hex: \"#450a0a\",\n      rgb: \"rgb(69,10,10)\",\n      hsl: \"hsl(0,74.7%,15.5%)\",\n    },\n  ],\n  orange: [\n    {\n      scale: 50,\n      hex: \"#fff7ed\",\n      rgb: \"rgb(255,247,237)\",\n      hsl: \"hsl(33.3,100%,96.5%)\",\n    },\n    {\n      scale: 100,\n      hex: \"#ffedd5\",\n      rgb: \"rgb(255,237,213)\",\n      hsl: \"hsl(34.3,100%,91.8%)\",\n    },\n    {\n      scale: 200,\n      hex: \"#fed7aa\",\n      rgb: \"rgb(254,215,170)\",\n      hsl: \"hsl(32.1,97.7%,83.1%)\",\n    },\n    {\n      scale: 300,\n      hex: \"#fdba74\",\n      rgb: \"rgb(253,186,116)\",\n      hsl: \"hsl(30.7,97.2%,72.4%)\",\n    },\n    {\n      scale: 400,\n      hex: \"#fb923c\",\n      rgb: \"rgb(251,146,60)\",\n      hsl: \"hsl(27,96%,61%)\",\n    },\n    {\n      scale: 500,\n      hex: \"#f97316\",\n      rgb: \"rgb(249,115,22)\",\n      hsl: \"hsl(24.6,95%,53.1%)\",\n    },\n    {\n      scale: 600,\n      hex: \"#ea580c\",\n      rgb: \"rgb(234,88,12)\",\n      hsl: \"hsl(20.5,90.2%,48.2%)\",\n    },\n    {\n      scale: 700,\n      hex: \"#c2410c\",\n      rgb: \"rgb(194,65,12)\",\n      hsl: \"hsl(17.5,88.3%,40.4%)\",\n    },\n    {\n      scale: 800,\n      hex: \"#9a3412\",\n      rgb: \"rgb(154,52,18)\",\n      hsl: \"hsl(15,79.1%,33.7%)\",\n    },\n    {\n      scale: 900,\n      hex: \"#7c2d12\",\n      rgb: \"rgb(124,45,18)\",\n      hsl: \"hsl(15.3,74.6%,27.8%)\",\n    },\n    {\n      scale: 950,\n      hex: \"#431407\",\n      rgb: \"rgb(67,20,7)\",\n      hsl: \"hsl(13,81.1%,14.5%)\",\n    },\n  ],\n  amber: [\n    {\n      scale: 50,\n      hex: \"#fffbeb\",\n      rgb: \"rgb(255,251,235)\",\n      hsl: \"hsl(48,100%,96.1%)\",\n    },\n    {\n      scale: 100,\n      hex: \"#fef3c7\",\n      rgb: \"rgb(254,243,199)\",\n      hsl: \"hsl(48,96.5%,88.8%)\",\n    },\n    {\n      scale: 200,\n      hex: \"#fde68a\",\n      rgb: \"rgb(253,230,138)\",\n      hsl: \"hsl(48,96.6%,76.7%)\",\n    },\n    {\n      scale: 300,\n      hex: \"#fcd34d\",\n      rgb: \"rgb(252,211,77)\",\n      hsl: \"hsl(45.9,96.7%,64.5%)\",\n    },\n    {\n      scale: 400,\n      hex: \"#fbbf24\",\n      rgb: \"rgb(251,191,36)\",\n      hsl: \"hsl(43.3,96.4%,56.3%)\",\n    },\n    {\n      scale: 500,\n      hex: \"#f59e0b\",\n      rgb: \"rgb(245,158,11)\",\n      hsl: \"hsl(37.7,92.1%,50.2%)\",\n    },\n    {\n      scale: 600,\n      hex: \"#d97706\",\n      rgb: \"rgb(217,119,6)\",\n      hsl: \"hsl(32.1,94.6%,43.7%)\",\n    },\n    {\n      scale: 700,\n      hex: \"#b45309\",\n      rgb: \"rgb(180,83,9)\",\n      hsl: \"hsl(26,90.5%,37.1%)\",\n    },\n    {\n      scale: 800,\n      hex: \"#92400e\",\n      rgb: \"rgb(146,64,14)\",\n      hsl: \"hsl(22.7,82.5%,31.4%)\",\n    },\n    {\n      scale: 900,\n      hex: \"#78350f\",\n      rgb: \"rgb(120,53,15)\",\n      hsl: \"hsl(21.7,77.8%,26.5%)\",\n    },\n    {\n      scale: 950,\n      hex: \"#451a03\",\n      rgb: \"rgb(69,26,3)\",\n      hsl: \"hsl(20.9,91.7%,14.1%)\",\n    },\n  ],\n  yellow: [\n    {\n      scale: 50,\n      hex: \"#fefce8\",\n      rgb: \"rgb(254,252,232)\",\n      hsl: \"hsl(54.5,91.7%,95.3%)\",\n    },\n    {\n      scale: 100,\n      hex: \"#fef9c3\",\n      rgb: \"rgb(254,249,195)\",\n      hsl: \"hsl(54.9,96.7%,88%)\",\n    },\n    {\n      scale: 200,\n      hex: \"#fef08a\",\n      rgb: \"rgb(254,240,138)\",\n      hsl: \"hsl(52.8,98.3%,76.9%)\",\n    },\n    {\n      scale: 300,\n      hex: \"#fde047\",\n      rgb: \"rgb(253,224,71)\",\n      hsl: \"hsl(50.4,97.8%,63.5%)\",\n    },\n    {\n      scale: 400,\n      hex: \"#facc15\",\n      rgb: \"rgb(250,204,21)\",\n      hsl: \"hsl(47.9,95.8%,53.1%)\",\n    },\n    {\n      scale: 500,\n      hex: \"#eab308\",\n      rgb: \"rgb(234,179,8)\",\n      hsl: \"hsl(45.4,93.4%,47.5%)\",\n    },\n    {\n      scale: 600,\n      hex: \"#ca8a04\",\n      rgb: \"rgb(202,138,4)\",\n      hsl: \"hsl(40.6,96.1%,40.4%)\",\n    },\n    {\n      scale: 700,\n      hex: \"#a16207\",\n      rgb: \"rgb(161,98,7)\",\n      hsl: \"hsl(35.5,91.7%,32.9%)\",\n    },\n    {\n      scale: 800,\n      hex: \"#854d0e\",\n      rgb: \"rgb(133,77,14)\",\n      hsl: \"hsl(31.8,81%,28.8%)\",\n    },\n    {\n      scale: 900,\n      hex: \"#713f12\",\n      rgb: \"rgb(113,63,18)\",\n      hsl: \"hsl(28.4,72.5%,25.7%)\",\n    },\n    {\n      scale: 950,\n      hex: \"#422006\",\n      rgb: \"rgb(66,32,6)\",\n      hsl: \"hsl(26,83.3%,14.1%)\",\n    },\n  ],\n  lime: [\n    {\n      scale: 50,\n      hex: \"#f7fee7\",\n      rgb: \"rgb(247,254,231)\",\n      hsl: \"hsl(78.3,92%,95.1%)\",\n    },\n    {\n      scale: 100,\n      hex: \"#ecfccb\",\n      rgb: \"rgb(236,252,203)\",\n      hsl: \"hsl(79.6,89.1%,89.2%)\",\n    },\n    {\n      scale: 200,\n      hex: \"#d9f99d\",\n      rgb: \"rgb(217,249,157)\",\n      hsl: \"hsl(80.9,88.5%,79.6%)\",\n    },\n    {\n      scale: 300,\n      hex: \"#bef264\",\n      rgb: \"rgb(190,242,100)\",\n      hsl: \"hsl(82,84.5%,67.1%)\",\n    },\n    {\n      scale: 400,\n      hex: \"#a3e635\",\n      rgb: \"rgb(163,230,53)\",\n      hsl: \"hsl(82.7,78%,55.5%)\",\n    },\n    {\n      scale: 500,\n      hex: \"#84cc16\",\n      rgb: \"rgb(132,204,22)\",\n      hsl: \"hsl(83.7,80.5%,44.3%)\",\n    },\n    {\n      scale: 600,\n      hex: \"#65a30d\",\n      rgb: \"rgb(101,163,13)\",\n      hsl: \"hsl(84.8,85.2%,34.5%)\",\n    },\n    {\n      scale: 700,\n      hex: \"#4d7c0f\",\n      rgb: \"rgb(77,124,15)\",\n      hsl: \"hsl(85.9,78.4%,27.3%)\",\n    },\n    {\n      scale: 800,\n      hex: \"#3f6212\",\n      rgb: \"rgb(63,98,18)\",\n      hsl: \"hsl(86.3,69%,22.7%)\",\n    },\n    {\n      scale: 900,\n      hex: \"#365314\",\n      rgb: \"rgb(54,83,20)\",\n      hsl: \"hsl(87.6,61.2%,20.2%)\",\n    },\n    {\n      scale: 950,\n      hex: \"#1a2e05\",\n      rgb: \"rgb(26,46,5)\",\n      hsl: \"hsl(89.3,80.4%,10%)\",\n    },\n  ],\n  green: [\n    {\n      scale: 50,\n      hex: \"#f0fdf4\",\n      rgb: \"rgb(240,253,244)\",\n      hsl: \"hsl(138.5,76.5%,96.7%)\",\n    },\n    {\n      scale: 100,\n      hex: \"#dcfce7\",\n      rgb: \"rgb(220,252,231)\",\n      hsl: \"hsl(140.6,84.2%,92.5%)\",\n    },\n    {\n      scale: 200,\n      hex: \"#bbf7d0\",\n      rgb: \"rgb(187,247,208)\",\n      hsl: \"hsl(141,78.9%,85.1%)\",\n    },\n    {\n      scale: 300,\n      hex: \"#86efac\",\n      rgb: \"rgb(134,239,172)\",\n      hsl: \"hsl(141.7,76.6%,73.1%)\",\n    },\n    {\n      scale: 400,\n      hex: \"#4ade80\",\n      rgb: \"rgb(74,222,128)\",\n      hsl: \"hsl(141.9,69.2%,58%)\",\n    },\n    {\n      scale: 500,\n      hex: \"#22c55e\",\n      rgb: \"rgb(34,197,94)\",\n      hsl: \"hsl(142.1,70.6%,45.3%)\",\n    },\n    {\n      scale: 600,\n      hex: \"#16a34a\",\n      rgb: \"rgb(22,163,74)\",\n      hsl: \"hsl(142.1,76.2%,36.3%)\",\n    },\n    {\n      scale: 700,\n      hex: \"#15803d\",\n      rgb: \"rgb(21,128,61)\",\n      hsl: \"hsl(142.4,71.8%,29.2%)\",\n    },\n    {\n      scale: 800,\n      hex: \"#166534\",\n      rgb: \"rgb(22,101,52)\",\n      hsl: \"hsl(142.8,64.2%,24.1%)\",\n    },\n    {\n      scale: 900,\n      hex: \"#14532d\",\n      rgb: \"rgb(20,83,45)\",\n      hsl: \"hsl(143.8,61.2%,20.2%)\",\n    },\n    {\n      scale: 950,\n      hex: \"#052e16\",\n      rgb: \"rgb(5,46,22)\",\n      hsl: \"hsl(144.9,80.4%,10%)\",\n    },\n  ],\n  emerald: [\n    {\n      scale: 50,\n      hex: \"#ecfdf5\",\n      rgb: \"rgb(236,253,245)\",\n      hsl: \"hsl(151.8,81%,95.9%)\",\n    },\n    {\n      scale: 100,\n      hex: \"#d1fae5\",\n      rgb: \"rgb(209,250,229)\",\n      hsl: \"hsl(149.3,80.4%,90%)\",\n    },\n    {\n      scale: 200,\n      hex: \"#a7f3d0\",\n      rgb: \"rgb(167,243,208)\",\n      hsl: \"hsl(152.4,76%,80.4%)\",\n    },\n    {\n      scale: 300,\n      hex: \"#6ee7b7\",\n      rgb: \"rgb(110,231,183)\",\n      hsl: \"hsl(156.2,71.6%,66.9%)\",\n    },\n    {\n      scale: 400,\n      hex: \"#34d399\",\n      rgb: \"rgb(52,211,153)\",\n      hsl: \"hsl(158.1,64.4%,51.6%)\",\n    },\n    {\n      scale: 500,\n      hex: \"#10b981\",\n      rgb: \"rgb(16,185,129)\",\n      hsl: \"hsl(160.1,84.1%,39.4%)\",\n    },\n    {\n      scale: 600,\n      hex: \"#059669\",\n      rgb: \"rgb(5,150,105)\",\n      hsl: \"hsl(161.4,93.5%,30.4%)\",\n    },\n    {\n      scale: 700,\n      hex: \"#047857\",\n      rgb: \"rgb(4,120,87)\",\n      hsl: \"hsl(162.9,93.5%,24.3%)\",\n    },\n    {\n      scale: 800,\n      hex: \"#065f46\",\n      rgb: \"rgb(6,95,70)\",\n      hsl: \"hsl(163.1,88.1%,19.8%)\",\n    },\n    {\n      scale: 900,\n      hex: \"#064e3b\",\n      rgb: \"rgb(6,78,59)\",\n      hsl: \"hsl(164.2,85.7%,16.5%)\",\n    },\n    {\n      scale: 950,\n      hex: \"#022c22\",\n      rgb: \"rgb(2,44,34)\",\n      hsl: \"hsl(165.7,91.3%,9%)\",\n    },\n  ],\n  teal: [\n    {\n      scale: 50,\n      hex: \"#f0fdfa\",\n      rgb: \"rgb(240,253,250)\",\n      hsl: \"hsl(166.2,76.5%,96.7%)\",\n    },\n    {\n      scale: 100,\n      hex: \"#ccfbf1\",\n      rgb: \"rgb(204,251,241)\",\n      hsl: \"hsl(167.2,85.5%,89.2%)\",\n    },\n    {\n      scale: 200,\n      hex: \"#99f6e4\",\n      rgb: \"rgb(153,246,228)\",\n      hsl: \"hsl(168.4,83.8%,78.2%)\",\n    },\n    {\n      scale: 300,\n      hex: \"#5eead4\",\n      rgb: \"rgb(94,234,212)\",\n      hsl: \"hsl(170.6,76.9%,64.3%)\",\n    },\n    {\n      scale: 400,\n      hex: \"#2dd4bf\",\n      rgb: \"rgb(45,212,191)\",\n      hsl: \"hsl(172.5,66%,50.4%)\",\n    },\n    {\n      scale: 500,\n      hex: \"#14b8a6\",\n      rgb: \"rgb(20,184,166)\",\n      hsl: \"hsl(173.4,80.4%,40%)\",\n    },\n    {\n      scale: 600,\n      hex: \"#0d9488\",\n      rgb: \"rgb(13,148,136)\",\n      hsl: \"hsl(174.7,83.9%,31.6%)\",\n    },\n    {\n      scale: 700,\n      hex: \"#0f766e\",\n      rgb: \"rgb(15,118,110)\",\n      hsl: \"hsl(175.3,77.4%,26.1%)\",\n    },\n    {\n      scale: 800,\n      hex: \"#115e59\",\n      rgb: \"rgb(17,94,89)\",\n      hsl: \"hsl(176.1,69.4%,21.8%)\",\n    },\n    {\n      scale: 900,\n      hex: \"#134e4a\",\n      rgb: \"rgb(19,78,74)\",\n      hsl: \"hsl(175.9,60.8%,19%)\",\n    },\n    {\n      scale: 950,\n      hex: \"#042f2e\",\n      rgb: \"rgb(4,47,46)\",\n      hsl: \"hsl(178.6,84.3%,10%)\",\n    },\n  ],\n  cyan: [\n    {\n      scale: 50,\n      hex: \"#ecfeff\",\n      rgb: \"rgb(236,254,255)\",\n      hsl: \"hsl(183.2,100%,96.3%)\",\n    },\n    {\n      scale: 100,\n      hex: \"#cffafe\",\n      rgb: \"rgb(207,250,254)\",\n      hsl: \"hsl(185.1,95.9%,90.4%)\",\n    },\n    {\n      scale: 200,\n      hex: \"#a5f3fc\",\n      rgb: \"rgb(165,243,252)\",\n      hsl: \"hsl(186.2,93.5%,81.8%)\",\n    },\n    {\n      scale: 300,\n      hex: \"#67e8f9\",\n      rgb: \"rgb(103,232,249)\",\n      hsl: \"hsl(187,92.4%,69%)\",\n    },\n    {\n      scale: 400,\n      hex: \"#22d3ee\",\n      rgb: \"rgb(34,211,238)\",\n      hsl: \"hsl(187.9,85.7%,53.3%)\",\n    },\n    {\n      scale: 500,\n      hex: \"#06b6d4\",\n      rgb: \"rgb(6,182,212)\",\n      hsl: \"hsl(188.7,94.5%,42.7%)\",\n    },\n    {\n      scale: 600,\n      hex: \"#0891b2\",\n      rgb: \"rgb(8,145,178)\",\n      hsl: \"hsl(191.6,91.4%,36.5%)\",\n    },\n    {\n      scale: 700,\n      hex: \"#0e7490\",\n      rgb: \"rgb(14,116,144)\",\n      hsl: \"hsl(192.9,82.3%,31%)\",\n    },\n    {\n      scale: 800,\n      hex: \"#155e75\",\n      rgb: \"rgb(21,94,117)\",\n      hsl: \"hsl(194.4,69.6%,27.1%)\",\n    },\n    {\n      scale: 900,\n      hex: \"#164e63\",\n      rgb: \"rgb(22,78,99)\",\n      hsl: \"hsl(196.4,63.6%,23.7%)\",\n    },\n    {\n      scale: 950,\n      hex: \"#083344\",\n      rgb: \"rgb(8,51,68)\",\n      hsl: \"hsl(197,78.9%,14.9%)\",\n    },\n  ],\n  sky: [\n    {\n      scale: 50,\n      hex: \"#f0f9ff\",\n      rgb: \"rgb(240,249,255)\",\n      hsl: \"hsl(204,100%,97.1%)\",\n    },\n    {\n      scale: 100,\n      hex: \"#e0f2fe\",\n      rgb: \"rgb(224,242,254)\",\n      hsl: \"hsl(204,93.8%,93.7%)\",\n    },\n    {\n      scale: 200,\n      hex: \"#bae6fd\",\n      rgb: \"rgb(186,230,253)\",\n      hsl: \"hsl(200.6,94.4%,86.1%)\",\n    },\n    {\n      scale: 300,\n      hex: \"#7dd3fc\",\n      rgb: \"rgb(125,211,252)\",\n      hsl: \"hsl(199.4,95.5%,73.9%)\",\n    },\n    {\n      scale: 400,\n      hex: \"#38bdf8\",\n      rgb: \"rgb(56,189,248)\",\n      hsl: \"hsl(198.4,93.2%,59.6%)\",\n    },\n    {\n      scale: 500,\n      hex: \"#0ea5e9\",\n      rgb: \"rgb(14,165,233)\",\n      hsl: \"hsl(198.6,88.7%,48.4%)\",\n    },\n    {\n      scale: 600,\n      hex: \"#0284c7\",\n      rgb: \"rgb(2,132,199)\",\n      hsl: \"hsl(200.4,98%,39.4%)\",\n    },\n    {\n      scale: 700,\n      hex: \"#0369a1\",\n      rgb: \"rgb(3,105,161)\",\n      hsl: \"hsl(201.3,96.3%,32.2%)\",\n    },\n    {\n      scale: 800,\n      hex: \"#075985\",\n      rgb: \"rgb(7,89,133)\",\n      hsl: \"hsl(201,90%,27.5%)\",\n    },\n    {\n      scale: 900,\n      hex: \"#0c4a6e\",\n      rgb: \"rgb(12,74,110)\",\n      hsl: \"hsl(202,80.3%,23.9%)\",\n    },\n    {\n      scale: 950,\n      hex: \"#082f49\",\n      rgb: \"rgb(8,47,73)\",\n      hsl: \"hsl(204,80.2%,15.9%)\",\n    },\n  ],\n  blue: [\n    {\n      scale: 50,\n      hex: \"#eff6ff\",\n      rgb: \"rgb(239,246,255)\",\n      hsl: \"hsl(213.8,100%,96.9%)\",\n    },\n    {\n      scale: 100,\n      hex: \"#dbeafe\",\n      rgb: \"rgb(219,234,254)\",\n      hsl: \"hsl(214.3,94.6%,92.7%)\",\n    },\n    {\n      scale: 200,\n      hex: \"#bfdbfe\",\n      rgb: \"rgb(191,219,254)\",\n      hsl: \"hsl(213.3,96.9%,87.3%)\",\n    },\n    {\n      scale: 300,\n      hex: \"#93c5fd\",\n      rgb: \"rgb(147,197,253)\",\n      hsl: \"hsl(211.7,96.4%,78.4%)\",\n    },\n    {\n      scale: 400,\n      hex: \"#60a5fa\",\n      rgb: \"rgb(96,165,250)\",\n      hsl: \"hsl(213.1,93.9%,67.8%)\",\n    },\n    {\n      scale: 500,\n      hex: \"#3b82f6\",\n      rgb: \"rgb(59,130,246)\",\n      hsl: \"hsl(217.2,91.2%,59.8%)\",\n    },\n    {\n      scale: 600,\n      hex: \"#2563eb\",\n      rgb: \"rgb(37,99,235)\",\n      hsl: \"hsl(221.2,83.2%,53.3%)\",\n    },\n    {\n      scale: 700,\n      hex: \"#1d4ed8\",\n      rgb: \"rgb(29,78,216)\",\n      hsl: \"hsl(224.3,76.3%,48%)\",\n    },\n    {\n      scale: 800,\n      hex: \"#1e40af\",\n      rgb: \"rgb(30,64,175)\",\n      hsl: \"hsl(225.9,70.7%,40.2%)\",\n    },\n    {\n      scale: 900,\n      hex: \"#1e3a8a\",\n      rgb: \"rgb(30,58,138)\",\n      hsl: \"hsl(224.4,64.3%,32.9%)\",\n    },\n    {\n      scale: 950,\n      hex: \"#172554\",\n      rgb: \"rgb(23,37,84)\",\n      hsl: \"hsl(226.2,57%,21%)\",\n    },\n  ],\n  indigo: [\n    {\n      scale: 50,\n      hex: \"#eef2ff\",\n      rgb: \"rgb(238,242,255)\",\n      hsl: \"hsl(225.9,100%,96.7%)\",\n    },\n    {\n      scale: 100,\n      hex: \"#e0e7ff\",\n      rgb: \"rgb(224,231,255)\",\n      hsl: \"hsl(226.5,100%,93.9%)\",\n    },\n    {\n      scale: 200,\n      hex: \"#c7d2fe\",\n      rgb: \"rgb(199,210,254)\",\n      hsl: \"hsl(228,96.5%,88.8%)\",\n    },\n    {\n      scale: 300,\n      hex: \"#a5b4fc\",\n      rgb: \"rgb(165,180,252)\",\n      hsl: \"hsl(229.7,93.5%,81.8%)\",\n    },\n    {\n      scale: 400,\n      hex: \"#818cf8\",\n      rgb: \"rgb(129,140,248)\",\n      hsl: \"hsl(234.5,89.5%,73.9%)\",\n    },\n    {\n      scale: 500,\n      hex: \"#6366f1\",\n      rgb: \"rgb(99,102,241)\",\n      hsl: \"hsl(238.7,83.5%,66.7%)\",\n    },\n    {\n      scale: 600,\n      hex: \"#4f46e5\",\n      rgb: \"rgb(79,70,229)\",\n      hsl: \"hsl(243.4,75.4%,58.6%)\",\n    },\n    {\n      scale: 700,\n      hex: \"#4338ca\",\n      rgb: \"rgb(67,56,202)\",\n      hsl: \"hsl(244.5,57.9%,50.6%)\",\n    },\n    {\n      scale: 800,\n      hex: \"#3730a3\",\n      rgb: \"rgb(55,48,163)\",\n      hsl: \"hsl(243.7,54.5%,41.4%)\",\n    },\n    {\n      scale: 900,\n      hex: \"#312e81\",\n      rgb: \"rgb(49,46,129)\",\n      hsl: \"hsl(242.2,47.4%,34.3%)\",\n    },\n    {\n      scale: 950,\n      hex: \"#1e1b4b\",\n      rgb: \"rgb(30,27,75)\",\n      hsl: \"hsl(243.8,47.1%,20%)\",\n    },\n  ],\n  violet: [\n    {\n      scale: 50,\n      hex: \"#f5f3ff\",\n      rgb: \"rgb(245,243,255)\",\n      hsl: \"hsl(250,100%,97.6%)\",\n    },\n    {\n      scale: 100,\n      hex: \"#ede9fe\",\n      rgb: \"rgb(237,233,254)\",\n      hsl: \"hsl(251.4,91.3%,95.5%)\",\n    },\n    {\n      scale: 200,\n      hex: \"#ddd6fe\",\n      rgb: \"rgb(221,214,254)\",\n      hsl: \"hsl(250.5,95.2%,91.8%)\",\n    },\n    {\n      scale: 300,\n      hex: \"#c4b5fd\",\n      rgb: \"rgb(196,181,253)\",\n      hsl: \"hsl(252.5,94.7%,85.1%)\",\n    },\n    {\n      scale: 400,\n      hex: \"#a78bfa\",\n      rgb: \"rgb(167,139,250)\",\n      hsl: \"hsl(255.1,91.7%,76.3%)\",\n    },\n    {\n      scale: 500,\n      hex: \"#8b5cf6\",\n      rgb: \"rgb(139,92,246)\",\n      hsl: \"hsl(258.3,89.5%,66.3%)\",\n    },\n    {\n      scale: 600,\n      hex: \"#7c3aed\",\n      rgb: \"rgb(124,58,237)\",\n      hsl: \"hsl(262.1,83.3%,57.8%)\",\n    },\n    {\n      scale: 700,\n      hex: \"#6d28d9\",\n      rgb: \"rgb(109,40,217)\",\n      hsl: \"hsl(263.4,70%,50.4%)\",\n    },\n    {\n      scale: 800,\n      hex: \"#5b21b6\",\n      rgb: \"rgb(91,33,182)\",\n      hsl: \"hsl(263.4,69.3%,42.2%)\",\n    },\n    {\n      scale: 900,\n      hex: \"#4c1d95\",\n      rgb: \"rgb(76,29,149)\",\n      hsl: \"hsl(263.5,67.4%,34.9%)\",\n    },\n    {\n      scale: 950,\n      hex: \"#1e1b4b\",\n      rgb: \"rgb(46,16,101)\",\n      hsl: \"hsl(261.2,72.6%,22.9%)\",\n    },\n  ],\n  purple: [\n    {\n      scale: 50,\n      hex: \"#faf5ff\",\n      rgb: \"rgb(250,245,255)\",\n      hsl: \"hsl(270,100%,98%)\",\n    },\n    {\n      scale: 100,\n      hex: \"#f3e8ff\",\n      rgb: \"rgb(243,232,255)\",\n      hsl: \"hsl(268.7,100%,95.5%)\",\n    },\n    {\n      scale: 200,\n      hex: \"#e9d5ff\",\n      rgb: \"rgb(233,213,255)\",\n      hsl: \"hsl(268.6,100%,91.8%)\",\n    },\n    {\n      scale: 300,\n      hex: \"#d8b4fe\",\n      rgb: \"rgb(216,180,254)\",\n      hsl: \"hsl(269.2,97.4%,85.1%)\",\n    },\n    {\n      scale: 400,\n      hex: \"#c084fc\",\n      rgb: \"rgb(192,132,252)\",\n      hsl: \"hsl(270,95.2%,75.3%)\",\n    },\n    {\n      scale: 500,\n      hex: \"#a855f7\",\n      rgb: \"rgb(168,85,247)\",\n      hsl: \"hsl(270.7,91%,65.1%)\",\n    },\n    {\n      scale: 600,\n      hex: \"#9333ea\",\n      rgb: \"rgb(147,51,234)\",\n      hsl: \"hsl(271.5,81.3%,55.9%)\",\n    },\n    {\n      scale: 700,\n      hex: \"#7e22ce\",\n      rgb: \"rgb(126,34,206)\",\n      hsl: \"hsl(272.1,71.7%,47.1%)\",\n    },\n    {\n      scale: 800,\n      hex: \"#6b21a8\",\n      rgb: \"rgb(107,33,168)\",\n      hsl: \"hsl(272.9,67.2%,39.4%)\",\n    },\n    {\n      scale: 900,\n      hex: \"#581c87\",\n      rgb: \"rgb(88,28,135)\",\n      hsl: \"hsl(273.6,65.6%,32%)\",\n    },\n    {\n      scale: 950,\n      hex: \"#3b0764\",\n      rgb: \"rgb(59,7,100)\",\n      hsl: \"hsl(273.5,86.9%,21%)\",\n    },\n  ],\n  fuchsia: [\n    {\n      scale: 50,\n      hex: \"#fdf4ff\",\n      rgb: \"rgb(253,244,255)\",\n      hsl: \"hsl(289.1,100%,97.8%)\",\n    },\n    {\n      scale: 100,\n      hex: \"#fae8ff\",\n      rgb: \"rgb(250,232,255)\",\n      hsl: \"hsl(287,100%,95.5%)\",\n    },\n    {\n      scale: 200,\n      hex: \"#f5d0fe\",\n      rgb: \"rgb(245,208,254)\",\n      hsl: \"hsl(288.3,95.8%,90.6%)\",\n    },\n    {\n      scale: 300,\n      hex: \"#f0abfc\",\n      rgb: \"rgb(240,171,252)\",\n      hsl: \"hsl(291.1,93.1%,82.9%)\",\n    },\n    {\n      scale: 400,\n      hex: \"#e879f9\",\n      rgb: \"rgb(232,121,249)\",\n      hsl: \"hsl(292,91.4%,72.5%)\",\n    },\n    {\n      scale: 500,\n      hex: \"#d946ef\",\n      rgb: \"rgb(217,70,239)\",\n      hsl: \"hsl(292.2,84.1%,60.6%)\",\n    },\n    {\n      scale: 600,\n      hex: \"#c026d3\",\n      rgb: \"rgb(192,38,211)\",\n      hsl: \"hsl(293.4,69.5%,48.8%)\",\n    },\n    {\n      scale: 700,\n      hex: \"#a21caf\",\n      rgb: \"rgb(162,28,175)\",\n      hsl: \"hsl(294.7,72.4%,39.8%)\",\n    },\n    {\n      scale: 800,\n      hex: \"#86198f\",\n      rgb: \"rgb(134,25,143)\",\n      hsl: \"hsl(295.4,70.2%,32.9%)\",\n    },\n    {\n      scale: 900,\n      hex: \"#701a75\",\n      rgb: \"rgb(112,26,117)\",\n      hsl: \"hsl(296.7,63.6%,28%)\",\n    },\n    {\n      scale: 950,\n      hex: \"#4a044e\",\n      rgb: \"rgb(74,4,78)\",\n      hsl: \"hsl(296.8,90.2%,16.1%)\",\n    },\n  ],\n  pink: [\n    {\n      scale: 50,\n      hex: \"#fdf2f8\",\n      rgb: \"rgb(253,242,248)\",\n      hsl: \"hsl(327.3,73.3%,97.1%)\",\n    },\n    {\n      scale: 100,\n      hex: \"#fce7f3\",\n      rgb: \"rgb(252,231,243)\",\n      hsl: \"hsl(325.7,77.8%,94.7%)\",\n    },\n    {\n      scale: 200,\n      hex: \"#fbcfe8\",\n      rgb: \"rgb(251,207,232)\",\n      hsl: \"hsl(325.9,84.6%,89.8%)\",\n    },\n    {\n      scale: 300,\n      hex: \"#f9a8d4\",\n      rgb: \"rgb(249,168,212)\",\n      hsl: \"hsl(327.4,87.1%,81.8%)\",\n    },\n    {\n      scale: 400,\n      hex: \"#f472b6\",\n      rgb: \"rgb(244,114,182)\",\n      hsl: \"hsl(328.6,85.5%,70.2%)\",\n    },\n    {\n      scale: 500,\n      hex: \"#ec4899\",\n      rgb: \"rgb(236,72,153)\",\n      hsl: \"hsl(330.4,81.2%,60.4%)\",\n    },\n    {\n      scale: 600,\n      hex: \"#db2777\",\n      rgb: \"rgb(219,39,119)\",\n      hsl: \"hsl(333.3,71.4%,50.6%)\",\n    },\n    {\n      scale: 700,\n      hex: \"#be185d\",\n      rgb: \"rgb(190,24,93)\",\n      hsl: \"hsl(335.1,77.6%,42%)\",\n    },\n    {\n      scale: 800,\n      hex: \"#9d174d\",\n      rgb: \"rgb(157,23,77)\",\n      hsl: \"hsl(335.8,74.4%,35.3%)\",\n    },\n    {\n      scale: 900,\n      hex: \"#831843\",\n      rgb: \"rgb(131,24,67)\",\n      hsl: \"hsl(335.9,69%,30.4%)\",\n    },\n    {\n      scale: 950,\n      hex: \"#500724\",\n      rgb: \"rgb(80,7,36)\",\n      hsl: \"hsl(336.2,83.9%,17.1%)\",\n    },\n  ],\n  rose: [\n    {\n      scale: 50,\n      hex: \"#fff1f2\",\n      rgb: \"rgb(255,241,242)\",\n      hsl: \"hsl(355.7,100%,97.3%)\",\n    },\n    {\n      scale: 100,\n      hex: \"#ffe4e6\",\n      rgb: \"rgb(255,228,230)\",\n      hsl: \"hsl(355.6,100%,94.7%)\",\n    },\n    {\n      scale: 200,\n      hex: \"#fecdd3\",\n      rgb: \"rgb(254,205,211)\",\n      hsl: \"hsl(352.7,96.1%,90%)\",\n    },\n    {\n      scale: 300,\n      hex: \"#fda4af\",\n      rgb: \"rgb(253,164,175)\",\n      hsl: \"hsl(352.6,95.7%,81.8%)\",\n    },\n    {\n      scale: 400,\n      hex: \"#fb7185\",\n      rgb: \"rgb(251,113,133)\",\n      hsl: \"hsl(351.3,94.5%,71.4%)\",\n    },\n    {\n      scale: 500,\n      hex: \"#f43f5e\",\n      rgb: \"rgb(244,63,94)\",\n      hsl: \"hsl(349.7,89.2%,60.2%)\",\n    },\n    {\n      scale: 600,\n      hex: \"#e11d48\",\n      rgb: \"rgb(225,29,72)\",\n      hsl: \"hsl(346.8,77.2%,49.8%)\",\n    },\n    {\n      scale: 700,\n      hex: \"#be123c\",\n      rgb: \"rgb(190,18,60)\",\n      hsl: \"hsl(345.3,82.7%,40.8%)\",\n    },\n    {\n      scale: 800,\n      hex: \"#9f1239\",\n      rgb: \"rgb(159,18,57)\",\n      hsl: \"hsl(343.4,79.7%,34.7%)\",\n    },\n    {\n      scale: 900,\n      hex: \"#881337\",\n      rgb: \"rgb(136,19,55)\",\n      hsl: \"hsl(341.5,75.5%,30.4%)\",\n    },\n    {\n      scale: 950,\n      hex: \"#4c0519\",\n      rgb: \"rgb(76,5,25)\",\n      hsl: \"hsl(343.1,87.7%,15.9%)\",\n    },\n  ],\n}\n\nexport const colorMapping = {\n  light: {\n    background: \"white\",\n    foreground: \"{{base}}-950\",\n    card: \"white\",\n    \"card-foreground\": \"{{base}}-950\",\n    popover: \"white\",\n    \"popover-foreground\": \"{{base}}-950\",\n    primary: \"{{base}}-900\",\n    \"primary-foreground\": \"{{base}}-50\",\n    secondary: \"{{base}}-100\",\n    \"secondary-foreground\": \"{{base}}-900\",\n    muted: \"{{base}}-100\",\n    \"muted-foreground\": \"{{base}}-500\",\n    accent: \"{{base}}-100\",\n    \"accent-foreground\": \"{{base}}-900\",\n    destructive: \"red-500\",\n    \"destructive-foreground\": \"{{base}}-50\",\n    border: \"{{base}}-200\",\n    input: \"{{base}}-200\",\n    ring: \"{{base}}-950\",\n  },\n  dark: {\n    background: \"{{base}}-950\",\n    foreground: \"{{base}}-50\",\n    card: \"{{base}}-950\",\n    \"card-foreground\": \"{{base}}-50\",\n    popover: \"{{base}}-950\",\n    \"popover-foreground\": \"{{base}}-50\",\n    primary: \"{{base}}-50\",\n    \"primary-foreground\": \"{{base}}-900\",\n    secondary: \"{{base}}-800\",\n    \"secondary-foreground\": \"{{base}}-50\",\n    muted: \"{{base}}-800\",\n    \"muted-foreground\": \"{{base}}-400\",\n    accent: \"{{base}}-800\",\n    \"accent-foreground\": \"{{base}}-50\",\n    destructive: \"red-900\",\n    \"destructive-foreground\": \"{{base}}-50\",\n    border: \"{{base}}-800\",\n    input: \"{{base}}-800\",\n    ring: \"{{base}}-300\",\n  },\n} as const\n",
    "dependencies": []
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/alert-demo.tsx": {
    "source": "import { Terminal } from \"lucide-react\"\n\nimport {\n  Alert,\n  AlertDescription,\n  AlertTitle,\n} from \"@/registry/default/ui/alert\"\n\nexport default function AlertDemo() {\n  return (\n    <Alert>\n      <Terminal className=\"h-4 w-4\" />\n      <AlertTitle>Heads up!</AlertTitle>\n      <AlertDescription>\n        You can add components to your app using the cli.\n      </AlertDescription>\n    </Alert>\n  )\n}\n",
    "dependencies": ["lucide-react", "@/registry/default/ui/alert"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/alert-destructive.tsx": {
    "source": "import { AlertCircle } from \"lucide-react\"\n\nimport {\n  Alert,\n  AlertDescription,\n  AlertTitle,\n} from \"@/registry/default/ui/alert\"\n\nexport default function AlertDestructive() {\n  return (\n    <Alert variant=\"destructive\">\n      <AlertCircle className=\"h-4 w-4\" />\n      <AlertTitle>Error</AlertTitle>\n      <AlertDescription>\n        Your session has expired. Please log in again.\n      </AlertDescription>\n    </Alert>\n  )\n}\n",
    "dependencies": ["lucide-react", "@/registry/default/ui/alert"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/aspect-ratio-demo.tsx": {
    "source": "import Image from \"next/image\"\n\nimport { AspectRatio } from \"@/registry/default/ui/aspect-ratio\"\n\nexport default function AspectRatioDemo() {\n  return (\n    <AspectRatio ratio={16 / 9} className=\"bg-muted\">\n      <Image\n        src=\"https://images.unsplash.com/photo-1588345921523-c2dcdb7f1dcd?w=800&dpr=2&q=80\"\n        alt=\"Photo by Drew Beamer\"\n        fill\n        className=\"rounded-md object-cover\"\n      />\n    </AspectRatio>\n  )\n}\n",
    "dependencies": ["next/image", "@/registry/default/ui/aspect-ratio"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/avatar-demo.tsx": {
    "source": "import {\n  Avatar,\n  AvatarFallback,\n  AvatarImage,\n} from \"@/registry/default/ui/avatar\"\n\nexport default function AvatarDemo() {\n  return (\n    <Avatar>\n      <AvatarImage src=\"https://github.com/shadcn.png\" alt=\"@shadcn\" />\n      <AvatarFallback>CN</AvatarFallback>\n    </Avatar>\n  )\n}\n",
    "dependencies": ["@/registry/default/ui/avatar"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/badge-demo.tsx": {
    "source": "import { Badge } from \"@/registry/default/ui/badge\"\nimport { Stack } from \"@/registry/default/ui/stack\"\n\nexport default function BadgeDemo() {\n  return (\n    <Stack gap={2}>\n      <Stack direction=\"row\" gap={1}>\n        <Badge variant=\"gray\">gray</Badge>\n        <Badge variant=\"gray-subtle\">gray-subtle</Badge>\n      </Stack>\n\n      <Stack direction=\"row\" gap={1}>\n        <Badge variant=\"blue\">blue</Badge>\n        <Badge variant=\"blue-subtle\">blue-subtle</Badge>\n      </Stack>\n\n      <Stack direction=\"row\" gap={1}>\n        <Badge variant=\"purple\">purple</Badge>\n        <Badge variant=\"purple-subtle\">purple-subtle</Badge>\n      </Stack>\n\n      <Stack direction=\"row\" gap={1}>\n        <Badge variant=\"amber\">amber</Badge>\n        <Badge variant=\"amber-subtle\">amber-subtle</Badge>\n      </Stack>\n\n      <Stack direction=\"row\" gap={1}>\n        <Badge variant=\"red\">red</Badge>\n        <Badge variant=\"red-subtle\">red-subtle</Badge>\n      </Stack>\n\n      <Stack direction=\"row\" gap={1}>\n        <Badge variant=\"pink\">pink</Badge>\n        <Badge variant=\"pink-subtle\">pink-subtle</Badge>\n      </Stack>\n\n      <Stack direction=\"row\" gap={1}>\n        <Badge variant=\"green\">green</Badge>\n        <Badge variant=\"green-subtle\">green-subtle</Badge>\n      </Stack>\n\n      <Stack direction=\"row\" gap={1}>\n        <Badge variant=\"teal\">teal</Badge>\n        <Badge variant=\"teal-subtle\">teal-subtle</Badge>\n      </Stack>\n\n      <div>\n        <Badge variant=\"trial\">Trial</Badge>\n      </div>\n\n      <div>\n        <Badge variant=\"turbo\">Turborepo</Badge>\n      </div>\n    </Stack>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/badge",
      "@/registry/default/ui/stack"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/badge-icons.tsx": {
    "source": "import { Shield } from \"lucide-react\"\n\nimport { Badge } from \"@/registry/default/ui/badge\"\nimport { Stack } from \"@/registry/default/ui/stack\"\n\n// TODO improve icons\n\nexport default function BadgeOutline() {\n  return (\n    <Stack gap={2}>\n      <Stack align=\"center\" direction=\"row\" gap={1}>\n        <Badge icon={<Shield />} size=\"lg\" variant=\"gray\">\n          gray\n        </Badge>\n        <Badge icon={<Shield />} size=\"md\" variant=\"gray\">\n          gray\n        </Badge>\n        <Badge icon={<Shield />} size=\"sm\" variant=\"gray\">\n          gray\n        </Badge>\n        <Badge icon={<Shield />} size=\"sm\" variant=\"gray-subtle\">\n          gray\n        </Badge>\n        <Badge icon={<Shield />} size=\"md\" variant=\"gray-subtle\">\n          gray\n        </Badge>\n        <Badge icon={<Shield />} size=\"lg\" variant=\"gray-subtle\">\n          gray\n        </Badge>\n      </Stack>\n\n      <Stack align=\"center\" direction=\"row\" gap={1}>\n        <Badge icon={<Shield />} size=\"lg\" variant=\"blue\">\n          blue\n        </Badge>\n        <Badge icon={<Shield />} size=\"md\" variant=\"blue\">\n          blue\n        </Badge>\n        <Badge icon={<Shield />} size=\"sm\" variant=\"blue\">\n          blue\n        </Badge>\n        <Badge icon={<Shield />} size=\"sm\" variant=\"blue-subtle\">\n          blue\n        </Badge>\n        <Badge icon={<Shield />} size=\"md\" variant=\"blue-subtle\">\n          blue\n        </Badge>\n        <Badge icon={<Shield />} size=\"lg\" variant=\"blue-subtle\">\n          blue\n        </Badge>\n      </Stack>\n\n      <Stack align=\"center\" direction=\"row\" gap={1}>\n        <Badge icon={<Shield />} size=\"lg\" variant=\"purple\">\n          purple\n        </Badge>\n        <Badge icon={<Shield />} size=\"md\" variant=\"purple\">\n          purple\n        </Badge>\n        <Badge icon={<Shield />} size=\"sm\" variant=\"purple\">\n          purple\n        </Badge>\n        <Badge icon={<Shield />} size=\"sm\" variant=\"purple-subtle\">\n          purple\n        </Badge>\n        <Badge icon={<Shield />} size=\"md\" variant=\"purple-subtle\">\n          purple\n        </Badge>\n        <Badge icon={<Shield />} size=\"lg\" variant=\"purple-subtle\">\n          purple\n        </Badge>\n      </Stack>\n\n      <Stack align=\"center\" direction=\"row\" gap={1}>\n        <Badge icon={<Shield />} size=\"lg\" variant=\"amber\">\n          amber\n        </Badge>\n        <Badge icon={<Shield />} size=\"md\" variant=\"amber\">\n          amber\n        </Badge>\n        <Badge icon={<Shield />} size=\"sm\" variant=\"amber\">\n          amber\n        </Badge>\n        <Badge icon={<Shield />} size=\"sm\" variant=\"amber-subtle\">\n          amber\n        </Badge>\n        <Badge icon={<Shield />} size=\"md\" variant=\"amber-subtle\">\n          amber\n        </Badge>\n        <Badge icon={<Shield />} size=\"lg\" variant=\"amber-subtle\">\n          amber\n        </Badge>\n      </Stack>\n\n      <Stack align=\"center\" direction=\"row\" gap={1}>\n        <Badge icon={<Shield />} size=\"lg\" variant=\"red\">\n          red\n        </Badge>\n        <Badge icon={<Shield />} size=\"md\" variant=\"red\">\n          red\n        </Badge>\n        <Badge icon={<Shield />} size=\"sm\" variant=\"red\">\n          red\n        </Badge>\n        <Badge icon={<Shield />} size=\"sm\" variant=\"red-subtle\">\n          red\n        </Badge>\n        <Badge icon={<Shield />} size=\"md\" variant=\"red-subtle\">\n          red\n        </Badge>\n        <Badge icon={<Shield />} size=\"lg\" variant=\"red-subtle\">\n          red\n        </Badge>\n      </Stack>\n\n      <Stack align=\"center\" direction=\"row\" gap={1}>\n        <Badge icon={<Shield />} size=\"lg\" variant=\"pink\">\n          pink\n        </Badge>\n        <Badge icon={<Shield />} size=\"md\" variant=\"pink\">\n          pink\n        </Badge>\n        <Badge icon={<Shield />} size=\"sm\" variant=\"pink\">\n          pink\n        </Badge>\n        <Badge icon={<Shield />} size=\"sm\" variant=\"pink-subtle\">\n          pink\n        </Badge>\n        <Badge icon={<Shield />} size=\"md\" variant=\"pink-subtle\">\n          pink\n        </Badge>\n        <Badge icon={<Shield />} size=\"lg\" variant=\"pink-subtle\">\n          pink\n        </Badge>\n      </Stack>\n\n      <Stack align=\"center\" direction=\"row\" gap={1}>\n        <Badge icon={<Shield />} size=\"lg\" variant=\"green\">\n          green\n        </Badge>\n        <Badge icon={<Shield />} size=\"md\" variant=\"green\">\n          green\n        </Badge>\n        <Badge icon={<Shield />} size=\"sm\" variant=\"green\">\n          green\n        </Badge>\n        <Badge icon={<Shield />} size=\"sm\" variant=\"green-subtle\">\n          green\n        </Badge>\n        <Badge icon={<Shield />} size=\"md\" variant=\"green-subtle\">\n          green\n        </Badge>\n        <Badge icon={<Shield />} size=\"lg\" variant=\"green-subtle\">\n          green\n        </Badge>\n      </Stack>\n\n      <Stack align=\"center\" direction=\"row\" gap={1}>\n        <Badge icon={<Shield />} size=\"lg\" variant=\"teal\">\n          teal\n        </Badge>\n        <Badge icon={<Shield />} size=\"md\" variant=\"teal\">\n          teal\n        </Badge>\n        <Badge icon={<Shield />} size=\"sm\" variant=\"teal\">\n          teal\n        </Badge>\n        <Badge icon={<Shield />} size=\"sm\" variant=\"teal-subtle\">\n          teal\n        </Badge>\n        <Badge icon={<Shield />} size=\"md\" variant=\"teal-subtle\">\n          teal\n        </Badge>\n        <Badge icon={<Shield />} size=\"lg\" variant=\"teal-subtle\">\n          teal\n        </Badge>\n      </Stack>\n    </Stack>\n  )\n}\n",
    "dependencies": [
      "lucide-react",
      "@/registry/default/ui/badge",
      "@/registry/default/ui/stack"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/badge-sizes.tsx": {
    "source": "import { Badge } from \"@/registry/default/ui/badge\"\nimport { Stack } from \"@/registry/default/ui/stack\"\n\nexport default function BadgeDestructive() {\n  return (\n    <Stack gap={2} align=\"flex-start\">\n      <Badge variant=\"gray\" size=\"sm\">\n        Small\n      </Badge>\n      <Badge variant=\"gray\" size=\"md\">\n        Medium\n      </Badge>\n      <Badge variant=\"gray\" size=\"lg\">\n        Large\n      </Badge>\n    </Stack>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/badge",
      "@/registry/default/ui/stack"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/button-demo.tsx": {
    "source": "import { Button } from \"@/registry/default/ui/button\"\nimport { Stack } from \"@/registry/default/ui/stack\"\n\nexport default function ButtonDemo() {\n  return (\n    <Stack\n      align=\"flex-start\"\n      direction={{ sm: \"column\", md: \"row\" }}\n      gap={4}\n      justify=\"space-between\"\n    >\n      <Button size=\"small\">Upload</Button>\n      <Button>Upload</Button>\n      <Button size=\"large\">Upload</Button>\n    </Stack>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/button",
      "@/registry/default/ui/stack"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/button-disabled.tsx": {
    "source": "import { Button } from \"@/registry/default/ui/button\"\nimport { Stack } from \"@/registry/default/ui/stack\"\n\nexport default function ButtonDisabled() {\n  return (\n    <Stack\n      align=\"start\"\n      direction={{ sm: \"column\", md: \"row\" }}\n      gap={4}\n      justify=\"space-between\"\n    >\n      <Button disabled size=\"small\">\n        Upload\n      </Button>\n      <Button disabled>Upload</Button>\n      <Button disabled size=\"large\">\n        Upload\n      </Button>\n    </Stack>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/button",
      "@/registry/default/ui/stack"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/button-loading.tsx": {
    "source": "import { Button } from \"@/registry/default/ui/button\"\nimport { Stack } from \"@/registry/default/ui/stack\"\n\nexport default function ButtonLoading() {\n  return (\n    <Stack\n      align=\"start\"\n      direction={{ sm: \"column\", md: \"row\" }}\n      gap={4}\n      justify=\"space-between\"\n    >\n      <Button loading size=\"small\">\n        Upload\n      </Button>\n      <Button loading>Upload</Button>\n      <Button loading size=\"large\">\n        Upload\n      </Button>\n    </Stack>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/button",
      "@/registry/default/ui/stack"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/button-prefix.tsx": {
    "source": "import { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { Button } from \"@/registry/default/ui/button\"\nimport { Stack } from \"@/registry/default/ui/stack\"\n\nexport default function ButtonPrefix() {\n  return (\n    <Stack\n      align=\"start\"\n      direction={{ sm: \"column\", md: \"row\" }}\n      gap={4}\n      justify=\"space-between\"\n    >\n      <Button prefix={<ArrowLeft className=\"h-4 w-4\" />}>Upload</Button>\n      <Button suffix={<ArrowRight className=\"h-4 w-4\" />}>Upload</Button>\n      <Button\n        prefix={<ArrowLeft className=\"h-4 w-4\" />}\n        suffix={<ArrowRight className=\"h-4 w-4\" />}\n      >\n        Upload\n      </Button>\n    </Stack>\n  )\n}\n",
    "dependencies": [
      "lucide-react",
      "@/registry/default/ui/button",
      "@/registry/default/ui/stack"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/button-rounded.tsx": {
    "source": "import { Button } from \"@/registry/default/ui/button\"\nimport { Stack } from \"@/registry/default/ui/stack\"\n\nexport default function ButtonRounded() {\n  return (\n    <Stack\n      align=\"start\"\n      direction={{ sm: \"column\", md: \"row\" }}\n      gap={4}\n      justify=\"space-between\"\n    >\n      <Button shadow shape=\"rounded\" size=\"small\" variant=\"secondary\">\n        Upload\n      </Button>\n      <Button shadow shape=\"rounded\" variant=\"secondary\">\n        Upload\n      </Button>\n      <Button shadow shape=\"rounded\" size=\"large\" variant=\"secondary\">\n        Upload\n      </Button>\n    </Stack>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/button",
      "@/registry/default/ui/stack"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/button-shapes.tsx": {
    "source": "import { ArrowUp } from \"lucide-react\"\n\nimport { Button } from \"@/registry/default/ui/button\"\nimport { Stack } from \"@/registry/default/ui/stack\"\n\nexport default function ButtonShapes() {\n  const Arrow = () => <ArrowUp className=\"h-4 w-4\" />\n\n  return (\n    <Stack\n      align=\"start\"\n      direction={{ sm: \"column\", md: \"row\" }}\n      gap={4}\n      justify=\"space-between\"\n    >\n      <Button aria-label=\"Upload\" shape=\"square\" size=\"tiny\" svgOnly>\n        <Arrow />\n      </Button>\n      <Button aria-label=\"Upload\" shape=\"square\" size=\"small\" svgOnly>\n        <Arrow />\n      </Button>\n      <Button aria-label=\"Upload\" shape=\"square\" svgOnly>\n        <Arrow />\n      </Button>\n      <Button aria-label=\"Upload\" shape=\"square\" size=\"large\" svgOnly>\n        <Arrow />\n      </Button>\n      <Button aria-label=\"Upload\" shape=\"circle\" size=\"tiny\" svgOnly>\n        <Arrow />\n      </Button>\n      <Button aria-label=\"Upload\" shape=\"circle\" size=\"small\" svgOnly>\n        <Arrow />\n      </Button>\n      <Button aria-label=\"Upload\" shape=\"circle\" svgOnly>\n        <Arrow />\n      </Button>\n      <Button aria-label=\"Upload\" shape=\"circle\" size=\"large\" svgOnly>\n        <Arrow />\n      </Button>\n    </Stack>\n  )\n}\n",
    "dependencies": [
      "lucide-react",
      "@/registry/default/ui/button",
      "@/registry/default/ui/stack"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/button-types.tsx": {
    "source": "import { Button } from \"@/registry/default/ui/button\"\nimport { Stack } from \"@/registry/default/ui/stack\"\n\nexport default function ButtonTypes() {\n  return (\n    <Stack\n      align=\"start\"\n      direction={{ sm: \"column\", md: \"row\" }}\n      gap={4}\n      justify=\"space-between\"\n    >\n      <Button variant=\"secondary\">Upload</Button>\n      <Button variant=\"tertiary\">Upload</Button>\n      <Button variant=\"error\">Upload</Button>\n      <Button variant=\"warning\">Upload</Button>\n    </Stack>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/button",
      "@/registry/default/ui/stack"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/button-with-icon.tsx": {
    "source": "import { Mail } from \"lucide-react\"\n\nimport { Button } from \"@/registry/default/ui/button\"\n\nexport default function ButtonWithIcon() {\n  return (\n    <Button>\n      <Mail className=\"mr-2 h-4 w-4\" /> Login with Email\n    </Button>\n  )\n}\n",
    "dependencies": ["lucide-react", "@/registry/default/ui/button"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/calendar-demo.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\n\nimport { Calendar } from \"@/registry/default/ui/calendar\"\n\nexport default function CalendarDemo() {\n  const [date, setDate] = React.useState<Date | undefined>(new Date())\n\n  return (\n    <Calendar\n      mode=\"single\"\n      selected={date}\n      onSelect={setDate}\n      className=\"rounded-md border\"\n    />\n  )\n}\n",
    "dependencies": ["react", "@/registry/default/ui/calendar"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/calendar-form.tsx": {
    "source": "\"use client\"\n\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport { format } from \"date-fns\"\nimport { CalendarIcon } from \"lucide-react\"\nimport { useForm } from \"react-hook-form\"\nimport { z } from \"zod\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/registry/default/ui/button\"\nimport { Calendar } from \"@/registry/default/ui/calendar\"\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/registry/default/ui/form\"\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/registry/default/ui/popover\"\nimport { toast } from \"@/registry/default/ui/use-toast\"\n\nconst FormSchema = z.object({\n  dob: z.date({\n    required_error: \"A date of birth is required.\",\n  }),\n})\n\nexport default function CalendarForm() {\n  const form = useForm<z.infer<typeof FormSchema>>({\n    resolver: zodResolver(FormSchema),\n  })\n\n  function onSubmit(data: z.infer<typeof FormSchema>) {\n    toast({\n      title: \"You submitted the following values:\",\n      description: (\n        <pre className=\"mt-2 w-[340px] rounded-md bg-slate-950 p-4\">\n          <code className=\"text-white\">{JSON.stringify(data, null, 2)}</code>\n        </pre>\n      ),\n    })\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-8\">\n        <FormField\n          control={form.control}\n          name=\"dob\"\n          render={({ field }) => (\n            <FormItem className=\"flex flex-col\">\n              <FormLabel>Date of birth</FormLabel>\n              <Popover>\n                <PopoverTrigger asChild>\n                  <FormControl>\n                    <Button\n                      variant=\"secondary\"\n                      className={cn(\n                        \"w-[240px] pl-3 text-left font-normal\",\n                        !field.value && \"text-muted-foreground\"\n                      )}\n                    >\n                      {field.value ? (\n                        format(field.value, \"PPP\")\n                      ) : (\n                        <span>Pick a date</span>\n                      )}\n                      <CalendarIcon className=\"ml-auto h-4 w-4 opacity-50\" />\n                    </Button>\n                  </FormControl>\n                </PopoverTrigger>\n                <PopoverContent className=\"w-auto p-0\" align=\"start\">\n                  <Calendar\n                    mode=\"single\"\n                    selected={field.value}\n                    onSelect={field.onChange}\n                    disabled={(date) =>\n                      date > new Date() || date < new Date(\"1900-01-01\")\n                    }\n                    initialFocus\n                  />\n                </PopoverContent>\n              </Popover>\n              <FormDescription>\n                Your date of birth is used to calculate your age.\n              </FormDescription>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <Button type=\"submit\">Submit</Button>\n      </form>\n    </Form>\n  )\n}\n",
    "dependencies": [
      "@hookform/resolvers/zod",
      "date-fns",
      "lucide-react",
      "react-hook-form",
      "zod",
      "@/lib/utils",
      "@/registry/default/ui/button",
      "@/registry/default/ui/calendar",
      "@/registry/default/ui/form",
      "@/registry/default/ui/popover",
      "@/registry/default/ui/use-toast"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/calendar-react-hook-form.tsx": {
    "source": "\"use client\"\n\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport { format } from \"date-fns\"\nimport { CalendarIcon } from \"lucide-react\"\nimport { useForm } from \"react-hook-form\"\nimport { z } from \"zod\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/registry/default/ui/button\"\nimport { Calendar } from \"@/registry/default/ui/calendar\"\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/registry/default/ui/form\"\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/registry/default/ui/popover\"\nimport { toast } from \"@/registry/default/ui/use-toast\"\n\nconst FormSchema = z.object({\n  dob: z.date({\n    required_error: \"A date of birth is required.\",\n  }),\n})\n\nexport default function CalendarForm() {\n  const form = useForm<z.infer<typeof FormSchema>>({\n    resolver: zodResolver(FormSchema),\n  })\n\n  function onSubmit(data: z.infer<typeof FormSchema>) {\n    toast({\n      title: \"You submitted the following values:\",\n      description: (\n        <pre className=\"mt-2 w-[340px] rounded-md bg-slate-950 p-4\">\n          <code className=\"text-white\">{JSON.stringify(data, null, 2)}</code>\n        </pre>\n      ),\n    })\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-8\">\n        <FormField\n          control={form.control}\n          name=\"dob\"\n          render={({ field }) => (\n            <FormItem className=\"flex flex-col\">\n              <FormLabel>Date of birth</FormLabel>\n              <Popover>\n                <PopoverTrigger asChild>\n                  <FormControl>\n                    <Button\n                      variant=\"secondary\"\n                      className={cn(\n                        \"w-[240px] pl-3 text-left font-normal\",\n                        !field.value && \"text-muted-foreground\"\n                      )}\n                    >\n                      {field.value ? (\n                        format(field.value, \"PPP\")\n                      ) : (\n                        <span>Pick a date</span>\n                      )}\n                      <CalendarIcon className=\"ml-auto h-4 w-4 opacity-50\" />\n                    </Button>\n                  </FormControl>\n                </PopoverTrigger>\n                <PopoverContent className=\"w-auto p-0\" align=\"start\">\n                  <Calendar\n                    mode=\"single\"\n                    selected={field.value}\n                    onSelect={field.onChange}\n                    disabled={(date) =>\n                      date > new Date() || date < new Date(\"1900-01-01\")\n                    }\n                    initialFocus\n                  />\n                </PopoverContent>\n              </Popover>\n              <FormDescription>\n                Your date of birth is used to calculate your age.\n              </FormDescription>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <Button type=\"submit\">Submit</Button>\n      </form>\n    </Form>\n  )\n}\n",
    "dependencies": [
      "@hookform/resolvers/zod",
      "date-fns",
      "lucide-react",
      "react-hook-form",
      "zod",
      "@/lib/utils",
      "@/registry/default/ui/button",
      "@/registry/default/ui/calendar",
      "@/registry/default/ui/form",
      "@/registry/default/ui/popover",
      "@/registry/default/ui/use-toast"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/card-demo.tsx": {
    "source": "import { BellRing, Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/registry/default/ui/button\"\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/registry/default/ui/card\"\nimport { Toggle } from \"@/registry/default/ui/toggle\"\n\nconst notifications = [\n  {\n    title: \"Your call has been confirmed.\",\n    description: \"1 hour ago\",\n  },\n  {\n    title: \"You have a new message!\",\n    description: \"1 hour ago\",\n  },\n  {\n    title: \"Your subscription is expiring soon!\",\n    description: \"2 hours ago\",\n  },\n]\n\ntype CardProps = React.ComponentProps<typeof Card>\n\nexport default function CardDemo({ className, ...props }: CardProps) {\n  return (\n    <Card className={cn(\"w-[380px]\", className)} {...props}>\n      <CardHeader>\n        <CardTitle>Notifications</CardTitle>\n        <CardDescription>You have 3 unread messages.</CardDescription>\n      </CardHeader>\n      <CardContent className=\"grid gap-4\">\n        <div className=\" flex items-center space-x-4 rounded-md border p-4\">\n          <BellRing />\n          <div className=\"flex-1 space-y-1\">\n            <p className=\"text-sm font-medium leading-none\">\n              Push Notifications\n            </p>\n            <p className=\"text-sm text-muted-foreground\">\n              Send notifications to device.\n            </p>\n          </div>\n          <Toggle />\n        </div>\n        <div>\n          {notifications.map((notification, index) => (\n            <div\n              key={index}\n              className=\"mb-4 grid grid-cols-[25px_1fr] items-start pb-4 last:mb-0 last:pb-0\"\n            >\n              <span className=\"flex h-2 w-2 translate-y-1 rounded-full bg-sky-500\" />\n              <div className=\"space-y-1\">\n                <p className=\"text-sm font-medium leading-none\">\n                  {notification.title}\n                </p>\n                <p className=\"text-sm text-muted-foreground\">\n                  {notification.description}\n                </p>\n              </div>\n            </div>\n          ))}\n        </div>\n      </CardContent>\n      <CardFooter>\n        <Button className=\"w-full\">\n          <Check className=\"mr-2 h-4 w-4\" /> Mark all as read\n        </Button>\n      </CardFooter>\n    </Card>\n  )\n}\n",
    "dependencies": [
      "lucide-react",
      "@/lib/utils",
      "@/registry/default/ui/button",
      "@/registry/default/ui/card",
      "@/registry/default/ui/toggle"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/card-with-form.tsx": {
    "source": "import * as React from \"react\"\n\nimport { Button } from \"@/registry/default/ui/button\"\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/registry/default/ui/card\"\nimport { Input } from \"@/registry/default/ui/input\"\nimport { Label } from \"@/registry/default/ui/label\"\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/registry/default/ui/select\"\n\nexport default function CardWithForm() {\n  return (\n    <Card className=\"w-[350px]\">\n      <CardHeader>\n        <CardTitle>Create project</CardTitle>\n        <CardDescription>Deploy your new project in one-click.</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <form>\n          <div className=\"grid w-full items-center gap-4\">\n            <div className=\"flex flex-col space-y-1.5\">\n              <Label htmlFor=\"name\">Name</Label>\n              <Input id=\"name\" placeholder=\"Name of your project\" />\n            </div>\n            <div className=\"flex flex-col space-y-1.5\">\n              <Label htmlFor=\"framework\">Framework</Label>\n              <Select>\n                <SelectTrigger id=\"framework\">\n                  <SelectValue placeholder=\"Select\" />\n                </SelectTrigger>\n                <SelectContent position=\"popper\">\n                  <SelectItem value=\"next\">Next.js</SelectItem>\n                  <SelectItem value=\"sveltekit\">SvelteKit</SelectItem>\n                  <SelectItem value=\"astro\">Astro</SelectItem>\n                  <SelectItem value=\"nuxt\">Nuxt.js</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n        </form>\n      </CardContent>\n      <CardFooter className=\"flex justify-between\">\n        <Button variant=\"secondary\">Cancel</Button>\n        <Button>Deploy</Button>\n      </CardFooter>\n    </Card>\n  )\n}\n",
    "dependencies": [
      "react",
      "@/registry/default/ui/button",
      "@/registry/default/ui/card",
      "@/registry/default/ui/input",
      "@/registry/default/ui/label",
      "@/registry/default/ui/select"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/checkbox-demo.tsx": {
    "source": "\"use client\"\n\nimport { Checkbox } from \"@/registry/default/ui/checkbox\"\n\nexport default function CheckboxDemo() {\n  return (\n    <div className=\"flex items-center space-x-2\">\n      <Checkbox id=\"terms\" />\n      <label\n        htmlFor=\"terms\"\n        className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n      >\n        Accept terms and conditions\n      </label>\n    </div>\n  )\n}\n",
    "dependencies": ["@/registry/default/ui/checkbox"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/checkbox-disabled.tsx": {
    "source": "import { Checkbox } from \"@/registry/default/ui/checkbox\"\n\nexport default function CheckboxDisabled() {\n  return (\n    <div className=\"flex items-center space-x-2\">\n      <Checkbox id=\"terms2\" disabled />\n      <label\n        htmlFor=\"terms2\"\n        className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n      >\n        Accept terms and conditions\n      </label>\n    </div>\n  )\n}\n",
    "dependencies": ["@/registry/default/ui/checkbox"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/checkbox-form-multiple.tsx": {
    "source": "\"use client\"\n\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport { useForm } from \"react-hook-form\"\nimport { z } from \"zod\"\n\nimport { Button } from \"@/registry/default/ui/button\"\nimport { Checkbox } from \"@/registry/default/ui/checkbox\"\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/registry/default/ui/form\"\nimport { toast } from \"@/registry/default/ui/use-toast\"\n\nconst items = [\n  {\n    id: \"recents\",\n    label: \"Recents\",\n  },\n  {\n    id: \"home\",\n    label: \"Home\",\n  },\n  {\n    id: \"applications\",\n    label: \"Applications\",\n  },\n  {\n    id: \"desktop\",\n    label: \"Desktop\",\n  },\n  {\n    id: \"downloads\",\n    label: \"Downloads\",\n  },\n  {\n    id: \"documents\",\n    label: \"Documents\",\n  },\n] as const\n\nconst FormSchema = z.object({\n  items: z.array(z.string()).refine((value) => value.some((item) => item), {\n    message: \"You have to select at least one item.\",\n  }),\n})\n\nexport default function CheckboxReactHookFormMultiple() {\n  const form = useForm<z.infer<typeof FormSchema>>({\n    resolver: zodResolver(FormSchema),\n    defaultValues: {\n      items: [\"recents\", \"home\"],\n    },\n  })\n\n  function onSubmit(data: z.infer<typeof FormSchema>) {\n    toast({\n      title: \"You submitted the following values:\",\n      description: (\n        <pre className=\"mt-2 w-[340px] rounded-md bg-slate-950 p-4\">\n          <code className=\"text-white\">{JSON.stringify(data, null, 2)}</code>\n        </pre>\n      ),\n    })\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-8\">\n        <FormField\n          control={form.control}\n          name=\"items\"\n          render={() => (\n            <FormItem>\n              <div className=\"mb-4\">\n                <FormLabel className=\"text-base\">Sidebar</FormLabel>\n                <FormDescription>\n                  Select the items you want to display in the sidebar.\n                </FormDescription>\n              </div>\n              {items.map((item) => (\n                <FormField\n                  key={item.id}\n                  control={form.control}\n                  name=\"items\"\n                  render={({ field }) => {\n                    return (\n                      <FormItem\n                        key={item.id}\n                        className=\"flex flex-row items-start space-x-3 space-y-0\"\n                      >\n                        <FormControl>\n                          <Checkbox\n                            checked={field.value?.includes(item.id)}\n                            onCheckedChange={(checked) => {\n                              return checked\n                                ? field.onChange([...field.value, item.id])\n                                : field.onChange(\n                                    field.value?.filter(\n                                      (value) => value !== item.id\n                                    )\n                                  )\n                            }}\n                          />\n                        </FormControl>\n                        <FormLabel className=\"font-normal\">\n                          {item.label}\n                        </FormLabel>\n                      </FormItem>\n                    )\n                  }}\n                />\n              ))}\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <Button type=\"submit\">Submit</Button>\n      </form>\n    </Form>\n  )\n}\n",
    "dependencies": [
      "@hookform/resolvers/zod",
      "react-hook-form",
      "zod",
      "@/registry/default/ui/button",
      "@/registry/default/ui/checkbox",
      "@/registry/default/ui/form",
      "@/registry/default/ui/use-toast"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/checkbox-form-single.tsx": {
    "source": "\"use client\"\n\nimport Link from \"next/link\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport { useForm } from \"react-hook-form\"\nimport { z } from \"zod\"\n\nimport { Button } from \"@/registry/default/ui/button\"\nimport { Checkbox } from \"@/registry/default/ui/checkbox\"\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n} from \"@/registry/default/ui/form\"\nimport { toast } from \"@/registry/default/ui/use-toast\"\n\nconst FormSchema = z.object({\n  mobile: z.boolean().default(false).optional(),\n})\n\nexport default function CheckboxReactHookFormSingle() {\n  const form = useForm<z.infer<typeof FormSchema>>({\n    resolver: zodResolver(FormSchema),\n    defaultValues: {\n      mobile: true,\n    },\n  })\n\n  function onSubmit(data: z.infer<typeof FormSchema>) {\n    toast({\n      title: \"You submitted the following values:\",\n      description: (\n        <pre className=\"mt-2 w-[340px] rounded-md bg-slate-950 p-4\">\n          <code className=\"text-white\">{JSON.stringify(data, null, 2)}</code>\n        </pre>\n      ),\n    })\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n        <FormField\n          control={form.control}\n          name=\"mobile\"\n          render={({ field }) => (\n            <FormItem className=\"flex flex-row items-start space-x-3 space-y-0 rounded-md border p-4\">\n              <FormControl>\n                <Checkbox\n                  checked={field.value}\n                  onCheckedChange={field.onChange}\n                />\n              </FormControl>\n              <div className=\"space-y-1 leading-none\">\n                <FormLabel>\n                  Use different settings for my mobile devices\n                </FormLabel>\n                <FormDescription>\n                  You can manage your mobile notifications in the{\" \"}\n                  <Link href=\"/examples/forms\">mobile settings</Link> page.\n                </FormDescription>\n              </div>\n            </FormItem>\n          )}\n        />\n        <Button type=\"submit\">Submit</Button>\n      </form>\n    </Form>\n  )\n}\n",
    "dependencies": [
      "next/link",
      "@hookform/resolvers/zod",
      "react-hook-form",
      "zod",
      "@/registry/default/ui/button",
      "@/registry/default/ui/checkbox",
      "@/registry/default/ui/form",
      "@/registry/default/ui/use-toast"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/checkbox-with-text.tsx": {
    "source": "\"use client\"\n\nimport { Checkbox } from \"@/registry/default/ui/checkbox\"\n\nexport default function CheckboxWithText() {\n  return (\n    <div className=\"items-top flex space-x-2\">\n      <Checkbox id=\"terms1\" />\n      <div className=\"grid gap-1.5 leading-none\">\n        <label\n          htmlFor=\"terms1\"\n          className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n        >\n          Accept terms and conditions\n        </label>\n        <p className=\"text-sm text-muted-foreground\">\n          You agree to our Terms of Service and Privacy Policy.\n        </p>\n      </div>\n    </div>\n  )\n}\n",
    "dependencies": ["@/registry/default/ui/checkbox"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/collapse-demo.tsx": {
    "source": "import { Collapse, CollapseGroup } from \"@/registry/default/ui/collapse\"\n\nexport default function CollapseDemo() {\n  return (\n    <CollapseGroup>\n      <Collapse value=\"item-1\" title=\"Question A\">\n        {/* TODO add the text component */}\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat.\n        </p>\n      </Collapse>\n      <Collapse value=\"item-2\" title=\"Question B\">\n        <p>\n          Duis aute irure dolor in reprehenderit in voluptate velit esse cillum\n          dolore eu fugiat nulla pariatur.\n        </p>\n      </Collapse>\n    </CollapseGroup>\n  )\n}\n",
    "dependencies": ["@/registry/default/ui/collapse"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/collapsible-demo.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\nimport { ChevronsUpDown, Plus, X } from \"lucide-react\"\n\nimport { Button } from \"@/registry/default/ui/button\"\nimport {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleTrigger,\n} from \"@/registry/default/ui/collapsible\"\n\nexport default function CollapsibleDemo() {\n  const [isOpen, setIsOpen] = React.useState(false)\n\n  return (\n    <Collapsible\n      open={isOpen}\n      onOpenChange={setIsOpen}\n      className=\"w-[350px] space-y-2\"\n    >\n      <div className=\"flex items-center justify-between space-x-4 px-4\">\n        <h4 className=\"text-sm font-semibold\">\n          @peduarte starred 3 repositories\n        </h4>\n        <CollapsibleTrigger asChild>\n          <Button variant=\"tertiary\" size=\"sm\" className=\"w-9 p-0\">\n            <ChevronsUpDown className=\"h-4 w-4\" />\n            <span className=\"sr-only\">Toggle</span>\n          </Button>\n        </CollapsibleTrigger>\n      </div>\n      <div className=\"rounded-md border px-4 py-3 font-mono text-sm\">\n        @radix-ui/primitives\n      </div>\n      <CollapsibleContent className=\"space-y-2\">\n        <div className=\"rounded-md border px-4 py-3 font-mono text-sm\">\n          @radix-ui/colors\n        </div>\n        <div className=\"rounded-md border px-4 py-3 font-mono text-sm\">\n          @stitches/react\n        </div>\n      </CollapsibleContent>\n    </Collapsible>\n  )\n}\n",
    "dependencies": [
      "react",
      "lucide-react",
      "@/registry/default/ui/button",
      "@/registry/default/ui/collapsible"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/combobox-demo.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\nimport { Check, ChevronsUpDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/registry/default/ui/button\"\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n} from \"@/registry/default/ui/command\"\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/registry/default/ui/popover\"\n\nconst frameworks = [\n  {\n    value: \"next.js\",\n    label: \"Next.js\",\n  },\n  {\n    value: \"sveltekit\",\n    label: \"SvelteKit\",\n  },\n  {\n    value: \"nuxt.js\",\n    label: \"Nuxt.js\",\n  },\n  {\n    value: \"remix\",\n    label: \"Remix\",\n  },\n  {\n    value: \"astro\",\n    label: \"Astro\",\n  },\n]\n\nexport default function ComboboxDemo() {\n  const [open, setOpen] = React.useState(false)\n  const [value, setValue] = React.useState(\"\")\n\n  return (\n    <Popover open={open} onOpenChange={setOpen}>\n      <PopoverTrigger asChild>\n        <Button\n          variant=\"secondary\"\n          role=\"combobox\"\n          aria-expanded={open}\n          className=\"w-[200px] justify-between\"\n        >\n          {value\n            ? frameworks.find((framework) => framework.value === value)?.label\n            : \"Select framework...\"}\n          <ChevronsUpDown className=\"ml-2 h-4 w-4 shrink-0 opacity-50\" />\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent className=\"w-[200px] p-0\">\n        <Command>\n          <CommandInput placeholder=\"Search framework...\" />\n          <CommandEmpty>No framework found.</CommandEmpty>\n          <CommandGroup>\n            {frameworks.map((framework) => (\n              <CommandItem\n                key={framework.value}\n                value={framework.value}\n                onSelect={(currentValue) => {\n                  setValue(currentValue === value ? \"\" : currentValue)\n                  setOpen(false)\n                }}\n              >\n                <Check\n                  className={cn(\n                    \"mr-2 h-4 w-4\",\n                    value === framework.value ? \"opacity-100\" : \"opacity-0\"\n                  )}\n                />\n                {framework.label}\n              </CommandItem>\n            ))}\n          </CommandGroup>\n        </Command>\n      </PopoverContent>\n    </Popover>\n  )\n}\n",
    "dependencies": [
      "react",
      "lucide-react",
      "@/lib/utils",
      "@/registry/default/ui/button",
      "@/registry/default/ui/command",
      "@/registry/default/ui/popover"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/combobox-dropdown-menu.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\nimport { Calendar, MoreHorizontal, Trash, User } from \"lucide-react\"\n\nimport {\n  DropdownMenuLabel,\n  DropdownMenuShortcut,\n  Menu,\n  MenuButton,\n  MenuContainer,\n  MenuItem,\n} from \"@/registry/default/ui/menu\"\n\nconst labels = [\n  \"feature\",\n  \"bug\",\n  \"enhancement\",\n  \"documentation\",\n  \"design\",\n  \"question\",\n  \"maintenance\",\n]\n\nexport default function ComboboxDropdownMenu() {\n  const [label, setLabel] = React.useState(\"feature\")\n\n  return (\n    <div className=\"flex w-full flex-col items-start justify-between rounded-md border px-4 py-3 sm:flex-row sm:items-center\">\n      <p className=\"text-sm font-medium leading-none\">\n        <span className=\"mr-2 rounded-lg bg-primary px-2 py-1 text-xs text-primary-foreground\">\n          {label}\n        </span>\n        <span className=\"text-muted-foreground\">Create a new project</span>\n      </p>\n      <MenuContainer>\n        <MenuButton>\n          <MoreHorizontal />\n        </MenuButton>\n        <Menu align=\"end\" width={200}>\n          <DropdownMenuLabel>Actions</DropdownMenuLabel>\n\n          <MenuItem>\n            <User className=\"mr-2 h-4 w-4\" />\n            Assign to...\n          </MenuItem>\n          <MenuItem>\n            <Calendar className=\"mr-2 h-4 w-4\" />\n            Set due date...\n          </MenuItem>\n          <MenuItem className=\"text-red-600\">\n            <Trash className=\"mr-2 h-4 w-4\" />\n            Delete\n            <DropdownMenuShortcut>⌘⌫</DropdownMenuShortcut>\n          </MenuItem>\n        </Menu>\n      </MenuContainer>\n    </div>\n  )\n}\n",
    "dependencies": ["react", "lucide-react", "@/registry/default/ui/menu"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/combobox-form.tsx": {
    "source": "\"use client\"\n\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport { Check, ChevronsUpDown } from \"lucide-react\"\nimport { useForm } from \"react-hook-form\"\nimport { z } from \"zod\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/registry/default/ui/button\"\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n} from \"@/registry/default/ui/command\"\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/registry/default/ui/form\"\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/registry/default/ui/popover\"\nimport { toast } from \"@/registry/default/ui/use-toast\"\n\nconst languages = [\n  { label: \"English\", value: \"en\" },\n  { label: \"French\", value: \"fr\" },\n  { label: \"German\", value: \"de\" },\n  { label: \"Spanish\", value: \"es\" },\n  { label: \"Portuguese\", value: \"pt\" },\n  { label: \"Russian\", value: \"ru\" },\n  { label: \"Japanese\", value: \"ja\" },\n  { label: \"Korean\", value: \"ko\" },\n  { label: \"Chinese\", value: \"zh\" },\n] as const\n\nconst FormSchema = z.object({\n  language: z.string({\n    required_error: \"Please select a language.\",\n  }),\n})\n\nexport default function ComboboxForm() {\n  const form = useForm<z.infer<typeof FormSchema>>({\n    resolver: zodResolver(FormSchema),\n  })\n\n  function onSubmit(data: z.infer<typeof FormSchema>) {\n    toast({\n      title: \"You submitted the following values:\",\n      description: (\n        <pre className=\"mt-2 w-[340px] rounded-md bg-slate-950 p-4\">\n          <code className=\"text-white\">{JSON.stringify(data, null, 2)}</code>\n        </pre>\n      ),\n    })\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n        <FormField\n          control={form.control}\n          name=\"language\"\n          render={({ field }) => (\n            <FormItem className=\"flex flex-col\">\n              <FormLabel>Language</FormLabel>\n              <Popover>\n                <PopoverTrigger asChild>\n                  <FormControl>\n                    <Button\n                      variant=\"secondary\"\n                      role=\"combobox\"\n                      className={cn(\n                        \"w-[200px] justify-between\",\n                        !field.value && \"text-muted-foreground\"\n                      )}\n                    >\n                      {field.value\n                        ? languages.find(\n                            (language) => language.value === field.value\n                          )?.label\n                        : \"Select language\"}\n                      <ChevronsUpDown className=\"ml-2 h-4 w-4 shrink-0 opacity-50\" />\n                    </Button>\n                  </FormControl>\n                </PopoverTrigger>\n                <PopoverContent className=\"w-[200px] p-0\">\n                  <Command>\n                    <CommandInput placeholder=\"Search language...\" />\n                    <CommandEmpty>No language found.</CommandEmpty>\n                    <CommandGroup>\n                      {languages.map((language) => (\n                        <CommandItem\n                          value={language.label}\n                          key={language.value}\n                          onSelect={() => {\n                            form.setValue(\"language\", language.value)\n                          }}\n                        >\n                          <Check\n                            className={cn(\n                              \"mr-2 h-4 w-4\",\n                              language.value === field.value\n                                ? \"opacity-100\"\n                                : \"opacity-0\"\n                            )}\n                          />\n                          {language.label}\n                        </CommandItem>\n                      ))}\n                    </CommandGroup>\n                  </Command>\n                </PopoverContent>\n              </Popover>\n              <FormDescription>\n                This is the language that will be used in the dashboard.\n              </FormDescription>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <Button type=\"submit\">Submit</Button>\n      </form>\n    </Form>\n  )\n}\n",
    "dependencies": [
      "@hookform/resolvers/zod",
      "lucide-react",
      "react-hook-form",
      "zod",
      "@/lib/utils",
      "@/registry/default/ui/button",
      "@/registry/default/ui/command",
      "@/registry/default/ui/form",
      "@/registry/default/ui/popover",
      "@/registry/default/ui/use-toast"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/combobox-popover.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\nimport {\n  ArrowUpCircle,\n  CheckCircle2,\n  Circle,\n  HelpCircle,\n  LucideIcon,\n  XCircle,\n} from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/registry/default/ui/button\"\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n} from \"@/registry/default/ui/command\"\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/registry/default/ui/popover\"\n\ntype Status = {\n  value: string\n  label: string\n  icon: LucideIcon\n}\n\nconst statuses: Status[] = [\n  {\n    value: \"backlog\",\n    label: \"Backlog\",\n    icon: HelpCircle,\n  },\n  {\n    value: \"todo\",\n    label: \"Todo\",\n    icon: Circle,\n  },\n  {\n    value: \"in progress\",\n    label: \"In Progress\",\n    icon: ArrowUpCircle,\n  },\n  {\n    value: \"done\",\n    label: \"Done\",\n    icon: CheckCircle2,\n  },\n  {\n    value: \"canceled\",\n    label: \"Canceled\",\n    icon: XCircle,\n  },\n]\n\nexport default function ComboboxPopover() {\n  const [open, setOpen] = React.useState(false)\n  const [selectedStatus, setSelectedStatus] = React.useState<Status | null>(\n    null\n  )\n\n  return (\n    <div className=\"flex items-center space-x-4\">\n      <p className=\"text-sm text-muted-foreground\">Status</p>\n      <Popover open={open} onOpenChange={setOpen}>\n        <PopoverTrigger asChild>\n          <Button\n            variant=\"secondary\"\n            size=\"sm\"\n            className=\"w-[150px] justify-start\"\n          >\n            {selectedStatus ? (\n              <>\n                <selectedStatus.icon className=\"mr-2 h-4 w-4 shrink-0\" />\n                {selectedStatus.label}\n              </>\n            ) : (\n              <>+ Set status</>\n            )}\n          </Button>\n        </PopoverTrigger>\n        <PopoverContent className=\"p-0\" side=\"right\" align=\"start\">\n          <Command>\n            <CommandInput placeholder=\"Change status...\" />\n            <CommandList>\n              <CommandEmpty>No results found.</CommandEmpty>\n              <CommandGroup>\n                {statuses.map((status) => (\n                  <CommandItem\n                    key={status.value}\n                    value={status.value}\n                    onSelect={(value) => {\n                      setSelectedStatus(\n                        statuses.find((priority) => priority.value === value) ||\n                          null\n                      )\n                      setOpen(false)\n                    }}\n                  >\n                    <status.icon\n                      className={cn(\n                        \"mr-2 h-4 w-4\",\n                        status.value === selectedStatus?.value\n                          ? \"opacity-100\"\n                          : \"opacity-40\"\n                      )}\n                    />\n                    <span>{status.label}</span>\n                  </CommandItem>\n                ))}\n              </CommandGroup>\n            </CommandList>\n          </Command>\n        </PopoverContent>\n      </Popover>\n    </div>\n  )\n}\n",
    "dependencies": [
      "react",
      "lucide-react",
      "@/lib/utils",
      "@/registry/default/ui/button",
      "@/registry/default/ui/command",
      "@/registry/default/ui/popover"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/combobox-responsive.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\n\nimport { useMediaQuery } from \"@/hooks/use-media-query\"\nimport { Button } from \"@/registry/default/ui/button\"\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n} from \"@/registry/default/ui/command\"\nimport {\n  Drawer,\n  DrawerContent,\n  DrawerTrigger,\n} from \"@/registry/default/ui/drawer\"\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/registry/default/ui/popover\"\n\ntype Status = {\n  value: string\n  label: string\n}\n\nconst statuses: Status[] = [\n  {\n    value: \"backlog\",\n    label: \"Backlog\",\n  },\n  {\n    value: \"todo\",\n    label: \"Todo\",\n  },\n  {\n    value: \"in progress\",\n    label: \"In Progress\",\n  },\n  {\n    value: \"done\",\n    label: \"Done\",\n  },\n  {\n    value: \"canceled\",\n    label: \"Canceled\",\n  },\n]\n\nexport default function ComboBoxResponsive() {\n  const [open, setOpen] = React.useState(false)\n  const isDesktop = useMediaQuery(\"(min-width: 768px)\")\n  const [selectedStatus, setSelectedStatus] = React.useState<Status | null>(\n    null\n  )\n\n  if (isDesktop) {\n    return (\n      <Popover open={open} onOpenChange={setOpen}>\n        <PopoverTrigger asChild>\n          <Button variant=\"secondary\" className=\"w-[150px] justify-start\">\n            {selectedStatus ? <>{selectedStatus.label}</> : <>+ Set status</>}\n          </Button>\n        </PopoverTrigger>\n        <PopoverContent className=\"w-[200px] p-0\" align=\"start\">\n          <StatusList setOpen={setOpen} setSelectedStatus={setSelectedStatus} />\n        </PopoverContent>\n      </Popover>\n    )\n  }\n\n  return (\n    <Drawer open={open} onOpenChange={setOpen}>\n      <DrawerTrigger asChild>\n        <Button variant=\"secondary\" className=\"w-[150px] justify-start\">\n          {selectedStatus ? <>{selectedStatus.label}</> : <>+ Set status</>}\n        </Button>\n      </DrawerTrigger>\n      <DrawerContent>\n        <div className=\"mt-4 border-t\">\n          <StatusList setOpen={setOpen} setSelectedStatus={setSelectedStatus} />\n        </div>\n      </DrawerContent>\n    </Drawer>\n  )\n}\n\nfunction StatusList({\n  setOpen,\n  setSelectedStatus,\n}: {\n  setOpen: (open: boolean) => void\n  setSelectedStatus: (status: Status | null) => void\n}) {\n  return (\n    <Command>\n      <CommandInput placeholder=\"Filter status...\" />\n      <CommandList>\n        <CommandEmpty>No results found.</CommandEmpty>\n        <CommandGroup>\n          {statuses.map((status) => (\n            <CommandItem\n              key={status.value}\n              value={status.value}\n              onSelect={(value) => {\n                setSelectedStatus(\n                  statuses.find((priority) => priority.value === value) || null\n                )\n                setOpen(false)\n              }}\n            >\n              {status.label}\n            </CommandItem>\n          ))}\n        </CommandGroup>\n      </CommandList>\n    </Command>\n  )\n}\n",
    "dependencies": [
      "react",
      "@/hooks/use-media-query",
      "@/registry/default/ui/button",
      "@/registry/default/ui/command",
      "@/registry/default/ui/drawer",
      "@/registry/default/ui/popover"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/command-demo.tsx": {
    "source": "import {\n  Calculator,\n  Calendar,\n  CreditCard,\n  Settings,\n  Smile,\n  User,\n} from \"lucide-react\"\n\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n  CommandSeparator,\n  CommandShortcut,\n} from \"@/registry/default/ui/command\"\n\nexport default function CommandDemo() {\n  return (\n    <Command className=\"rounded-lg border shadow-md\">\n      <CommandInput placeholder=\"Type a command or search...\" />\n      <CommandList>\n        <CommandEmpty>No results found.</CommandEmpty>\n        <CommandGroup heading=\"Suggestions\">\n          <CommandItem>\n            <Calendar className=\"mr-2 h-4 w-4\" />\n            <span>Calendar</span>\n          </CommandItem>\n          <CommandItem>\n            <Smile className=\"mr-2 h-4 w-4\" />\n            <span>Search Emoji</span>\n          </CommandItem>\n          <CommandItem>\n            <Calculator className=\"mr-2 h-4 w-4\" />\n            <span>Calculator</span>\n          </CommandItem>\n        </CommandGroup>\n        <CommandSeparator />\n        <CommandGroup heading=\"Settings\">\n          <CommandItem>\n            <User className=\"mr-2 h-4 w-4\" />\n            <span>Profile</span>\n            <CommandShortcut>⌘P</CommandShortcut>\n          </CommandItem>\n          <CommandItem>\n            <CreditCard className=\"mr-2 h-4 w-4\" />\n            <span>Billing</span>\n            <CommandShortcut>⌘B</CommandShortcut>\n          </CommandItem>\n          <CommandItem>\n            <Settings className=\"mr-2 h-4 w-4\" />\n            <span>Settings</span>\n            <CommandShortcut>⌘S</CommandShortcut>\n          </CommandItem>\n        </CommandGroup>\n      </CommandList>\n    </Command>\n  )\n}\n",
    "dependencies": ["lucide-react", "@/registry/default/ui/command"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/command-dialog.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\nimport {\n  Calculator,\n  Calendar,\n  CreditCard,\n  Settings,\n  Smile,\n  User,\n} from \"lucide-react\"\n\nimport {\n  CommandDialog,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n  CommandSeparator,\n  CommandShortcut,\n} from \"@/registry/default/ui/command\"\n\nexport default function CommandDialogDemo() {\n  const [open, setOpen] = React.useState(false)\n\n  React.useEffect(() => {\n    const down = (e: KeyboardEvent) => {\n      if (e.key === \"j\" && (e.metaKey || e.ctrlKey)) {\n        e.preventDefault()\n        setOpen((open) => !open)\n      }\n    }\n\n    document.addEventListener(\"keydown\", down)\n    return () => document.removeEventListener(\"keydown\", down)\n  }, [])\n\n  return (\n    <>\n      <p className=\"text-sm text-muted-foreground\">\n        Press{\" \"}\n        <kbd className=\"pointer-events-none inline-flex h-5 select-none items-center gap-1 rounded border bg-muted px-1.5 font-mono text-[10px] font-medium text-muted-foreground opacity-100\">\n          <span className=\"text-xs\">⌘</span>J\n        </kbd>\n      </p>\n      <CommandDialog open={open} onOpenChange={setOpen}>\n        <CommandInput placeholder=\"Type a command or search...\" />\n        <CommandList>\n          <CommandEmpty>No results found.</CommandEmpty>\n          <CommandGroup heading=\"Suggestions\">\n            <CommandItem>\n              <Calendar className=\"mr-2 h-4 w-4\" />\n              <span>Calendar</span>\n            </CommandItem>\n            <CommandItem>\n              <Smile className=\"mr-2 h-4 w-4\" />\n              <span>Search Emoji</span>\n            </CommandItem>\n            <CommandItem>\n              <Calculator className=\"mr-2 h-4 w-4\" />\n              <span>Calculator</span>\n            </CommandItem>\n          </CommandGroup>\n          <CommandSeparator />\n          <CommandGroup heading=\"Settings\">\n            <CommandItem>\n              <User className=\"mr-2 h-4 w-4\" />\n              <span>Profile</span>\n              <CommandShortcut>⌘P</CommandShortcut>\n            </CommandItem>\n            <CommandItem>\n              <CreditCard className=\"mr-2 h-4 w-4\" />\n              <span>Billing</span>\n              <CommandShortcut>⌘B</CommandShortcut>\n            </CommandItem>\n            <CommandItem>\n              <Settings className=\"mr-2 h-4 w-4\" />\n              <span>Settings</span>\n              <CommandShortcut>⌘S</CommandShortcut>\n            </CommandItem>\n          </CommandGroup>\n        </CommandList>\n      </CommandDialog>\n    </>\n  )\n}\n",
    "dependencies": ["react", "lucide-react", "@/registry/default/ui/command"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/context-menu-demo.tsx": {
    "source": "import {\n  ContextMenu,\n  ContextMenuCheckboxItem,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuLabel,\n  ContextMenuRadioGroup,\n  ContextMenuRadioItem,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuTrigger,\n} from \"@/registry/default/ui/context-menu\"\n\nexport default function ContextMenuDemo() {\n  return (\n    <ContextMenu>\n      <ContextMenuTrigger className=\"flex h-[150px] w-[300px] items-center justify-center rounded-md border border-dashed text-sm\">\n        Right click here\n      </ContextMenuTrigger>\n      <ContextMenuContent className=\"w-64\">\n        <ContextMenuItem inset>\n          Back\n          <ContextMenuShortcut>⌘[</ContextMenuShortcut>\n        </ContextMenuItem>\n        <ContextMenuItem inset disabled>\n          Forward\n          <ContextMenuShortcut>⌘]</ContextMenuShortcut>\n        </ContextMenuItem>\n        <ContextMenuItem inset>\n          Reload\n          <ContextMenuShortcut>⌘R</ContextMenuShortcut>\n        </ContextMenuItem>\n        <ContextMenuSub>\n          <ContextMenuSubTrigger inset>More Tools</ContextMenuSubTrigger>\n          <ContextMenuSubContent className=\"w-48\">\n            <ContextMenuItem>\n              Save Page As...\n              <ContextMenuShortcut>⇧⌘S</ContextMenuShortcut>\n            </ContextMenuItem>\n            <ContextMenuItem>Create Shortcut...</ContextMenuItem>\n            <ContextMenuItem>Name Window...</ContextMenuItem>\n            <ContextMenuSeparator />\n            <ContextMenuItem>Developer Tools</ContextMenuItem>\n          </ContextMenuSubContent>\n        </ContextMenuSub>\n        <ContextMenuSeparator />\n        <ContextMenuCheckboxItem checked>\n          Show Bookmarks Bar\n          <ContextMenuShortcut>⌘⇧B</ContextMenuShortcut>\n        </ContextMenuCheckboxItem>\n        <ContextMenuCheckboxItem>Show Full URLs</ContextMenuCheckboxItem>\n        <ContextMenuSeparator />\n        <ContextMenuRadioGroup value=\"pedro\">\n          <ContextMenuLabel inset>People</ContextMenuLabel>\n          <ContextMenuSeparator />\n          <ContextMenuRadioItem value=\"pedro\">\n            Pedro Duarte\n          </ContextMenuRadioItem>\n          <ContextMenuRadioItem value=\"colm\">Colm Tuite</ContextMenuRadioItem>\n        </ContextMenuRadioGroup>\n      </ContextMenuContent>\n    </ContextMenu>\n  )\n}\n",
    "dependencies": ["@/registry/default/ui/context-menu"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/date-picker-demo.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\nimport { format } from \"date-fns\"\nimport { Calendar as CalendarIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/registry/default/ui/button\"\nimport { Calendar } from \"@/registry/default/ui/calendar\"\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/registry/default/ui/popover\"\n\nexport default function DatePickerDemo() {\n  const [date, setDate] = React.useState<Date>()\n\n  return (\n    <Popover>\n      <PopoverTrigger asChild>\n        <Button\n          variant=\"secondary\"\n          className={cn(\n            \"w-[280px] justify-start text-left font-normal\",\n            !date && \"text-muted-foreground\"\n          )}\n        >\n          <CalendarIcon className=\"mr-2 h-4 w-4\" />\n          {date ? format(date, \"PPP\") : <span>Pick a date</span>}\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent className=\"w-auto p-0\">\n        <Calendar\n          mode=\"single\"\n          selected={date}\n          onSelect={setDate}\n          initialFocus\n        />\n      </PopoverContent>\n    </Popover>\n  )\n}\n",
    "dependencies": [
      "react",
      "date-fns",
      "lucide-react",
      "@/lib/utils",
      "@/registry/default/ui/button",
      "@/registry/default/ui/calendar",
      "@/registry/default/ui/popover"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/date-picker-form.tsx": {
    "source": "\"use client\"\n\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport { format } from \"date-fns\"\nimport { CalendarIcon } from \"lucide-react\"\nimport { useForm } from \"react-hook-form\"\nimport { z } from \"zod\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/registry/default/ui/button\"\nimport { Calendar } from \"@/registry/default/ui/calendar\"\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/registry/default/ui/form\"\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/registry/default/ui/popover\"\nimport { toast } from \"@/registry/default/ui/use-toast\"\n\nconst FormSchema = z.object({\n  dob: z.date({\n    required_error: \"A date of birth is required.\",\n  }),\n})\n\nexport default function DatePickerForm() {\n  const form = useForm<z.infer<typeof FormSchema>>({\n    resolver: zodResolver(FormSchema),\n  })\n\n  function onSubmit(data: z.infer<typeof FormSchema>) {\n    toast({\n      title: \"You submitted the following values:\",\n      description: (\n        <pre className=\"mt-2 w-[340px] rounded-md bg-slate-950 p-4\">\n          <code className=\"text-white\">{JSON.stringify(data, null, 2)}</code>\n        </pre>\n      ),\n    })\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-8\">\n        <FormField\n          control={form.control}\n          name=\"dob\"\n          render={({ field }) => (\n            <FormItem className=\"flex flex-col\">\n              <FormLabel>Date of birth</FormLabel>\n              <Popover>\n                <PopoverTrigger asChild>\n                  <FormControl>\n                    <Button\n                      variant=\"secondary\"\n                      className={cn(\n                        \"w-[240px] pl-3 text-left font-normal\",\n                        !field.value && \"text-muted-foreground\"\n                      )}\n                    >\n                      {field.value ? (\n                        format(field.value, \"PPP\")\n                      ) : (\n                        <span>Pick a date</span>\n                      )}\n                      <CalendarIcon className=\"ml-auto h-4 w-4 opacity-50\" />\n                    </Button>\n                  </FormControl>\n                </PopoverTrigger>\n                <PopoverContent className=\"w-auto p-0\" align=\"start\">\n                  <Calendar\n                    mode=\"single\"\n                    selected={field.value}\n                    onSelect={field.onChange}\n                    disabled={(date) =>\n                      date > new Date() || date < new Date(\"1900-01-01\")\n                    }\n                    initialFocus\n                  />\n                </PopoverContent>\n              </Popover>\n              <FormDescription>\n                Your date of birth is used to calculate your age.\n              </FormDescription>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <Button type=\"submit\">Submit</Button>\n      </form>\n    </Form>\n  )\n}\n",
    "dependencies": [
      "@hookform/resolvers/zod",
      "date-fns",
      "lucide-react",
      "react-hook-form",
      "zod",
      "@/lib/utils",
      "@/registry/default/ui/button",
      "@/registry/default/ui/calendar",
      "@/registry/default/ui/form",
      "@/registry/default/ui/popover",
      "@/registry/default/ui/use-toast"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/date-picker-with-presets.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\nimport { addDays, format } from \"date-fns\"\nimport { Calendar as CalendarIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/registry/default/ui/button\"\nimport { Calendar } from \"@/registry/default/ui/calendar\"\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/registry/default/ui/popover\"\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/registry/default/ui/select\"\n\nexport default function DatePickerWithPresets() {\n  const [date, setDate] = React.useState<Date>()\n\n  return (\n    <Popover>\n      <PopoverTrigger asChild>\n        <Button\n          variant=\"secondary\"\n          className={cn(\n            \"w-[280px] justify-start text-left font-normal\",\n            !date && \"text-muted-foreground\"\n          )}\n        >\n          <CalendarIcon className=\"mr-2 h-4 w-4\" />\n          {date ? format(date, \"PPP\") : <span>Pick a date</span>}\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent className=\"flex w-auto flex-col space-y-2 p-2\">\n        <Select\n          onValueChange={(value) =>\n            setDate(addDays(new Date(), parseInt(value)))\n          }\n        >\n          <SelectTrigger>\n            <SelectValue placeholder=\"Select\" />\n          </SelectTrigger>\n          <SelectContent position=\"popper\">\n            <SelectItem value=\"0\">Today</SelectItem>\n            <SelectItem value=\"1\">Tomorrow</SelectItem>\n            <SelectItem value=\"3\">In 3 days</SelectItem>\n            <SelectItem value=\"7\">In a week</SelectItem>\n          </SelectContent>\n        </Select>\n        <div className=\"rounded-md border\">\n          <Calendar mode=\"single\" selected={date} onSelect={setDate} />\n        </div>\n      </PopoverContent>\n    </Popover>\n  )\n}\n",
    "dependencies": [
      "react",
      "date-fns",
      "lucide-react",
      "@/lib/utils",
      "@/registry/default/ui/button",
      "@/registry/default/ui/calendar",
      "@/registry/default/ui/popover",
      "@/registry/default/ui/select"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/date-picker-with-range.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\nimport { addDays, format } from \"date-fns\"\nimport { Calendar as CalendarIcon } from \"lucide-react\"\nimport { DateRange } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/registry/default/ui/button\"\nimport { Calendar } from \"@/registry/default/ui/calendar\"\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/registry/default/ui/popover\"\n\nexport default function DatePickerWithRange({\n  className,\n}: React.HTMLAttributes<HTMLDivElement>) {\n  const [date, setDate] = React.useState<DateRange | undefined>({\n    from: new Date(2022, 0, 20),\n    to: addDays(new Date(2022, 0, 20), 20),\n  })\n\n  return (\n    <div className={cn(\"grid gap-2\", className)}>\n      <Popover>\n        <PopoverTrigger asChild>\n          <Button\n            id=\"date\"\n            variant=\"secondary\"\n            className={cn(\n              \"w-[300px] justify-start text-left font-normal\",\n              !date && \"text-muted-foreground\"\n            )}\n          >\n            <CalendarIcon className=\"mr-2 h-4 w-4\" />\n            {date?.from ? (\n              date.to ? (\n                <>\n                  {format(date.from, \"LLL dd, y\")} -{\" \"}\n                  {format(date.to, \"LLL dd, y\")}\n                </>\n              ) : (\n                format(date.from, \"LLL dd, y\")\n              )\n            ) : (\n              <span>Pick a date</span>\n            )}\n          </Button>\n        </PopoverTrigger>\n        <PopoverContent className=\"w-auto p-0\" align=\"start\">\n          <Calendar\n            initialFocus\n            mode=\"range\"\n            defaultMonth={date?.from}\n            selected={date}\n            onSelect={setDate}\n            numberOfMonths={2}\n          />\n        </PopoverContent>\n      </Popover>\n    </div>\n  )\n}\n",
    "dependencies": [
      "react",
      "date-fns",
      "lucide-react",
      "react-day-picker",
      "@/lib/utils",
      "@/registry/default/ui/button",
      "@/registry/default/ui/calendar",
      "@/registry/default/ui/popover"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/dialog-close-button.tsx": {
    "source": "import { Copy } from \"lucide-react\"\n\nimport { Button } from \"@/registry/default/ui/button\"\nimport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/registry/default/ui/dialog\"\nimport { Input } from \"@/registry/default/ui/input\"\nimport { Label } from \"@/registry/default/ui/label\"\n\nexport default function DialogCloseButton() {\n  return (\n    <Dialog>\n      <DialogTrigger asChild>\n        <Button variant=\"secondary\">Share</Button>\n      </DialogTrigger>\n      <DialogContent className=\"sm:max-w-md\">\n        <DialogHeader>\n          <DialogTitle>Share link</DialogTitle>\n          <DialogDescription>\n            Anyone who has this link will be able to view this.\n          </DialogDescription>\n        </DialogHeader>\n        <div className=\"flex items-center space-x-2\">\n          <div className=\"grid flex-1 gap-2\">\n            <Label htmlFor=\"link\" className=\"sr-only\">\n              Link\n            </Label>\n            <Input\n              id=\"link\"\n              defaultValue=\"https://ui.shadcn.com/docs/installation\"\n              readOnly\n            />\n          </div>\n          <Button type=\"submit\" size=\"sm\" className=\"px-3\">\n            <span className=\"sr-only\">Copy</span>\n            <Copy className=\"h-4 w-4\" />\n          </Button>\n        </div>\n        <DialogFooter className=\"sm:justify-start\">\n          <DialogClose asChild>\n            <Button type=\"button\" variant=\"secondary\">\n              Close\n            </Button>\n          </DialogClose>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  )\n}\n",
    "dependencies": [
      "lucide-react",
      "@/registry/default/ui/button",
      "@/registry/default/ui/dialog",
      "@/registry/default/ui/input",
      "@/registry/default/ui/label"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/dialog-demo.tsx": {
    "source": "import { Button } from \"@/registry/default/ui/button\"\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/registry/default/ui/dialog\"\nimport { Input } from \"@/registry/default/ui/input\"\nimport { Label } from \"@/registry/default/ui/label\"\n\nexport default function DialogDemo() {\n  return (\n    <Dialog>\n      <DialogTrigger asChild>\n        <Button variant=\"secondary\">Edit Profile</Button>\n      </DialogTrigger>\n      <DialogContent className=\"sm:max-w-[425px]\">\n        <DialogHeader>\n          <DialogTitle>Edit profile</DialogTitle>\n          <DialogDescription>\n            Make changes to your profile here. Click save when you're done.\n          </DialogDescription>\n        </DialogHeader>\n        <div className=\"grid gap-4 py-4\">\n          <div className=\"grid grid-cols-4 items-center gap-4\">\n            <Label htmlFor=\"name\" className=\"text-right\">\n              Name\n            </Label>\n            <Input\n              id=\"name\"\n              defaultValue=\"Pedro Duarte\"\n              className=\"col-span-3\"\n            />\n          </div>\n          <div className=\"grid grid-cols-4 items-center gap-4\">\n            <Label htmlFor=\"username\" className=\"text-right\">\n              Username\n            </Label>\n            <Input\n              id=\"username\"\n              defaultValue=\"@peduarte\"\n              className=\"col-span-3\"\n            />\n          </div>\n        </div>\n        <DialogFooter>\n          <Button type=\"submit\">Save changes</Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/button",
      "@/registry/default/ui/dialog",
      "@/registry/default/ui/input",
      "@/registry/default/ui/label"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/drawer-demo.tsx": {
    "source": "import * as React from \"react\"\nimport { Minus, Plus } from \"lucide-react\"\nimport { Bar, BarChart, ResponsiveContainer } from \"recharts\"\n\nimport { Button } from \"@/registry/default/ui/button\"\nimport {\n  Drawer,\n  DrawerClose,\n  DrawerContent,\n  DrawerDescription,\n  DrawerFooter,\n  DrawerHeader,\n  DrawerTitle,\n  DrawerTrigger,\n} from \"@/registry/default/ui/drawer\"\n\nconst data = [\n  {\n    goal: 400,\n  },\n  {\n    goal: 300,\n  },\n  {\n    goal: 200,\n  },\n  {\n    goal: 300,\n  },\n  {\n    goal: 200,\n  },\n  {\n    goal: 278,\n  },\n  {\n    goal: 189,\n  },\n  {\n    goal: 239,\n  },\n  {\n    goal: 300,\n  },\n  {\n    goal: 200,\n  },\n  {\n    goal: 278,\n  },\n  {\n    goal: 189,\n  },\n  {\n    goal: 349,\n  },\n]\n\nexport default function DrawerDemo() {\n  const [goal, setGoal] = React.useState(350)\n\n  function onClick(adjustment: number) {\n    setGoal(Math.max(200, Math.min(400, goal + adjustment)))\n  }\n\n  return (\n    <Drawer>\n      <DrawerTrigger asChild>\n        <Button variant=\"secondary\">Open Drawer</Button>\n      </DrawerTrigger>\n      <DrawerContent>\n        <div className=\"mx-auto w-full max-w-sm\">\n          <DrawerHeader>\n            <DrawerTitle>Move Goal</DrawerTitle>\n            <DrawerDescription>Set your daily activity goal.</DrawerDescription>\n          </DrawerHeader>\n          <div className=\"p-4 pb-0\">\n            <div className=\"flex items-center justify-center space-x-2\">\n              <Button\n                variant=\"secondary\"\n                // TODO change this to icon button\n                size=\"sm\"\n                className=\"h-8 w-8 shrink-0 rounded-full\"\n                onClick={() => onClick(-10)}\n                disabled={goal <= 200}\n              >\n                <Minus className=\"h-4 w-4\" />\n                <span className=\"sr-only\">Decrease</span>\n              </Button>\n              <div className=\"flex-1 text-center\">\n                <div className=\"text-7xl font-bold tracking-tighter\">\n                  {goal}\n                </div>\n                <div className=\"text-[0.70rem] uppercase text-muted-foreground\">\n                  Calories/day\n                </div>\n              </div>\n              <Button\n                variant=\"secondary\"\n                // TODO change this to icon button\n                size=\"sm\"\n                className=\"h-8 w-8 shrink-0 rounded-full\"\n                onClick={() => onClick(10)}\n                disabled={goal >= 400}\n              >\n                <Plus className=\"h-4 w-4\" />\n                <span className=\"sr-only\">Increase</span>\n              </Button>\n            </div>\n            <div className=\"mt-3 h-[120px]\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <BarChart data={data}>\n                  <Bar\n                    dataKey=\"goal\"\n                    style={\n                      {\n                        fill: \"hsl(var(--foreground))\",\n                        opacity: 0.9,\n                      } as React.CSSProperties\n                    }\n                  />\n                </BarChart>\n              </ResponsiveContainer>\n            </div>\n          </div>\n          <DrawerFooter>\n            <Button>Submit</Button>\n            <DrawerClose asChild>\n              <Button variant=\"secondary\">Cancel</Button>\n            </DrawerClose>\n          </DrawerFooter>\n        </div>\n      </DrawerContent>\n    </Drawer>\n  )\n}\n",
    "dependencies": [
      "react",
      "lucide-react",
      "recharts",
      "@/registry/default/ui/button",
      "@/registry/default/ui/drawer"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/drawer-dialog.tsx": {
    "source": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { useMediaQuery } from \"@/hooks/use-media-query\"\nimport { Button } from \"@/registry/default/ui/button\"\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/registry/default/ui/dialog\"\nimport {\n  Drawer,\n  DrawerClose,\n  DrawerContent,\n  DrawerDescription,\n  DrawerFooter,\n  DrawerHeader,\n  DrawerTitle,\n  DrawerTrigger,\n} from \"@/registry/default/ui/drawer\"\nimport { Input } from \"@/registry/default/ui/input\"\nimport { Label } from \"@/registry/default/ui/label\"\n\nexport default function DrawerDialogDemo() {\n  const [open, setOpen] = React.useState(false)\n  const isDesktop = useMediaQuery(\"(min-width: 768px)\")\n\n  if (isDesktop) {\n    return (\n      <Dialog open={open} onOpenChange={setOpen}>\n        <DialogTrigger asChild>\n          <Button variant=\"secondary\">Edit Profile</Button>\n        </DialogTrigger>\n        <DialogContent className=\"sm:max-w-[425px]\">\n          <DialogHeader>\n            <DialogTitle>Edit profile</DialogTitle>\n            <DialogDescription>\n              Make changes to your profile here. Click save when you're done.\n            </DialogDescription>\n          </DialogHeader>\n          <ProfileForm />\n        </DialogContent>\n      </Dialog>\n    )\n  }\n\n  return (\n    <Drawer open={open} onOpenChange={setOpen}>\n      <DrawerTrigger asChild>\n        <Button variant=\"secondary\">Edit Profile</Button>\n      </DrawerTrigger>\n      <DrawerContent>\n        <DrawerHeader className=\"text-left\">\n          <DrawerTitle>Edit profile</DrawerTitle>\n          <DrawerDescription>\n            Make changes to your profile here. Click save when you're done.\n          </DrawerDescription>\n        </DrawerHeader>\n        <ProfileForm className=\"px-4\" />\n        <DrawerFooter className=\"pt-2\">\n          <DrawerClose asChild>\n            <Button variant=\"secondary\">Cancel</Button>\n          </DrawerClose>\n        </DrawerFooter>\n      </DrawerContent>\n    </Drawer>\n  )\n}\n\nfunction ProfileForm({ className }: React.ComponentProps<\"form\">) {\n  return (\n    <form className={cn(\"grid items-start gap-4\", className)}>\n      <div className=\"grid gap-2\">\n        <Label htmlFor=\"email\">Email</Label>\n        <Input type=\"email\" id=\"email\" defaultValue=\"shadcn@example.com\" />\n      </div>\n      <div className=\"grid gap-2\">\n        <Label htmlFor=\"username\">Username</Label>\n        <Input id=\"username\" defaultValue=\"@shadcn\" />\n      </div>\n      <Button type=\"submit\">Save changes</Button>\n    </form>\n  )\n}\n",
    "dependencies": [
      "react",
      "@/lib/utils",
      "@/hooks/use-media-query",
      "@/registry/default/ui/button",
      "@/registry/default/ui/dialog",
      "@/registry/default/ui/drawer",
      "@/registry/default/ui/input",
      "@/registry/default/ui/label"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/gauge-arc-priority.tsx": {
    "source": "import { Gauge } from \"@/registry/default/ui/gauge\"\n\nexport default function GaugeArcPriority() {\n  return <Gauge size=\"medium\" value={50} />\n}\n",
    "dependencies": ["@/registry/default/ui/gauge"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/gauge-color-scale.tsx": {
    "source": "import { Gauge } from \"@/registry/default/ui/gauge\"\nimport { Stack } from \"@/registry/default/ui/stack\"\n\nexport default function GaugeColorScale() {\n  return (\n    <Stack direction=\"row\" gap={8}>\n      <Gauge size=\"small\" value={14} />\n      <Gauge size=\"small\" value={34} />\n      <Gauge size=\"small\" value={68} />\n    </Stack>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/gauge",
      "@/registry/default/ui/stack"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/gauge-custom-color-range.tsx": {
    "source": "import { Gauge } from \"@/registry/default/ui/gauge\"\nimport { Stack } from \"@/registry/default/ui/stack\"\n\nexport default function GaugeCustomColorRange() {\n  return (\n    <Stack direction=\"row\" gap={2}>\n      <Gauge\n        colors={{\n          \"0\": \"var(--ds-pink-100)\",\n          \"10\": \"var(--ds-pink-200)\",\n          \"20\": \"var(--ds-pink-300)\",\n          \"30\": \"var(--ds-pink-400)\",\n          \"50\": \"var(--ds-pink-500)\",\n          \"60\": \"var(--ds-pink-600)\",\n          \"70\": \"var(--ds-pink-700)\",\n          \"80\": \"var(--ds-pink-800)\",\n          \"90\": \"var(--ds-pink-900)\",\n          \"100\": \"var(--ds-pink-1000)\",\n        }}\n        size=\"small\"\n        value={0}\n      />\n      <Gauge\n        colors={{\n          \"0\": \"var(--ds-pink-100)\",\n          \"10\": \"var(--ds-pink-200)\",\n          \"20\": \"var(--ds-pink-300)\",\n          \"30\": \"var(--ds-pink-400)\",\n          \"50\": \"var(--ds-pink-500)\",\n          \"60\": \"var(--ds-pink-600)\",\n          \"70\": \"var(--ds-pink-700)\",\n          \"80\": \"var(--ds-pink-800)\",\n          \"90\": \"var(--ds-pink-900)\",\n          \"100\": \"var(--ds-pink-1000)\",\n        }}\n        size=\"small\"\n        value={10}\n      />\n      <Gauge\n        colors={{\n          \"0\": \"var(--ds-pink-100)\",\n          \"10\": \"var(--ds-pink-200)\",\n          \"20\": \"var(--ds-pink-300)\",\n          \"30\": \"var(--ds-pink-400)\",\n          \"50\": \"var(--ds-pink-500)\",\n          \"60\": \"var(--ds-pink-600)\",\n          \"70\": \"var(--ds-pink-700)\",\n          \"80\": \"var(--ds-pink-800)\",\n          \"90\": \"var(--ds-pink-900)\",\n          \"100\": \"var(--ds-pink-1000)\",\n        }}\n        size=\"small\"\n        value={20}\n      />\n      <Gauge\n        colors={{\n          \"0\": \"var(--ds-pink-100)\",\n          \"10\": \"var(--ds-pink-200)\",\n          \"20\": \"var(--ds-pink-300)\",\n          \"30\": \"var(--ds-pink-400)\",\n          \"50\": \"var(--ds-pink-500)\",\n          \"60\": \"var(--ds-pink-600)\",\n          \"70\": \"var(--ds-pink-700)\",\n          \"80\": \"var(--ds-pink-800)\",\n          \"90\": \"var(--ds-pink-900)\",\n          \"100\": \"var(--ds-pink-1000)\",\n        }}\n        size=\"small\"\n        value={30}\n      />\n      <Gauge\n        colors={{\n          \"0\": \"var(--ds-pink-100)\",\n          \"10\": \"var(--ds-pink-200)\",\n          \"20\": \"var(--ds-pink-300)\",\n          \"30\": \"var(--ds-pink-400)\",\n          \"50\": \"var(--ds-pink-500)\",\n          \"60\": \"var(--ds-pink-600)\",\n          \"70\": \"var(--ds-pink-700)\",\n          \"80\": \"var(--ds-pink-800)\",\n          \"90\": \"var(--ds-pink-900)\",\n          \"100\": \"var(--ds-pink-1000)\",\n        }}\n        size=\"small\"\n        value={40}\n      />\n      <Gauge\n        colors={{\n          \"0\": \"var(--ds-pink-100)\",\n          \"10\": \"var(--ds-pink-200)\",\n          \"20\": \"var(--ds-pink-300)\",\n          \"30\": \"var(--ds-pink-400)\",\n          \"50\": \"var(--ds-pink-500)\",\n          \"60\": \"var(--ds-pink-600)\",\n          \"70\": \"var(--ds-pink-700)\",\n          \"80\": \"var(--ds-pink-800)\",\n          \"90\": \"var(--ds-pink-900)\",\n          \"100\": \"var(--ds-pink-1000)\",\n        }}\n        size=\"small\"\n        value={50}\n      />\n      <Gauge\n        colors={{\n          \"0\": \"var(--ds-pink-100)\",\n          \"10\": \"var(--ds-pink-200)\",\n          \"20\": \"var(--ds-pink-300)\",\n          \"30\": \"var(--ds-pink-400)\",\n          \"50\": \"var(--ds-pink-500)\",\n          \"60\": \"var(--ds-pink-600)\",\n          \"70\": \"var(--ds-pink-700)\",\n          \"80\": \"var(--ds-pink-800)\",\n          \"90\": \"var(--ds-pink-900)\",\n          \"100\": \"var(--ds-pink-1000)\",\n        }}\n        size=\"small\"\n        value={60}\n      />\n      <Gauge\n        colors={{\n          \"0\": \"var(--ds-pink-100)\",\n          \"10\": \"var(--ds-pink-200)\",\n          \"20\": \"var(--ds-pink-300)\",\n          \"30\": \"var(--ds-pink-400)\",\n          \"50\": \"var(--ds-pink-500)\",\n          \"60\": \"var(--ds-pink-600)\",\n          \"70\": \"var(--ds-pink-700)\",\n          \"80\": \"var(--ds-pink-800)\",\n          \"90\": \"var(--ds-pink-900)\",\n          \"100\": \"var(--ds-pink-1000)\",\n        }}\n        size=\"small\"\n        value={70}\n      />\n      <Gauge\n        colors={{\n          \"0\": \"var(--ds-pink-100)\",\n          \"10\": \"var(--ds-pink-200)\",\n          \"20\": \"var(--ds-pink-300)\",\n          \"30\": \"var(--ds-pink-400)\",\n          \"50\": \"var(--ds-pink-500)\",\n          \"60\": \"var(--ds-pink-600)\",\n          \"70\": \"var(--ds-pink-700)\",\n          \"80\": \"var(--ds-pink-800)\",\n          \"90\": \"var(--ds-pink-900)\",\n          \"100\": \"var(--ds-pink-1000)\",\n        }}\n        size=\"small\"\n        value={80}\n      />\n      <Gauge\n        colors={{\n          \"0\": \"var(--ds-pink-100)\",\n          \"10\": \"var(--ds-pink-200)\",\n          \"20\": \"var(--ds-pink-300)\",\n          \"30\": \"var(--ds-pink-400)\",\n          \"50\": \"var(--ds-pink-500)\",\n          \"60\": \"var(--ds-pink-600)\",\n          \"70\": \"var(--ds-pink-700)\",\n          \"80\": \"var(--ds-pink-800)\",\n          \"90\": \"var(--ds-pink-900)\",\n          \"100\": \"var(--ds-pink-1000)\",\n        }}\n        size=\"small\"\n        value={90}\n      />\n      <Gauge\n        colors={{\n          \"0\": \"var(--ds-pink-100)\",\n          \"10\": \"var(--ds-pink-200)\",\n          \"20\": \"var(--ds-pink-300)\",\n          \"30\": \"var(--ds-pink-400)\",\n          \"50\": \"var(--ds-pink-500)\",\n          \"60\": \"var(--ds-pink-600)\",\n          \"70\": \"var(--ds-pink-700)\",\n          \"80\": \"var(--ds-pink-800)\",\n          \"90\": \"var(--ds-pink-900)\",\n          \"100\": \"var(--ds-pink-1000)\",\n        }}\n        size=\"small\"\n        value={100}\n      />\n    </Stack>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/gauge",
      "@/registry/default/ui/stack"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/gauge-custom-secondary-color.tsx": {
    "source": "import { Gauge } from \"@/registry/default/ui/gauge\"\n\nexport default function GaugeCustomSecondaryColor() {\n  return (\n    <div className=\"flex justify-start\">\n      <Gauge\n        colors={{\n          primary: \"var(--ds-blue-700)\",\n          secondary: \"var(--ds-blue-300)\",\n        }}\n        size=\"medium\"\n        value={50}\n      />\n    </div>\n  )\n}\n",
    "dependencies": ["@/registry/default/ui/gauge"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/gauge-demo.tsx": {
    "source": "import { Gauge } from \"@/registry/default/ui/gauge\"\nimport { Stack } from \"@/registry/default/ui/stack\"\n\nexport default function GaugeDemo() {\n  return (\n    <Stack direction=\"row\" gap={8}>\n      <Gauge size=\"tiny\" value={50} />\n      <Gauge size=\"small\" value={50} />\n      <Gauge size=\"medium\" value={50} />\n      <Gauge size=\"large\" value={50} />\n    </Stack>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/gauge",
      "@/registry/default/ui/stack"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/gauge-label.tsx": {
    "source": "import { Gauge } from \"@/registry/default/ui/gauge\"\nimport { Stack } from \"@/registry/default/ui/stack\"\n\nexport default function GaugeLabel() {\n  return (\n    <Stack direction=\"row\" gap={8}>\n      <Gauge showValue size=\"tiny\" value={80} />\n      <Gauge showValue size=\"small\" value={80} />\n      <Gauge showValue size=\"small\" value={100} />\n      <Gauge showValue size=\"medium\" value={80} />\n      <Gauge showValue size=\"medium\" value={100} />\n      <Gauge showValue size=\"large\" value={80} />\n      <Gauge showValue size=\"large\" value={100} />\n    </Stack>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/gauge",
      "@/registry/default/ui/stack"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/hover-card-demo.tsx": {
    "source": "import { CalendarDays } from \"lucide-react\"\n\nimport {\n  Avatar,\n  AvatarFallback,\n  AvatarImage,\n} from \"@/registry/default/ui/avatar\"\nimport { Button } from \"@/registry/default/ui/button\"\nimport {\n  HoverCard,\n  HoverCardContent,\n  HoverCardTrigger,\n} from \"@/registry/default/ui/hover-card\"\n\nexport default function HoverCardDemo() {\n  return (\n    <HoverCard>\n      <HoverCardTrigger asChild>\n        <Button variant=\"secondary\">@nextjs</Button>\n      </HoverCardTrigger>\n      <HoverCardContent className=\"w-80\">\n        <div className=\"flex justify-between space-x-4\">\n          <Avatar>\n            <AvatarImage src=\"https://github.com/vercel.png\" />\n            <AvatarFallback>VC</AvatarFallback>\n          </Avatar>\n          <div className=\"space-y-1\">\n            <h4 className=\"text-sm font-semibold\">@nextjs</h4>\n            <p className=\"text-sm\">\n              The React Framework – created and maintained by @vercel.\n            </p>\n            <div className=\"flex items-center pt-2\">\n              <CalendarDays className=\"mr-2 h-4 w-4 opacity-70\" />{\" \"}\n              <span className=\"text-xs text-muted-foreground\">\n                Joined December 2021\n              </span>\n            </div>\n          </div>\n        </div>\n      </HoverCardContent>\n    </HoverCard>\n  )\n}\n",
    "dependencies": [
      "lucide-react",
      "@/registry/default/ui/avatar",
      "@/registry/default/ui/button",
      "@/registry/default/ui/hover-card"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/input-demo.tsx": {
    "source": "import type { JSX } from \"react\"\n\nimport { Input } from \"@/registry/default/ui/input\"\nimport { Stack } from \"@/registry/default/ui/stack\"\n\nexport default function Component(): JSX.Element {\n  return (\n    <Stack\n      align=\"start\"\n      direction={{ sm: \"column\", md: \"row\" }}\n      gap={4}\n      justify=\"space-between\"\n    >\n      <Input aria-labelledby=\"Demo input\" placeholder=\"Small\" size=\"small\" />\n      <Input aria-labelledby=\"Demo input\" placeholder=\"Default\" size=\"medium\" />\n      <Input aria-labelledby=\"Demo input\" placeholder=\"Large\" size=\"large\" />\n    </Stack>\n  )\n}\n",
    "dependencies": [
      "react",
      "@/registry/default/ui/input",
      "@/registry/default/ui/stack"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/input-disabled.tsx": {
    "source": "import type { JSX } from \"react\"\n\nimport { Input } from \"@/registry/default/ui/input\"\nimport { Stack } from \"@/registry/default/ui/stack\"\n\nexport default function Component(): JSX.Element {\n  return (\n    <Stack align=\"start\" direction={{ sm: \"column\", md: \"row\" }} gap={4}>\n      <Input\n        aria-labelledby=\"Demo\"\n        disabled\n        placeholder=\"Disabled with placeholder\"\n      />\n      <Input aria-labelledby=\"Demo\" disabled value=\"Disabled with value\" />\n    </Stack>\n  )\n}\n",
    "dependencies": [
      "react",
      "@/registry/default/ui/input",
      "@/registry/default/ui/stack"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/input-form.tsx": {
    "source": "\"use client\"\n\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport { useForm } from \"react-hook-form\"\nimport { z } from \"zod\"\n\nimport { Button } from \"@/registry/default/ui/button\"\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/registry/default/ui/form\"\nimport { Input } from \"@/registry/default/ui/input\"\nimport { toast } from \"@/registry/default/ui/use-toast\"\n\nconst FormSchema = z.object({\n  username: z.string().min(2, {\n    message: \"Username must be at least 2 characters.\",\n  }),\n})\n\nexport default function InputForm() {\n  const form = useForm<z.infer<typeof FormSchema>>({\n    resolver: zodResolver(FormSchema),\n    defaultValues: {\n      username: \"\",\n    },\n  })\n\n  function onSubmit(data: z.infer<typeof FormSchema>) {\n    toast({\n      title: \"You submitted the following values:\",\n      description: (\n        <pre className=\"mt-2 w-[340px] rounded-md bg-slate-950 p-4\">\n          <code className=\"text-white\">{JSON.stringify(data, null, 2)}</code>\n        </pre>\n      ),\n    })\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"w-2/3 space-y-6\">\n        <FormField\n          control={form.control}\n          name=\"username\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Username</FormLabel>\n              <FormControl>\n                <Input placeholder=\"shadcn\" {...field} />\n              </FormControl>\n              <FormDescription>\n                This is your public display name.\n              </FormDescription>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <Button type=\"submit\">Submit</Button>\n      </form>\n    </Form>\n  )\n}\n",
    "dependencies": [
      "@hookform/resolvers/zod",
      "react-hook-form",
      "zod",
      "@/registry/default/ui/button",
      "@/registry/default/ui/form",
      "@/registry/default/ui/input",
      "@/registry/default/ui/use-toast"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/input-prefix-suffix.tsx": {
    "source": "import { ArrowUpCircle } from \"lucide-react\"\n\nimport { Input } from \"@/registry/default/ui/input\"\nimport { Stack } from \"@/registry/default/ui/stack\"\n\nexport default function Component(): JSX.Element {\n  return (\n    <Stack align=\"start\" gap={6}>\n      <Input\n        aria-labelledby=\"Demo\"\n        placeholder=\"Default\"\n        prefix={<ArrowUpCircle />}\n      />\n\n      <Input\n        aria-labelledby=\"Demo\"\n        placeholder=\"Default\"\n        suffix={<ArrowUpCircle />}\n      />\n\n      <Input\n        aria-labelledby=\"Demo\"\n        placeholder=\"Default\"\n        prefix=\"https://\"\n        suffix=\".com\"\n      />\n\n      <Input\n        aria-labelledby=\"Demo\"\n        placeholder=\"Default\"\n        prefix={<ArrowUpCircle />}\n        prefixStyling={false}\n        suffix={<ArrowUpCircle />}\n        suffixStyling={false}\n      />\n\n      <Input\n        aria-labelledby=\"Demo\"\n        placeholder=\"Default\"\n        prefix=\"vercel/\"\n        suffix={<ArrowUpCircle />}\n        suffixStyling={false}\n      />\n    </Stack>\n  )\n}\n",
    "dependencies": [
      "lucide-react",
      "@/registry/default/ui/input",
      "@/registry/default/ui/stack"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/input-with-button.tsx": {
    "source": "import { Button } from \"@/registry/default/ui/button\"\nimport { Input } from \"@/registry/default/ui/input\"\n\nexport default function InputWithButton() {\n  return (\n    <div className=\"flex w-full max-w-sm items-center space-x-2\">\n      <Input type=\"email\" placeholder=\"Email\" />\n      <Button type=\"submit\">Subscribe</Button>\n    </div>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/button",
      "@/registry/default/ui/input"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/input-with-label.tsx": {
    "source": "import type { JSX } from \"react\"\n\nimport { Input } from \"@/registry/default/ui/input\"\nimport { Stack } from \"@/registry/default/ui/stack\"\n\nexport default function Component(): JSX.Element {\n  return (\n    <Stack align=\"flex-start\">\n      <Input aria-labelledby=\"Demo input\" label=\"Label\" placeholder=\"Label\" />\n    </Stack>\n  )\n}\n",
    "dependencies": [
      "react",
      "@/registry/default/ui/input",
      "@/registry/default/ui/stack"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/input-with-text.tsx": {
    "source": "import { Input } from \"@/registry/default/ui/input\"\nimport { Label } from \"@/registry/default/ui/label\"\n\nexport default function InputWithText() {\n  return (\n    <div className=\"grid w-full max-w-sm items-center gap-1.5\">\n      <Label htmlFor=\"email-2\">Email</Label>\n      <Input type=\"email\" id=\"email-2\" placeholder=\"Email\" />\n      <p className=\"text-sm text-muted-foreground\">Enter your email address.</p>\n    </div>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/input",
      "@/registry/default/ui/label"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/kbd-combination.tsx": {
    "source": "import { Kbd } from \"@/registry/default/ui/kbd\"\n\nexport default function KbdCombination() {\n  return <Kbd meta shift />\n}\n",
    "dependencies": ["@/registry/default/ui/kbd"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/kbd-demo.tsx": {
    "source": "import { Kbd } from \"@/registry/default/ui/kbd\"\n\nexport default function KbdDemo() {\n  return (\n    <>\n      <Kbd meta />\n      <Kbd shift />\n      <Kbd alt />\n      <Kbd ctrl />\n    </>\n  )\n}\n",
    "dependencies": ["@/registry/default/ui/kbd"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/kbd-small.tsx": {
    "source": "import { Kbd } from \"@/registry/default/ui/kbd\"\n\nexport default function KbdSmallDemo() {\n  return <Kbd small>/</Kbd>\n}\n",
    "dependencies": ["@/registry/default/ui/kbd"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/label-demo.tsx": {
    "source": "import { Checkbox } from \"@/registry/default/ui/checkbox\"\nimport { Label } from \"@/registry/default/ui/label\"\n\nexport default function LabelDemo() {\n  return (\n    <div>\n      <div className=\"flex items-center space-x-2\">\n        <Checkbox id=\"terms\" />\n        <Label htmlFor=\"terms\">Accept terms and conditions</Label>\n      </div>\n    </div>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/checkbox",
      "@/registry/default/ui/label"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/loading-dots-demo.tsx": {
    "source": "import { LoadingDots } from \"@/registry/default/ui/loading-dots\"\nimport { Stack } from \"@/registry/default/ui/stack\"\n\nexport default function LoadingDotsDemo() {\n  return (\n    <Stack align=\"start\" gap={6} justify=\"space-between\">\n      <LoadingDots />\n      <LoadingDots size={4} />\n    </Stack>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/loading-dots",
      "@/registry/default/ui/stack"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/loading-dots-with-text.tsx": {
    "source": "import { LoadingDots } from \"@/registry/default/ui/loading-dots\"\nimport { Text } from \"@/registry/default/ui/text\"\n\nexport default function LoadingDotsWithText() {\n  return (\n    <LoadingDots size={4}>\n      <Text color=\"gray-900\">Loading</Text>\n    </LoadingDots>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/loading-dots",
      "@/registry/default/ui/text"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/menu-checkboxes.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\nimport { DropdownMenuCheckboxItemProps } from \"@radix-ui/react-dropdown-menu\"\n\nimport { Button } from \"@/registry/default/ui/button\"\nimport {\n  DropdownMenuCheckboxItem,\n  DropdownMenuLabel,\n  Menu,\n  MenuButton,\n  MenuContainer,\n} from \"@/registry/default/ui/menu\"\n\ntype Checked = DropdownMenuCheckboxItemProps[\"checked\"]\n\nexport default function DropdownMenuCheckboxes() {\n  const [showStatusBar, setShowStatusBar] = React.useState<Checked>(true)\n  const [showActivityBar, setShowActivityBar] = React.useState<Checked>(false)\n  const [showPanel, setShowPanel] = React.useState<Checked>(false)\n\n  return (\n    <MenuContainer>\n      <MenuButton>Open</MenuButton>\n      <Menu className=\"w-56\">\n        <DropdownMenuLabel>Appearance</DropdownMenuLabel>\n        <DropdownMenuCheckboxItem\n          checked={showStatusBar}\n          onCheckedChange={setShowStatusBar}\n        >\n          Status Bar\n        </DropdownMenuCheckboxItem>\n        <DropdownMenuCheckboxItem\n          checked={showActivityBar}\n          onCheckedChange={setShowActivityBar}\n          disabled\n        >\n          Activity Bar\n        </DropdownMenuCheckboxItem>\n        <DropdownMenuCheckboxItem\n          checked={showPanel}\n          onCheckedChange={setShowPanel}\n        >\n          Panel\n        </DropdownMenuCheckboxItem>\n      </Menu>\n    </MenuContainer>\n  )\n}\n",
    "dependencies": [
      "react",
      "@radix-ui/react-dropdown-menu",
      "@/registry/default/ui/button",
      "@/registry/default/ui/menu"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/menu-custom-trigger.tsx": {
    "source": "import { Cloud, Plus, Users } from \"lucide-react\"\n\nimport { Button } from \"@/registry/default/ui/button\"\nimport {\n  DropdownMenuShortcut,\n  Menu,\n  MenuButton,\n  MenuContainer,\n  MenuItem,\n} from \"@/registry/default/ui/menu\"\n\nexport default function DropdownMenuDemo() {\n  return (\n    <MenuContainer>\n      <MenuButton>custom trigger</MenuButton>\n      <Menu width={200}>\n        <MenuItem onClick={() => alert(\"one\")}>One</MenuItem>\n        <MenuItem onClick={() => alert(\"one\")}>Two</MenuItem>\n        <MenuItem onClick={() => alert(\"one\")}>Three</MenuItem>\n        <MenuItem onClick={() => alert(\"one\")} type=\"error\">\n          Delete\n        </MenuItem>\n      </Menu>\n    </MenuContainer>\n  )\n}\n",
    "dependencies": [
      "lucide-react",
      "@/registry/default/ui/button",
      "@/registry/default/ui/menu"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/menu-demo.tsx": {
    "source": "import { Cloud, Plus, Users } from \"lucide-react\"\n\nimport { Button } from \"@/registry/default/ui/button\"\nimport {\n  DropdownMenuShortcut,\n  Menu,\n  MenuButton,\n  MenuContainer,\n  MenuItem,\n} from \"@/registry/default/ui/menu\"\n\nexport default function DropdownMenuDemo() {\n  return (\n    <MenuContainer>\n      <MenuButton>Actions</MenuButton>\n      <Menu width={200}>\n        <MenuItem onClick={() => alert(\"one\")}>One</MenuItem>\n        <MenuItem onClick={() => alert(\"one\")}>Two</MenuItem>\n        <MenuItem onClick={() => alert(\"one\")}>Three</MenuItem>\n        <MenuItem onClick={() => alert(\"one\")} type=\"error\">\n          Delete\n        </MenuItem>\n      </Menu>\n    </MenuContainer>\n  )\n}\n",
    "dependencies": [
      "lucide-react",
      "@/registry/default/ui/button",
      "@/registry/default/ui/menu"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/menu-disabled-items.tsx": {
    "source": "import {\n  Menu,\n  MenuButton,\n  MenuContainer,\n  MenuItem,\n} from \"@/registry/default/ui/menu\"\n\nexport default function DropdownMenuDemo() {\n  return (\n    <MenuContainer>\n      <MenuButton>Actions</MenuButton>\n      <Menu width={200}>\n        <MenuItem onClick={() => undefined}>One</MenuItem>\n        <MenuItem disabled onClick={() => undefined}>\n          Two\n        </MenuItem>\n        <MenuItem disabled onClick={() => undefined}>\n          Three\n        </MenuItem>\n        <MenuItem onClick={() => undefined} type=\"error\">\n          Delete\n        </MenuItem>\n      </Menu>\n    </MenuContainer>\n  )\n}\n",
    "dependencies": ["@/registry/default/ui/menu"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/menu-link-items.tsx": {
    "source": "import {\n  Menu,\n  MenuButton,\n  MenuContainer,\n  MenuLink,\n} from \"@/registry/default/ui/menu\"\n\nexport default function MenuLinksDemo() {\n  return (\n    <MenuContainer>\n      <MenuButton>Actions</MenuButton>\n      <Menu width={200}>\n        <MenuLink href=\"/design/menu#custom-trigger\">One</MenuLink>\n        <MenuLink href=\"#\">Two</MenuLink>\n        <MenuLink href=\"#\">Three</MenuLink>\n      </Menu>\n    </MenuContainer>\n  )\n}\n",
    "dependencies": ["@/registry/default/ui/menu"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/menu-position.tsx": {
    "source": "import {\n  Menu,\n  MenuButton,\n  MenuContainer,\n  MenuItem,\n} from \"@/registry/default/ui/menu\"\nimport { Stack } from \"@/registry/default/ui/stack\"\n\nexport default function MenuPositionDemo() {\n  return (\n    <Stack direction=\"row\" gap={4}>\n      <MenuContainer>\n        <MenuButton>Left Start</MenuButton>\n        <Menu width={200} side=\"left\" align=\"start\">\n          <MenuItem>One</MenuItem>\n          <MenuItem>Two</MenuItem>\n        </Menu>\n      </MenuContainer>\n      <MenuContainer>\n        <MenuButton>Top Start</MenuButton>\n        <Menu width={200} side=\"top\" align=\"start\">\n          <MenuItem>One</MenuItem>\n          <MenuItem>Two</MenuItem>\n        </Menu>\n      </MenuContainer>\n      <MenuContainer>\n        <MenuButton>Bottom Start</MenuButton>\n        <Menu width={200} side=\"bottom\" align=\"start\">\n          <MenuItem>One</MenuItem>\n          <MenuItem>Two</MenuItem>\n        </Menu>\n      </MenuContainer>\n      <MenuContainer>\n        <MenuButton>Right Start</MenuButton>\n        <Menu width={200} side=\"right\" align=\"start\">\n          <MenuItem>One</MenuItem>\n          <MenuItem>Two</MenuItem>\n        </Menu>\n      </MenuContainer>\n    </Stack>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/menu",
      "@/registry/default/ui/stack"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/menu-prefix.tsx": {
    "source": "import { Cloud, Plus, Users } from \"lucide-react\"\n\nimport { Button } from \"@/registry/default/ui/button\"\nimport {\n  DropdownMenuShortcut,\n  Menu,\n  MenuButton,\n  MenuContainer,\n  MenuItem,\n} from \"@/registry/default/ui/menu\"\n\nexport default function MenuPrefixDemo() {\n  return (\n    <MenuContainer>\n      <MenuButton>prefix</MenuButton>\n      <Menu width={200}>\n        <MenuItem onClick={() => alert(\"one\")}>One</MenuItem>\n        <MenuItem onClick={() => alert(\"one\")}>Two</MenuItem>\n        <MenuItem onClick={() => alert(\"one\")}>Three</MenuItem>\n        <MenuItem onClick={() => alert(\"one\")} type=\"error\">\n          Delete\n        </MenuItem>\n      </Menu>\n    </MenuContainer>\n  )\n}\n",
    "dependencies": [
      "lucide-react",
      "@/registry/default/ui/button",
      "@/registry/default/ui/menu"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/menu-radio-group.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\n\nimport { Button } from \"@/registry/default/ui/button\"\nimport {\n  DropdownMenuLabel,\n  DropdownMenuRadioGroup,\n  DropdownMenuRadioItem,\n  Menu,\n  MenuButton,\n  MenuContainer,\n} from \"@/registry/default/ui/menu\"\n\nexport default function DropdownMenuRadioGroupDemo() {\n  const [position, setPosition] = React.useState(\"bottom\")\n\n  return (\n    <MenuContainer>\n      <MenuButton>Open</MenuButton>\n      <Menu className=\"w-56\">\n        <DropdownMenuLabel>Panel Position</DropdownMenuLabel>\n        <DropdownMenuRadioGroup value={position} onValueChange={setPosition}>\n          <DropdownMenuRadioItem value=\"top\">Top</DropdownMenuRadioItem>\n          <DropdownMenuRadioItem value=\"bottom\">Bottom</DropdownMenuRadioItem>\n          <DropdownMenuRadioItem value=\"right\">Right</DropdownMenuRadioItem>\n        </DropdownMenuRadioGroup>\n      </Menu>\n    </MenuContainer>\n  )\n}\n",
    "dependencies": [
      "react",
      "@/registry/default/ui/button",
      "@/registry/default/ui/menu"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/menubar-demo.tsx": {
    "source": "import {\n  Menubar,\n  MenubarCheckboxItem,\n  MenubarContent,\n  MenubarItem,\n  MenubarMenu,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarSeparator,\n  MenubarShortcut,\n  MenubarSub,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarTrigger,\n} from \"@/registry/default/ui/menubar\"\n\nexport default function MenubarDemo() {\n  return (\n    <Menubar>\n      <MenubarMenu>\n        <MenubarTrigger>File</MenubarTrigger>\n        <MenubarContent>\n          <MenubarItem>\n            New Tab <MenubarShortcut>⌘T</MenubarShortcut>\n          </MenubarItem>\n          <MenubarItem>\n            New Window <MenubarShortcut>⌘N</MenubarShortcut>\n          </MenubarItem>\n          <MenubarItem disabled>New Incognito Window</MenubarItem>\n          <MenubarSeparator />\n          <MenubarSub>\n            <MenubarSubTrigger>Share</MenubarSubTrigger>\n            <MenubarSubContent>\n              <MenubarItem>Email link</MenubarItem>\n              <MenubarItem>Messages</MenubarItem>\n              <MenubarItem>Notes</MenubarItem>\n            </MenubarSubContent>\n          </MenubarSub>\n          <MenubarSeparator />\n          <MenubarItem>\n            Print... <MenubarShortcut>⌘P</MenubarShortcut>\n          </MenubarItem>\n        </MenubarContent>\n      </MenubarMenu>\n      <MenubarMenu>\n        <MenubarTrigger>Edit</MenubarTrigger>\n        <MenubarContent>\n          <MenubarItem>\n            Undo <MenubarShortcut>⌘Z</MenubarShortcut>\n          </MenubarItem>\n          <MenubarItem>\n            Redo <MenubarShortcut>⇧⌘Z</MenubarShortcut>\n          </MenubarItem>\n          <MenubarSeparator />\n          <MenubarSub>\n            <MenubarSubTrigger>Find</MenubarSubTrigger>\n            <MenubarSubContent>\n              <MenubarItem>Search the web</MenubarItem>\n              <MenubarSeparator />\n              <MenubarItem>Find...</MenubarItem>\n              <MenubarItem>Find Next</MenubarItem>\n              <MenubarItem>Find Previous</MenubarItem>\n            </MenubarSubContent>\n          </MenubarSub>\n          <MenubarSeparator />\n          <MenubarItem>Cut</MenubarItem>\n          <MenubarItem>Copy</MenubarItem>\n          <MenubarItem>Paste</MenubarItem>\n        </MenubarContent>\n      </MenubarMenu>\n      <MenubarMenu>\n        <MenubarTrigger>View</MenubarTrigger>\n        <MenubarContent>\n          <MenubarCheckboxItem>Always Show Bookmarks Bar</MenubarCheckboxItem>\n          <MenubarCheckboxItem checked>\n            Always Show Full URLs\n          </MenubarCheckboxItem>\n          <MenubarSeparator />\n          <MenubarItem inset>\n            Reload <MenubarShortcut>⌘R</MenubarShortcut>\n          </MenubarItem>\n          <MenubarItem disabled inset>\n            Force Reload <MenubarShortcut>⇧⌘R</MenubarShortcut>\n          </MenubarItem>\n          <MenubarSeparator />\n          <MenubarItem inset>Toggle Fullscreen</MenubarItem>\n          <MenubarSeparator />\n          <MenubarItem inset>Hide Sidebar</MenubarItem>\n        </MenubarContent>\n      </MenubarMenu>\n      <MenubarMenu>\n        <MenubarTrigger>Profiles</MenubarTrigger>\n        <MenubarContent>\n          <MenubarRadioGroup value=\"benoit\">\n            <MenubarRadioItem value=\"andy\">Andy</MenubarRadioItem>\n            <MenubarRadioItem value=\"benoit\">Benoit</MenubarRadioItem>\n            <MenubarRadioItem value=\"Luis\">Luis</MenubarRadioItem>\n          </MenubarRadioGroup>\n          <MenubarSeparator />\n          <MenubarItem inset>Edit...</MenubarItem>\n          <MenubarSeparator />\n          <MenubarItem inset>Add Profile...</MenubarItem>\n        </MenubarContent>\n      </MenubarMenu>\n    </Menubar>\n  )\n}\n",
    "dependencies": ["@/registry/default/ui/menubar"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/modal-demo.tsx": {
    "source": "import { Button } from \"@/registry/default/ui/button\"\nimport { Modal } from \"@/registry/default/ui/modal\"\nimport { Text } from \"@/registry/default/ui/text\"\n\nexport default function AlertDialogDemo() {\n  return (\n    <Modal.Modal>\n      <Modal.Trigger asChild>\n        <Button size=\"sm\">Open modal</Button>\n      </Modal.Trigger>\n      <Modal.Content>\n        <Modal.Body>\n          <Modal.Header>\n            <Modal.Title>Create Token</Modal.Title>\n            <Modal.Description>\n              Enter a unique name for your token to differentiate it from other\n              tokens and then select the scope.\n            </Modal.Description>\n          </Modal.Header>\n\n          <Text>Some content contained within the modal.</Text>\n        </Modal.Body>\n        <Modal.Actions>\n          <Modal.Cancel>Cancel</Modal.Cancel>\n          <Modal.Action>Continue</Modal.Action>\n        </Modal.Actions>\n      </Modal.Content>\n    </Modal.Modal>\n\n    // <Modal.Modal >\n    //   <Modal.Body>\n    //     <Modal.Header>\n    //       <Modal.Title>Create Token</Modal.Title>\n    //       <Modal.Subtitle>\n    //         Enter a unique name for your token to differentiate it from other\n    //         tokens and then select the scope.\n    //       </Modal.Subtitle>\n    //     </Modal.Header>\n\n    //     <Text>Some content contained within the modal.</Text>\n    //   </Modal.Body>\n\n    //   <Modal.Actions>\n    //     <Modal.Action onClick={() => setOpen(false)} type=\"secondary\">\n    //       Cancel\n    //     </Modal.Action>\n\n    //     <Modal.Action onClick={() => setOpen(false)}>Submit</Modal.Action>\n    //   </Modal.Actions>\n    // </Modal.Modal>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/button",
      "@/registry/default/ui/modal",
      "@/registry/default/ui/text"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/mode-toggle.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\nimport { Moon, Sun } from \"lucide-react\"\nimport { useTheme } from \"next-themes\"\n\nimport { Button } from \"@/registry/default/ui/button\"\nimport {\n  Menu,\n  MenuButton,\n  MenuContainer,\n  MenuItem,\n} from \"@/registry/default/ui/menu\"\n\nexport default function ModeToggle() {\n  const { setTheme } = useTheme()\n\n  return (\n    <MenuContainer>\n      <MenuButton>\n        <Sun className=\"h-[1.2rem] w-[1.2rem] rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0\" />\n        <Moon className=\"absolute h-[1.2rem] w-[1.2rem] rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100\" />\n        <span className=\"sr-only\">Toggle theme</span>\n      </MenuButton>\n      <Menu align=\"end\">\n        <MenuItem onClick={() => setTheme(\"light\")}>Light</MenuItem>\n        <MenuItem onClick={() => setTheme(\"dark\")}>Dark</MenuItem>\n        <MenuItem onClick={() => setTheme(\"system\")}>System</MenuItem>\n      </Menu>\n    </MenuContainer>\n  )\n}\n",
    "dependencies": [
      "react",
      "lucide-react",
      "next-themes",
      "@/registry/default/ui/button",
      "@/registry/default/ui/menu"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/navigation-menu-demo.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\nimport Link from \"next/link\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Icons } from \"@/components/icons\"\nimport {\n  NavigationMenu,\n  NavigationMenuContent,\n  NavigationMenuItem,\n  NavigationMenuLink,\n  NavigationMenuList,\n  NavigationMenuTrigger,\n  navigationMenuTriggerStyle,\n} from \"@/registry/default/ui/navigation-menu\"\n\nconst components: { title: string; href: string; description: string }[] = [\n  {\n    title: \"Hover Card\",\n    href: \"/docs/primitives/hover-card\",\n    description:\n      \"For sighted users to preview content available behind a link.\",\n  },\n  {\n    title: \"Modal\",\n    href: \"/docs/primitives/modal\",\n    description:\n      \"A modal dialog that interrupts the user with important content and expects a response.\",\n  },\n  {\n    title: \"Progress\",\n    href: \"/docs/primitives/progress\",\n    description:\n      \"Displays an indicator showing the completion progress of a task, typically displayed as a progress bar.\",\n  },\n  {\n    title: \"Scroll-area\",\n    href: \"/docs/primitives/scroll-area\",\n    description: \"Visually or semantically separates content.\",\n  },\n  {\n    title: \"Tabs\",\n    href: \"/docs/primitives/tabs\",\n    description:\n      \"A set of layered sections of content—known as tab panels—that are displayed one at a time.\",\n  },\n  {\n    title: \"Tooltip\",\n    href: \"/docs/primitives/tooltip\",\n    description:\n      \"A popup that displays information related to an element when the element receives keyboard focus or the mouse hovers over it.\",\n  },\n]\n\nexport default function NavigationMenuDemo() {\n  return (\n    <NavigationMenu>\n      <NavigationMenuList>\n        <NavigationMenuItem>\n          <NavigationMenuTrigger>Getting started</NavigationMenuTrigger>\n          <NavigationMenuContent>\n            <ul className=\"grid gap-3 p-6 md:w-[400px] lg:w-[500px] lg:grid-cols-[.75fr_1fr]\">\n              <li className=\"row-span-3\">\n                <NavigationMenuLink asChild>\n                  <a\n                    className=\"flex h-full w-full select-none flex-col justify-end rounded-md bg-gradient-to-b from-muted/50 to-muted p-6 no-underline outline-none focus:shadow-md\"\n                    href=\"/\"\n                  >\n                    <Icons.logo className=\"h-6 w-6\" />\n                    <div className=\"mb-2 mt-4 text-lg font-medium\">\n                      vercel/ui\n                    </div>\n                    <p className=\"text-sm leading-tight text-muted-foreground\">\n                      Beautifully designed components that you can copy and\n                      paste into your apps. Accessible. Customizable. Open\n                      Source.\n                    </p>\n                  </a>\n                </NavigationMenuLink>\n              </li>\n              <ListItem href=\"/docs\" title=\"Introduction\">\n                Re-usable components built using Radix UI and Tailwind CSS.\n              </ListItem>\n              <ListItem href=\"/docs/installation\" title=\"Installation\">\n                How to install dependencies and structure your app.\n              </ListItem>\n              <ListItem href=\"/docs/primitives/typography\" title=\"Typography\">\n                Styles for headings, paragraphs, lists...etc\n              </ListItem>\n            </ul>\n          </NavigationMenuContent>\n        </NavigationMenuItem>\n        <NavigationMenuItem>\n          <NavigationMenuTrigger>Components</NavigationMenuTrigger>\n          <NavigationMenuContent>\n            <ul className=\"grid w-[400px] gap-3 p-4 md:w-[500px] md:grid-cols-2 lg:w-[600px] \">\n              {components.map((component) => (\n                <ListItem\n                  key={component.title}\n                  title={component.title}\n                  href={component.href}\n                >\n                  {component.description}\n                </ListItem>\n              ))}\n            </ul>\n          </NavigationMenuContent>\n        </NavigationMenuItem>\n        <NavigationMenuItem>\n          <Link href=\"/docs\" legacyBehavior passHref>\n            <NavigationMenuLink className={navigationMenuTriggerStyle()}>\n              Documentation\n            </NavigationMenuLink>\n          </Link>\n        </NavigationMenuItem>\n      </NavigationMenuList>\n    </NavigationMenu>\n  )\n}\n\nconst ListItem = React.forwardRef<\n  React.ElementRef<\"a\">,\n  React.ComponentPropsWithoutRef<\"a\">\n>(({ className, title, children, ...props }, ref) => {\n  return (\n    <li>\n      <NavigationMenuLink asChild>\n        <a\n          ref={ref}\n          className={cn(\n            \"block select-none space-y-1 rounded-md p-3 leading-none no-underline outline-none transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground\",\n            className\n          )}\n          {...props}\n        >\n          <div className=\"text-sm font-medium leading-none\">{title}</div>\n          <p className=\"line-clamp-2 text-sm leading-snug text-muted-foreground\">\n            {children}\n          </p>\n        </a>\n      </NavigationMenuLink>\n    </li>\n  )\n})\nListItem.displayName = \"ListItem\"\n",
    "dependencies": [
      "react",
      "next/link",
      "@/lib/utils",
      "@/components/icons",
      "@/registry/default/ui/navigation-menu"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/note-action.tsx": {
    "source": "import { Button } from \"@/registry/default/ui/button\"\nimport { Note } from \"@/registry/default/ui/note\"\nimport { Stack } from \"@/registry/default/ui/stack\"\n\nexport default function NoteAction() {\n  return (\n    <Stack align=\"flex-start\" gap={6}>\n      <Note action={<Button size=\"small\">Upgrade</Button>}>\n        This note details some information.\n      </Note>\n      <Note action={<Button size=\"small\">Upgrade</Button>}>\n        This note details a large amount information that could potentially wrap\n        into two or more lines, forcing the height of the Note to be larger.\n      </Note>\n    </Stack>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/button",
      "@/registry/default/ui/note",
      "@/registry/default/ui/stack"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/note-cyan.tsx": {
    "source": "import { Button } from \"@/registry/default/ui/button\"\nimport { Note } from \"@/registry/default/ui/note\"\nimport { Stack } from \"@/registry/default/ui/stack\"\n\nexport default function NoteCyan() {\n  return (\n    <Stack gap={6}>\n      <Note type=\"cyan\">This note details some success information.</Note>\n      <Note action={<Button size=\"small\">Upgrade</Button>} type=\"cyan\">\n        This note details some success information.\n      </Note>\n      <Note fill type=\"cyan\">\n        This filled note details some success information.\n      </Note>\n      <Note action={<Button size=\"small\">Upgrade</Button>} fill type=\"cyan\">\n        This filled note details some success information.\n      </Note>\n    </Stack>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/button",
      "@/registry/default/ui/note",
      "@/registry/default/ui/stack"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/note-demo.tsx": {
    "source": "import { Note } from \"@/registry/default/ui/note\"\nimport { Stack } from \"@/registry/default/ui/stack\"\n\nexport default function NoteDemo() {\n  return (\n    <Stack align=\"flex-start\" direction={{ sm: \"column\", md: \"row\" }} gap={6}>\n      <Note size=\"small\">A small note.</Note>\n      <Note>A default note.</Note>\n      <Note size=\"large\">A large note.</Note>\n    </Stack>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/note",
      "@/registry/default/ui/stack"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/note-disabled.tsx": {
    "source": "import { Button } from \"@/registry/default/ui/button\"\nimport { Note } from \"@/registry/default/ui/note\"\nimport { Stack } from \"@/registry/default/ui/stack\"\n\nexport default function NoteDisabled() {\n  return (\n    <Stack gap={6}>\n      <Note\n        action={\n          <Button size=\"small\" disabled>\n            Upgrade\n          </Button>\n        }\n        disabled\n        fill\n        type=\"warning\"\n      >\n        This note details a warning.\n      </Note>\n    </Stack>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/button",
      "@/registry/default/ui/note",
      "@/registry/default/ui/stack"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/note-error.tsx": {
    "source": "import { Button } from \"@/registry/default/ui/button\"\nimport { Note } from \"@/registry/default/ui/note\"\nimport { Stack } from \"@/registry/default/ui/stack\"\n\nexport default function NoteDemo() {\n  return (\n    <Stack gap={6}>\n      <Note type=\"error\">This note details some error information.</Note>\n      <Note action={<Button size=\"small\">Upgrade</Button>} type=\"error\">\n        This note details some error information.\n      </Note>\n      <Note fill type=\"error\">\n        This filled note details some error information.\n      </Note>\n      <Note action={<Button size=\"small\">Upgrade</Button>} fill type=\"error\">\n        This filled note details some error information.\n      </Note>\n    </Stack>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/button",
      "@/registry/default/ui/note",
      "@/registry/default/ui/stack"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/note-secondary.tsx": {
    "source": "import { Button } from \"@/registry/default/ui/button\"\nimport { Note } from \"@/registry/default/ui/note\"\nimport { Stack } from \"@/registry/default/ui/stack\"\n\nexport default function NoteDemo() {\n  return (\n    <Stack gap={6}>\n      <Note type=\"secondary\">\n        This note details some secondary information.\n      </Note>\n      <Note action={<Button size=\"small\">Upgrade</Button>} type=\"secondary\">\n        This note details some secondary information.\n      </Note>\n      <Note fill type=\"secondary\">\n        This filled note details some secondary information.\n      </Note>\n      <Note\n        action={<Button size=\"small\">Upgrade</Button>}\n        fill\n        type=\"secondary\"\n      >\n        This filled note details some secondary information.\n      </Note>\n    </Stack>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/button",
      "@/registry/default/ui/note",
      "@/registry/default/ui/stack"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/note-success.tsx": {
    "source": "import { Button } from \"@/registry/default/ui/button\"\nimport { Note } from \"@/registry/default/ui/note\"\nimport { Stack } from \"@/registry/default/ui/stack\"\n\nexport default function NoteDemo() {\n  return (\n    <Stack gap={6}>\n      <Note type=\"success\">This note details some success information.</Note>\n      <Note action={<Button size=\"small\">Upgrade</Button>} type=\"success\">\n        This note details some success information.\n      </Note>\n      <Note fill type=\"success\">\n        This filled note details some success information.\n      </Note>\n      <Note action={<Button size=\"small\">Upgrade</Button>} fill type=\"success\">\n        This filled note details some success information.\n      </Note>\n    </Stack>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/button",
      "@/registry/default/ui/note",
      "@/registry/default/ui/stack"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/note-violet.tsx": {
    "source": "import { Button } from \"@/registry/default/ui/button\"\nimport { Note } from \"@/registry/default/ui/note\"\nimport { Stack } from \"@/registry/default/ui/stack\"\n\nexport default function NoteViolet() {\n  return (\n    <Stack gap={6}>\n      <Note type=\"violet\">This note details some warning information.</Note>\n      <Note action={<Button size=\"small\">Upgrade</Button>} type=\"violet\">\n        This note details some warning information.\n      </Note>\n      <Note fill type=\"violet\">\n        This filled note details some warning information.\n      </Note>\n      <Note action={<Button size=\"small\">Upgrade</Button>} fill type=\"violet\">\n        This filled note details some warning information.\n      </Note>\n    </Stack>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/button",
      "@/registry/default/ui/note",
      "@/registry/default/ui/stack"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/note-warning.tsx": {
    "source": "import { Button } from \"@/registry/default/ui/button\"\nimport { Note } from \"@/registry/default/ui/note\"\nimport { Stack } from \"@/registry/default/ui/stack\"\n\nexport default function NoteWarning() {\n  return (\n    <Stack gap={6}>\n      <Note type=\"warning\">This note details some warning information.</Note>\n      <Note action={<Button size=\"small\">Upgrade</Button>} type=\"warning\">\n        This note details some warning information.\n      </Note>\n      <Note fill type=\"warning\">\n        This filled note details some warning information.\n      </Note>\n      <Note action={<Button size=\"small\">Upgrade</Button>} fill type=\"warning\">\n        This filled note details some warning information.\n      </Note>\n    </Stack>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/button",
      "@/registry/default/ui/note",
      "@/registry/default/ui/stack"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/pagination-demo.tsx": {
    "source": "import {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n} from \"@/registry/default/ui/pagination\"\n\nexport default function PaginationDemo() {\n  return (\n    <Pagination>\n      <PaginationContent>\n        <PaginationItem>\n          <PaginationPrevious href=\"#\" />\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationLink href=\"#\">1</PaginationLink>\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationLink href=\"#\" isActive>\n            2\n          </PaginationLink>\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationLink href=\"#\">3</PaginationLink>\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationEllipsis />\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationNext href=\"#\" />\n        </PaginationItem>\n      </PaginationContent>\n    </Pagination>\n  )\n}\n",
    "dependencies": ["@/registry/default/ui/pagination"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/popover-demo.tsx": {
    "source": "import { Button } from \"@/registry/default/ui/button\"\nimport { Input } from \"@/registry/default/ui/input\"\nimport { Label } from \"@/registry/default/ui/label\"\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/registry/default/ui/popover\"\n\nexport default function PopoverDemo() {\n  return (\n    <Popover>\n      <PopoverTrigger asChild>\n        <Button variant=\"secondary\">Open popover</Button>\n      </PopoverTrigger>\n      <PopoverContent className=\"w-80\">\n        <div className=\"grid gap-4\">\n          <div className=\"space-y-2\">\n            <h4 className=\"font-medium leading-none\">Dimensions</h4>\n            <p className=\"text-sm text-muted-foreground\">\n              Set the dimensions for the layer.\n            </p>\n          </div>\n          <div className=\"grid gap-2\">\n            <div className=\"grid grid-cols-3 items-center gap-4\">\n              <Label htmlFor=\"width\">Width</Label>\n              <Input\n                id=\"width\"\n                defaultValue=\"100%\"\n                className=\"col-span-2 h-8\"\n              />\n            </div>\n            <div className=\"grid grid-cols-3 items-center gap-4\">\n              <Label htmlFor=\"maxWidth\">Max. width</Label>\n              <Input\n                id=\"maxWidth\"\n                defaultValue=\"300px\"\n                className=\"col-span-2 h-8\"\n              />\n            </div>\n            <div className=\"grid grid-cols-3 items-center gap-4\">\n              <Label htmlFor=\"height\">Height</Label>\n              <Input\n                id=\"height\"\n                defaultValue=\"25px\"\n                className=\"col-span-2 h-8\"\n              />\n            </div>\n            <div className=\"grid grid-cols-3 items-center gap-4\">\n              <Label htmlFor=\"maxHeight\">Max. height</Label>\n              <Input\n                id=\"maxHeight\"\n                defaultValue=\"none\"\n                className=\"col-span-2 h-8\"\n              />\n            </div>\n          </div>\n        </div>\n      </PopoverContent>\n    </Popover>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/button",
      "@/registry/default/ui/input",
      "@/registry/default/ui/label",
      "@/registry/default/ui/popover"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/progress-demo.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\n\nimport { Progress } from \"@/registry/default/ui/progress\"\n\nexport default function ProgressDemo() {\n  const [progress, setProgress] = React.useState(13)\n\n  React.useEffect(() => {\n    const timer = setTimeout(() => setProgress(66), 500)\n    return () => clearTimeout(timer)\n  }, [])\n\n  return <Progress value={progress} className=\"w-[60%]\" />\n}\n",
    "dependencies": ["react", "@/registry/default/ui/progress"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/radio-group-demo.tsx": {
    "source": "import { Label } from \"@/registry/default/ui/label\"\nimport { RadioGroup, RadioGroupItem } from \"@/registry/default/ui/radio-group\"\n\nexport default function RadioGroupDemo() {\n  return (\n    <RadioGroup defaultValue=\"comfortable\">\n      <div className=\"flex items-center space-x-2\">\n        <RadioGroupItem value=\"default\" id=\"r1\" />\n        <Label htmlFor=\"r1\">Default</Label>\n      </div>\n      <div className=\"flex items-center space-x-2\">\n        <RadioGroupItem value=\"comfortable\" id=\"r2\" />\n        <Label htmlFor=\"r2\">Comfortable</Label>\n      </div>\n      <div className=\"flex items-center space-x-2\">\n        <RadioGroupItem value=\"compact\" id=\"r3\" />\n        <Label htmlFor=\"r3\">Compact</Label>\n      </div>\n    </RadioGroup>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/label",
      "@/registry/default/ui/radio-group"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/radio-group-form.tsx": {
    "source": "\"use client\"\n\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport { useForm } from \"react-hook-form\"\nimport { z } from \"zod\"\n\nimport { Button } from \"@/registry/default/ui/button\"\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/registry/default/ui/form\"\nimport { RadioGroup, RadioGroupItem } from \"@/registry/default/ui/radio-group\"\nimport { toast } from \"@/registry/default/ui/use-toast\"\n\nconst FormSchema = z.object({\n  type: z.enum([\"all\", \"mentions\", \"none\"], {\n    required_error: \"You need to select a notification type.\",\n  }),\n})\n\nexport default function RadioGroupForm() {\n  const form = useForm<z.infer<typeof FormSchema>>({\n    resolver: zodResolver(FormSchema),\n  })\n\n  function onSubmit(data: z.infer<typeof FormSchema>) {\n    toast({\n      title: \"You submitted the following values:\",\n      description: (\n        <pre className=\"mt-2 w-[340px] rounded-md bg-slate-950 p-4\">\n          <code className=\"text-white\">{JSON.stringify(data, null, 2)}</code>\n        </pre>\n      ),\n    })\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"w-2/3 space-y-6\">\n        <FormField\n          control={form.control}\n          name=\"type\"\n          render={({ field }) => (\n            <FormItem className=\"space-y-3\">\n              <FormLabel>Notify me about...</FormLabel>\n              <FormControl>\n                <RadioGroup\n                  onValueChange={field.onChange}\n                  defaultValue={field.value}\n                  className=\"flex flex-col space-y-1\"\n                >\n                  <FormItem className=\"flex items-center space-x-3 space-y-0\">\n                    <FormControl>\n                      <RadioGroupItem value=\"all\" />\n                    </FormControl>\n                    <FormLabel className=\"font-normal\">\n                      All new messages\n                    </FormLabel>\n                  </FormItem>\n                  <FormItem className=\"flex items-center space-x-3 space-y-0\">\n                    <FormControl>\n                      <RadioGroupItem value=\"mentions\" />\n                    </FormControl>\n                    <FormLabel className=\"font-normal\">\n                      Direct messages and mentions\n                    </FormLabel>\n                  </FormItem>\n                  <FormItem className=\"flex items-center space-x-3 space-y-0\">\n                    <FormControl>\n                      <RadioGroupItem value=\"none\" />\n                    </FormControl>\n                    <FormLabel className=\"font-normal\">Nothing</FormLabel>\n                  </FormItem>\n                </RadioGroup>\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <Button type=\"submit\">Submit</Button>\n      </form>\n    </Form>\n  )\n}\n",
    "dependencies": [
      "@hookform/resolvers/zod",
      "react-hook-form",
      "zod",
      "@/registry/default/ui/button",
      "@/registry/default/ui/form",
      "@/registry/default/ui/radio-group",
      "@/registry/default/ui/use-toast"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/resizable-demo-with-handle.tsx": {
    "source": "import {\n  ResizableHandle,\n  ResizablePanel,\n  ResizablePanelGroup,\n} from \"@/registry/default/ui/resizable\"\n\nexport default function ResizableDemo() {\n  return (\n    <ResizablePanelGroup\n      direction=\"horizontal\"\n      className=\"max-w-md rounded-lg border\"\n    >\n      <ResizablePanel defaultSize={50}>\n        <div className=\"flex h-[200px] items-center justify-center p-6\">\n          <span className=\"font-semibold\">One</span>\n        </div>\n      </ResizablePanel>\n      <ResizableHandle withHandle />\n      <ResizablePanel defaultSize={50}>\n        <ResizablePanelGroup direction=\"vertical\">\n          <ResizablePanel defaultSize={25}>\n            <div className=\"flex h-full items-center justify-center p-6\">\n              <span className=\"font-semibold\">Two</span>\n            </div>\n          </ResizablePanel>\n          <ResizableHandle withHandle />\n          <ResizablePanel defaultSize={75}>\n            <div className=\"flex h-full items-center justify-center p-6\">\n              <span className=\"font-semibold\">Three</span>\n            </div>\n          </ResizablePanel>\n        </ResizablePanelGroup>\n      </ResizablePanel>\n    </ResizablePanelGroup>\n  )\n}\n",
    "dependencies": ["@/registry/default/ui/resizable"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/resizable-demo.tsx": {
    "source": "import {\n  ResizableHandle,\n  ResizablePanel,\n  ResizablePanelGroup,\n} from \"@/registry/default/ui/resizable\"\n\nexport default function ResizableDemo() {\n  return (\n    <ResizablePanelGroup\n      direction=\"horizontal\"\n      className=\"max-w-md rounded-lg border\"\n    >\n      <ResizablePanel defaultSize={50}>\n        <div className=\"flex h-[200px] items-center justify-center p-6\">\n          <span className=\"font-semibold\">One</span>\n        </div>\n      </ResizablePanel>\n      <ResizableHandle />\n      <ResizablePanel defaultSize={50}>\n        <ResizablePanelGroup direction=\"vertical\">\n          <ResizablePanel defaultSize={25}>\n            <div className=\"flex h-full items-center justify-center p-6\">\n              <span className=\"font-semibold\">Two</span>\n            </div>\n          </ResizablePanel>\n          <ResizableHandle />\n          <ResizablePanel defaultSize={75}>\n            <div className=\"flex h-full items-center justify-center p-6\">\n              <span className=\"font-semibold\">Three</span>\n            </div>\n          </ResizablePanel>\n        </ResizablePanelGroup>\n      </ResizablePanel>\n    </ResizablePanelGroup>\n  )\n}\n",
    "dependencies": ["@/registry/default/ui/resizable"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/resizable-handle.tsx": {
    "source": "import {\n  ResizableHandle,\n  ResizablePanel,\n  ResizablePanelGroup,\n} from \"@/registry/default/ui/resizable\"\n\nexport default function ResizableDemo() {\n  return (\n    <ResizablePanelGroup\n      direction=\"horizontal\"\n      className=\"min-h-[200px] max-w-md rounded-lg border\"\n    >\n      <ResizablePanel defaultSize={25}>\n        <div className=\"flex h-full items-center justify-center p-6\">\n          <span className=\"font-semibold\">Sidebar</span>\n        </div>\n      </ResizablePanel>\n      <ResizableHandle withHandle />\n      <ResizablePanel defaultSize={75}>\n        <div className=\"flex h-full items-center justify-center p-6\">\n          <span className=\"font-semibold\">Content</span>\n        </div>\n      </ResizablePanel>\n    </ResizablePanelGroup>\n  )\n}\n",
    "dependencies": ["@/registry/default/ui/resizable"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/resizable-vertical.tsx": {
    "source": "import {\n  ResizableHandle,\n  ResizablePanel,\n  ResizablePanelGroup,\n} from \"@/registry/default/ui/resizable\"\n\nexport default function ResizableDemo() {\n  return (\n    <ResizablePanelGroup\n      direction=\"vertical\"\n      className=\"min-h-[200px] max-w-md rounded-lg border\"\n    >\n      <ResizablePanel defaultSize={25}>\n        <div className=\"flex h-full items-center justify-center p-6\">\n          <span className=\"font-semibold\">Header</span>\n        </div>\n      </ResizablePanel>\n      <ResizableHandle />\n      <ResizablePanel defaultSize={75}>\n        <div className=\"flex h-full items-center justify-center p-6\">\n          <span className=\"font-semibold\">Content</span>\n        </div>\n      </ResizablePanel>\n    </ResizablePanelGroup>\n  )\n}\n",
    "dependencies": ["@/registry/default/ui/resizable"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/scroll-area-demo.tsx": {
    "source": "import * as React from \"react\"\n\nimport { ScrollArea } from \"@/registry/default/ui/scroll-area\"\n\nconst tags = Array.from({ length: 50 }).map(\n  (_, i, a) => `v1.2.0-beta.${a.length - i}`\n)\n\nexport default function ScrollAreaDemo() {\n  return (\n    <ScrollArea className=\"h-72 w-48 rounded-md border\">\n      <div className=\"p-4\">\n        <h4 className=\"mb-4 text-sm font-medium leading-none\">Tags</h4>\n        {tags.map((tag) => (\n          <>\n            <div key={tag} className=\"border-b border-b-red-500 text-sm\">\n              {tag}\n            </div>\n          </>\n        ))}\n      </div>\n    </ScrollArea>\n  )\n}\n",
    "dependencies": ["react", "@/registry/default/ui/scroll-area"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/scroll-area-horizontal-demo.tsx": {
    "source": "import * as React from \"react\"\nimport Image from \"next/image\"\n\nimport { ScrollArea, ScrollBar } from \"@/registry/default/ui/scroll-area\"\n\nexport interface Artwork {\n  artist: string\n  art: string\n}\n\nexport const works: Artwork[] = [\n  {\n    artist: \"Ornella Binni\",\n    art: \"https://images.unsplash.com/photo-1465869185982-5a1a7522cbcb?auto=format&fit=crop&w=300&q=80\",\n  },\n  {\n    artist: \"Tom Byrom\",\n    art: \"https://images.unsplash.com/photo-1548516173-3cabfa4607e9?auto=format&fit=crop&w=300&q=80\",\n  },\n  {\n    artist: \"Vladimir Malyavko\",\n    art: \"https://images.unsplash.com/photo-1494337480532-3725c85fd2ab?auto=format&fit=crop&w=300&q=80\",\n  },\n]\n\nexport default function ScrollAreaHorizontalDemo() {\n  return (\n    <ScrollArea className=\"w-96 whitespace-nowrap rounded-md border\">\n      <div className=\"flex w-max space-x-4 p-4\">\n        {works.map((artwork) => (\n          <figure key={artwork.artist} className=\"shrink-0\">\n            <div className=\"overflow-hidden rounded-md\">\n              <Image\n                src={artwork.art}\n                alt={`Photo by ${artwork.artist}`}\n                className=\"aspect-[3/4] h-fit w-fit object-cover\"\n                width={300}\n                height={400}\n              />\n            </div>\n            <figcaption className=\"pt-2 text-xs text-muted-foreground\">\n              Photo by{\" \"}\n              <span className=\"font-semibold text-foreground\">\n                {artwork.artist}\n              </span>\n            </figcaption>\n          </figure>\n        ))}\n      </div>\n      <ScrollBar orientation=\"horizontal\" />\n    </ScrollArea>\n  )\n}\n",
    "dependencies": ["react", "next/image", "@/registry/default/ui/scroll-area"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/select-demo.tsx": {
    "source": "import * as React from \"react\"\n\nimport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectTrigger,\n  SelectValue,\n} from \"@/registry/default/ui/select\"\n\nexport default function SelectDemo() {\n  return (\n    <Select>\n      <SelectTrigger className=\"w-[180px]\">\n        <SelectValue placeholder=\"Select a fruit\" />\n      </SelectTrigger>\n      <SelectContent>\n        <SelectGroup>\n          <SelectLabel>Fruits</SelectLabel>\n          <SelectItem value=\"apple\">Apple</SelectItem>\n          <SelectItem value=\"banana\">Banana</SelectItem>\n          <SelectItem value=\"blueberry\">Blueberry</SelectItem>\n          <SelectItem value=\"grapes\">Grapes</SelectItem>\n          <SelectItem value=\"pineapple\">Pineapple</SelectItem>\n        </SelectGroup>\n      </SelectContent>\n    </Select>\n  )\n}\n",
    "dependencies": ["react", "@/registry/default/ui/select"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/select-form.tsx": {
    "source": "\"use client\"\n\nimport Link from \"next/link\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport { useForm } from \"react-hook-form\"\nimport { z } from \"zod\"\n\nimport { Button } from \"@/registry/default/ui/button\"\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/registry/default/ui/form\"\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/registry/default/ui/select\"\nimport { toast } from \"@/registry/default/ui/use-toast\"\n\nconst FormSchema = z.object({\n  email: z\n    .string({\n      required_error: \"Please select an email to display.\",\n    })\n    .email(),\n})\n\nexport default function SelectForm() {\n  const form = useForm<z.infer<typeof FormSchema>>({\n    resolver: zodResolver(FormSchema),\n  })\n\n  function onSubmit(data: z.infer<typeof FormSchema>) {\n    toast({\n      title: \"You submitted the following values:\",\n      description: (\n        <pre className=\"mt-2 w-[340px] rounded-md bg-slate-950 p-4\">\n          <code className=\"text-white\">{JSON.stringify(data, null, 2)}</code>\n        </pre>\n      ),\n    })\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"w-2/3 space-y-6\">\n        <FormField\n          control={form.control}\n          name=\"email\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Email</FormLabel>\n              <Select onValueChange={field.onChange} defaultValue={field.value}>\n                <FormControl>\n                  <SelectTrigger>\n                    <SelectValue placeholder=\"Select a verified email to display\" />\n                  </SelectTrigger>\n                </FormControl>\n                <SelectContent>\n                  <SelectItem value=\"m@example.com\">m@example.com</SelectItem>\n                  <SelectItem value=\"m@google.com\">m@google.com</SelectItem>\n                  <SelectItem value=\"m@support.com\">m@support.com</SelectItem>\n                </SelectContent>\n              </Select>\n              <FormDescription>\n                You can manage email addresses in your{\" \"}\n                <Link href=\"/examples/forms\">email settings</Link>.\n              </FormDescription>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <Button type=\"submit\">Submit</Button>\n      </form>\n    </Form>\n  )\n}\n",
    "dependencies": [
      "next/link",
      "@hookform/resolvers/zod",
      "react-hook-form",
      "zod",
      "@/registry/default/ui/button",
      "@/registry/default/ui/form",
      "@/registry/default/ui/select",
      "@/registry/default/ui/use-toast"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/select-scrollable.tsx": {
    "source": "import * as React from \"react\"\n\nimport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectTrigger,\n  SelectValue,\n} from \"@/registry/default/ui/select\"\n\nexport default function SelectScrollable() {\n  return (\n    <Select>\n      <SelectTrigger className=\"w-[280px]\">\n        <SelectValue placeholder=\"Select a timezone\" />\n      </SelectTrigger>\n      <SelectContent>\n        <SelectGroup>\n          <SelectLabel>North America</SelectLabel>\n          <SelectItem value=\"est\">Eastern Standard Time (EST)</SelectItem>\n          <SelectItem value=\"cst\">Central Standard Time (CST)</SelectItem>\n          <SelectItem value=\"mst\">Mountain Standard Time (MST)</SelectItem>\n          <SelectItem value=\"pst\">Pacific Standard Time (PST)</SelectItem>\n          <SelectItem value=\"akst\">Alaska Standard Time (AKST)</SelectItem>\n          <SelectItem value=\"hst\">Hawaii Standard Time (HST)</SelectItem>\n        </SelectGroup>\n        <SelectGroup>\n          <SelectLabel>Europe & Africa</SelectLabel>\n          <SelectItem value=\"gmt\">Greenwich Mean Time (GMT)</SelectItem>\n          <SelectItem value=\"cet\">Central European Time (CET)</SelectItem>\n          <SelectItem value=\"eet\">Eastern European Time (EET)</SelectItem>\n          <SelectItem value=\"west\">\n            Western European Summer Time (WEST)\n          </SelectItem>\n          <SelectItem value=\"cat\">Central Africa Time (CAT)</SelectItem>\n          <SelectItem value=\"eat\">East Africa Time (EAT)</SelectItem>\n        </SelectGroup>\n        <SelectGroup>\n          <SelectLabel>Asia</SelectLabel>\n          <SelectItem value=\"msk\">Moscow Time (MSK)</SelectItem>\n          <SelectItem value=\"ist\">India Standard Time (IST)</SelectItem>\n          <SelectItem value=\"cst_china\">China Standard Time (CST)</SelectItem>\n          <SelectItem value=\"jst\">Japan Standard Time (JST)</SelectItem>\n          <SelectItem value=\"kst\">Korea Standard Time (KST)</SelectItem>\n          <SelectItem value=\"ist_indonesia\">\n            Indonesia Central Standard Time (WITA)\n          </SelectItem>\n        </SelectGroup>\n        <SelectGroup>\n          <SelectLabel>Australia & Pacific</SelectLabel>\n          <SelectItem value=\"awst\">\n            Australian Western Standard Time (AWST)\n          </SelectItem>\n          <SelectItem value=\"acst\">\n            Australian Central Standard Time (ACST)\n          </SelectItem>\n          <SelectItem value=\"aest\">\n            Australian Eastern Standard Time (AEST)\n          </SelectItem>\n          <SelectItem value=\"nzst\">New Zealand Standard Time (NZST)</SelectItem>\n          <SelectItem value=\"fjt\">Fiji Time (FJT)</SelectItem>\n        </SelectGroup>\n        <SelectGroup>\n          <SelectLabel>South America</SelectLabel>\n          <SelectItem value=\"art\">Argentina Time (ART)</SelectItem>\n          <SelectItem value=\"bot\">Bolivia Time (BOT)</SelectItem>\n          <SelectItem value=\"brt\">Brasilia Time (BRT)</SelectItem>\n          <SelectItem value=\"clt\">Chile Standard Time (CLT)</SelectItem>\n        </SelectGroup>\n      </SelectContent>\n    </Select>\n  )\n}\n",
    "dependencies": ["react", "@/registry/default/ui/select"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/sheet-demo.tsx": {
    "source": "import { Button } from \"@/registry/default/ui/button\"\nimport { Input } from \"@/registry/default/ui/input\"\nimport { Label } from \"@/registry/default/ui/label\"\nimport {\n  Sheet,\n  SheetClose,\n  SheetContent,\n  SheetDescription,\n  SheetFooter,\n  SheetHeader,\n  SheetTitle,\n  SheetTrigger,\n} from \"@/registry/default/ui/sheet\"\n\nexport default function SheetDemo() {\n  return (\n    <Sheet>\n      <SheetTrigger asChild>\n        <Button variant=\"secondary\">Open</Button>\n      </SheetTrigger>\n      <SheetContent>\n        <SheetHeader>\n          <SheetTitle>Edit profile</SheetTitle>\n          <SheetDescription>\n            Make changes to your profile here. Click save when you're done.\n          </SheetDescription>\n        </SheetHeader>\n        <div className=\"grid gap-4 py-4\">\n          <div className=\"grid grid-cols-4 items-center gap-4\">\n            <Label htmlFor=\"name\" className=\"text-right\">\n              Name\n            </Label>\n            <Input id=\"name\" value=\"Pedro Duarte\" className=\"col-span-3\" />\n          </div>\n          <div className=\"grid grid-cols-4 items-center gap-4\">\n            <Label htmlFor=\"username\" className=\"text-right\">\n              Username\n            </Label>\n            <Input id=\"username\" value=\"@peduarte\" className=\"col-span-3\" />\n          </div>\n        </div>\n        <SheetFooter>\n          <SheetClose asChild>\n            <Button type=\"submit\">Save changes</Button>\n          </SheetClose>\n        </SheetFooter>\n      </SheetContent>\n    </Sheet>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/button",
      "@/registry/default/ui/input",
      "@/registry/default/ui/label",
      "@/registry/default/ui/sheet"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/sheet-side.tsx": {
    "source": "\"use client\"\n\nimport { Button } from \"@/registry/default/ui/button\"\nimport { Input } from \"@/registry/default/ui/input\"\nimport { Label } from \"@/registry/default/ui/label\"\nimport {\n  Sheet,\n  SheetClose,\n  SheetContent,\n  SheetDescription,\n  SheetFooter,\n  SheetHeader,\n  SheetTitle,\n  SheetTrigger,\n} from \"@/registry/default/ui/sheet\"\n\nconst SHEET_SIDES = [\"top\", \"right\", \"bottom\", \"left\"] as const\n\ntype SheetSide = (typeof SHEET_SIDES)[number]\n\nexport default function SheetSide() {\n  return (\n    <div className=\"grid grid-cols-2 gap-2\">\n      {SHEET_SIDES.map((side) => (\n        <Sheet key={side}>\n          <SheetTrigger asChild>\n            <Button variant=\"secondary\">{side}</Button>\n          </SheetTrigger>\n          <SheetContent side={side}>\n            <SheetHeader>\n              <SheetTitle>Edit profile</SheetTitle>\n              <SheetDescription>\n                Make changes to your profile here. Click save when you're done.\n              </SheetDescription>\n            </SheetHeader>\n            <div className=\"grid gap-4 py-4\">\n              <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label htmlFor=\"name\" className=\"text-right\">\n                  Name\n                </Label>\n                <Input id=\"name\" value=\"Pedro Duarte\" className=\"col-span-3\" />\n              </div>\n              <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label htmlFor=\"username\" className=\"text-right\">\n                  Username\n                </Label>\n                <Input id=\"username\" value=\"@peduarte\" className=\"col-span-3\" />\n              </div>\n            </div>\n            <SheetFooter>\n              <SheetClose asChild>\n                <Button type=\"submit\">Save changes</Button>\n              </SheetClose>\n            </SheetFooter>\n          </SheetContent>\n        </Sheet>\n      ))}\n    </div>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/button",
      "@/registry/default/ui/input",
      "@/registry/default/ui/label",
      "@/registry/default/ui/sheet"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/show-more-demo.tsx": {
    "source": "import { useState } from \"react\"\n\nimport { ShowMore } from \"@/registry/default/ui/show-more\"\n\nexport default function ShowMoreDemo() {\n  const [expanded, setExpanded] = useState(false)\n\n  return <ShowMore expanded={expanded} onClick={() => setExpanded(!expanded)} />\n}\n",
    "dependencies": ["react", "@/registry/default/ui/show-more"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/skeleton-card.tsx": {
    "source": "import { Skeleton } from \"@/registry/default/ui/skeleton\"\n\nexport default function SkeletonCard() {\n  return (\n    <div className=\"flex flex-col space-y-3\">\n      <Skeleton className=\"h-[125px] w-[250px] rounded-xl\" />\n      <div className=\"space-y-2\">\n        <Skeleton className=\"h-4 w-[250px]\" />\n        <Skeleton className=\"h-4 w-[200px]\" />\n      </div>\n    </div>\n  )\n}\n",
    "dependencies": ["@/registry/default/ui/skeleton"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/skeleton-demo.tsx": {
    "source": "import { Skeleton } from \"@/registry/default/ui/skeleton\"\n\nexport default function SkeletonDemo() {\n  return (\n    <div className=\"flex items-center space-x-4\">\n      <Skeleton className=\"h-12 w-12 rounded-full\" />\n      <div className=\"space-y-2\">\n        <Skeleton className=\"h-4 w-[250px]\" />\n        <Skeleton className=\"h-4 w-[200px]\" />\n      </div>\n    </div>\n  )\n}\n",
    "dependencies": ["@/registry/default/ui/skeleton"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/snippet-callback.tsx": {
    "source": "import { Snippet } from \"@/registry/default/ui/snippet\"\n\nexport default function SnippetCallback() {\n  return (\n    <Snippet\n      onCopy={() => alert(\"You copied the text!\")}\n      text=\"npm init next-app\"\n      width=\"300px\"\n    />\n  )\n}\n",
    "dependencies": ["@/registry/default/ui/snippet"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/snippet-demo.tsx": {
    "source": "import { Snippet } from \"@/registry/default/ui/snippet\"\n\nexport default function SnippetDemo() {\n  return <Snippet text=\"npm init next-app\" width=\"300px\" />\n}\n",
    "dependencies": ["@/registry/default/ui/snippet"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/snippet-inverted.tsx": {
    "source": "import { Snippet } from \"@/registry/default/ui/snippet\"\n\nexport default function SnippetInverted() {\n  return <Snippet type=\"dark\" text=\"npm init next-app\" width=\"300px\" />\n}\n",
    "dependencies": ["@/registry/default/ui/snippet"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/snippet-multi-line.tsx": {
    "source": "import { Snippet } from \"@/registry/default/ui/snippet\"\n\nexport default function SnippetMultiLine() {\n  return <Snippet text={[\"cd project\", \"now\"]} width=\"100%\" />\n}\n",
    "dependencies": ["@/registry/default/ui/snippet"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/snippet-no-prompt.tsx": {
    "source": "import { Snippet } from \"@/registry/default/ui/snippet\"\n\nexport default function SnippetNoPrompt() {\n  return <Snippet prompt={false} text=\"npm init next-app\" width=\"300px\" />\n}\n",
    "dependencies": ["@/registry/default/ui/snippet"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/snippet-variants.tsx": {
    "source": "import { Snippet } from \"@/registry/default/ui/snippet\"\nimport { Stack } from \"@/registry/default/ui/stack\"\n\nexport default function SnippetVariants() {\n  return (\n    <Stack gap={3}>\n      <Snippet text=\"npm init next-app\" type=\"success\" width=\"300px\" />\n      <Snippet text=\"npm init next-app\" type=\"error\" width=\"300px\" />\n      <Snippet text=\"npm init next-app\" type=\"warning\" width=\"300px\" />\n    </Stack>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/snippet",
      "@/registry/default/ui/stack"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/sonner-demo.tsx": {
    "source": "import { toast } from \"sonner\"\n\nimport { Button } from \"@/registry/default/ui/button\"\n\nexport default function SonnerDemo() {\n  return (\n    <Button\n      variant=\"secondary\"\n      onClick={() =>\n        toast(\"Event has been created\", {\n          description: \"Sunday, December 03, 2023 at 9:00 AM\",\n          action: {\n            label: \"Undo\",\n            onClick: () => console.log(\"Undo\"),\n          },\n        })\n      }\n    >\n      Show Toast\n    </Button>\n  )\n}\n",
    "dependencies": ["sonner", "@/registry/default/ui/button"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/spinner-demo.tsx": {
    "source": "import { Spinner } from \"@/registry/default/ui/spinner\"\n\nexport default function SpinnerDemo() {\n  return <Spinner />\n}\n",
    "dependencies": ["@/registry/default/ui/spinner"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/spinner-size.tsx": {
    "source": "import { Spinner } from \"@/registry/default/ui/spinner\"\n\nexport default function SpinnerSize() {\n  return <Spinner size={30} />\n}\n",
    "dependencies": ["@/registry/default/ui/spinner"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/stack-demo.tsx": {
    "source": "import { Stack } from \"@/registry/default/ui/stack\"\n\nexport default function Component(): JSX.Element {\n  return (\n    <Stack gap={3}>\n      <div className=\"h-12 w-12 rounded-md bg-gray-1000\" />\n      <div className=\"h-12 w-12 rounded-md bg-gray-1000\" />\n      <div className=\"h-12 w-12 rounded-md bg-gray-1000\" />\n    </Stack>\n  )\n}\n",
    "dependencies": ["@/registry/default/ui/stack"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/stack-padding.tsx": {
    "source": "import { Stack } from \"@/registry/default/ui/stack\"\n\nexport default function Component(): JSX.Element {\n  return (\n    <Stack gap={3}>\n      <div className=\"h-12 w-12 rounded-md bg-gray-1000 p-2\">\n        <div className=\"h-full w-full rounded bg-gray-800\" />\n      </div>\n      <div className=\"h-12 w-12 rounded-md bg-gray-1000 p-2\">\n        <div className=\"h-full w-full rounded bg-gray-800\" />\n      </div>\n      <div className=\"h-12 w-12 rounded-md bg-gray-1000 p-2\">\n        <div className=\"h-full w-full rounded bg-gray-800\" />\n      </div>\n    </Stack>\n  )\n}\n",
    "dependencies": ["@/registry/default/ui/stack"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/stack-responsive.tsx": {
    "source": "import { Stack } from \"@/registry/default/ui/stack\"\n\nexport default function Component(): JSX.Element {\n  return (\n    <Stack\n      direction={{ sm: \"column\", lg: \"row\" }}\n      gap={{ sm: 2, md: 5, xl: 12 }}\n    >\n      <div className=\"h-12 w-12 rounded-md bg-gray-1000 p-2\" />\n      <div className=\"h-12 w-12 rounded-md bg-gray-1000 p-2\" />\n      <div className=\"h-12 w-12 rounded-md bg-gray-1000 p-2\" />\n    </Stack>\n  )\n}\n",
    "dependencies": ["@/registry/default/ui/stack"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/status-dot-demo.tsx": {
    "source": "import { Stack } from \"@/registry/default/ui/stack\"\nimport { StatusDot } from \"@/registry/default/ui/status-dot\"\n\nexport default function StatusDotDemo() {\n  return (\n    <Stack gap={6}>\n      <StatusDot state=\"QUEUED\" />\n      <StatusDot state=\"BUILDING\" />\n      <StatusDot state=\"ERROR\" />\n      <StatusDot state=\"READY\" />\n      <StatusDot state=\"CANCELED\" />\n    </Stack>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/stack",
      "@/registry/default/ui/status-dot"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/status-dot-label.tsx": {
    "source": "import { Stack } from \"@/registry/default/ui/stack\"\nimport { StatusDot } from \"@/registry/default/ui/status-dot\"\n\nexport default function Component() {\n  return (\n    <Stack gap={6}>\n      <StatusDot label state=\"QUEUED\" />\n      <StatusDot label state=\"BUILDING\" />\n      <StatusDot label state=\"ERROR\" />\n      <StatusDot label state=\"READY\" />\n      <StatusDot label state=\"CANCELED\" />\n    </Stack>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/stack",
      "@/registry/default/ui/status-dot"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/switch-demo.tsx": {
    "source": "import { Switch, SwitchControl } from \"@/registry/default/ui/switch\"\n\nexport default function SwitchDemo() {\n  return (\n    <div className=\"flex\">\n      <Switch name=\"default\">\n        <SwitchControl defaultChecked label=\"Source\" value=\"source\" />\n        <SwitchControl label=\"Output\" value=\"output\" />\n      </Switch>\n    </div>\n  )\n}\n",
    "dependencies": ["@/registry/default/ui/switch"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/switch-disabled.tsx": {
    "source": "import { Switch, SwitchControl } from \"@/registry/default/ui/switch\"\n\nexport default function SwitchDisabled() {\n  return (\n    <div className=\"flex\">\n      <Switch>\n        <SwitchControl defaultChecked disabled label=\"Source\" value=\"source\" />\n        <SwitchControl label=\"Output\" disabled value=\"output\" />\n      </Switch>\n    </div>\n  )\n}\n",
    "dependencies": ["@/registry/default/ui/switch"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/switch-full-width.tsx": {
    "source": "import { Switch, SwitchControl } from \"@/registry/default/ui/switch\"\n\nexport default function SwitchFullWidth() {\n  return (\n    <Switch name=\"default\">\n      <SwitchControl defaultChecked label=\"Source\" value=\"source\" />\n      <SwitchControl label=\"Width\" value=\"output\" />\n    </Switch>\n  )\n}\n",
    "dependencies": ["@/registry/default/ui/switch"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/switch-icon.tsx": {
    "source": "import { Switch, SwitchControl } from \"@/registry/default/ui/switch\"\n\nexport default function SwitchIcon() {\n  return (\n    <div className=\"flex\">\n      <Switch name=\"default\">\n        <SwitchControl defaultChecked disabled label=\"Source\" value=\"source\" />\n        <SwitchControl label=\"Icon\" disabled value=\"output\" />\n      </Switch>\n    </div>\n  )\n}\n",
    "dependencies": ["@/registry/default/ui/switch"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/switch-sizes.tsx": {
    "source": "import { Switch, SwitchControl } from \"@/registry/default/ui/switch\"\n\nexport default function SwitchSizes() {\n  return (\n    <div className=\"flex justify-between\">\n      <div className=\"flex flex-1 justify-start\">\n        <Switch size=\"small\">\n          <SwitchControl defaultChecked label=\"Source\" value=\"source\" />\n          <SwitchControl label=\"Sizes\" value=\"output\" />\n        </Switch>\n      </div>\n      <div className=\"flex flex-1 justify-start\">\n        <Switch size=\"medium\">\n          <SwitchControl defaultChecked label=\"Source\" value=\"source\" />\n          <SwitchControl label=\"Sizes\" value=\"output\" />\n        </Switch>\n      </div>\n      <div className=\"flex flex-1 justify-start\">\n        <Switch size=\"large\">\n          <SwitchControl label=\"Source\" value=\"source\" />\n          <SwitchControl label=\"Sizes\" value=\"list\" />\n        </Switch>\n      </div>\n    </div>\n  )\n}\n",
    "dependencies": ["@/registry/default/ui/switch"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/tabs-controlled.tsx": {
    "source": "import { useState } from \"react\"\n\nimport {\n  Tabs,\n  TabsContent,\n  TabsList,\n  TabsTrigger,\n} from \"@/registry/default/ui/tabs\"\n\nexport default function TabsControlled() {\n  const [selected, setSelected] = useState(\"apple\")\n\n  return (\n    <Tabs value={selected} onValueChange={setSelected}>\n      <TabsList>\n        <TabsTrigger value=\"apple\">Apple</TabsTrigger>\n        <TabsTrigger value=\"orange\">Orange</TabsTrigger>\n        <TabsTrigger value=\"mango\">Mango</TabsTrigger>\n      </TabsList>\n      <TabsContent value=\"apple\" className=\"py-4\">\n        Apple\n      </TabsContent>\n      <TabsContent value=\"orange\" className=\"py-4\">\n        Orange\n      </TabsContent>\n      <TabsContent value=\"mango\" className=\"py-4\">\n        Mango\n      </TabsContent>\n    </Tabs>\n  )\n}\n",
    "dependencies": ["react", "@/registry/default/ui/tabs"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/tabs-demo.tsx": {
    "source": "import {\n  Tabs,\n  TabsContent,\n  TabsList,\n  TabsTrigger,\n} from \"@/registry/default/ui/tabs\"\n\n// TODO fix some of the left over cases\nexport default function TabsDemo() {\n  return (\n    <Tabs defaultValue=\"apple\">\n      <TabsList>\n        <TabsTrigger value=\"apple\">Apple</TabsTrigger>\n        <TabsTrigger value=\"orange\">Orange</TabsTrigger>\n        <TabsTrigger value=\"mango\">Mango</TabsTrigger>\n      </TabsList>\n      <TabsContent value=\"apple\" className=\"py-4\">\n        Apple\n      </TabsContent>\n      <TabsContent value=\"orange\" className=\"py-4\">\n        Orange\n      </TabsContent>\n      <TabsContent value=\"mango\" className=\"py-4\">\n        Mango\n      </TabsContent>\n    </Tabs>\n  )\n}\n",
    "dependencies": ["@/registry/default/ui/tabs"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/tabs-disable-specific-tabs.tsx": {
    "source": "import {\n  Tabs,\n  TabsContent,\n  TabsList,\n  TabsTrigger,\n} from \"@/registry/default/ui/tabs\"\n\nexport default function TabsDisableSpecificTabs() {\n  return (\n    <Tabs defaultValue=\"apple\">\n      <TabsList>\n        <TabsTrigger value=\"apple\">Apple</TabsTrigger>\n        <TabsTrigger value=\"orange\">Orange</TabsTrigger>\n        <TabsTrigger value=\"mango\" disabled>\n          Mango\n        </TabsTrigger>\n      </TabsList>\n      <TabsContent value=\"apple\" className=\"py-4\">\n        Apple\n      </TabsContent>\n      <TabsContent value=\"orange\" className=\"py-4\">\n        Orange\n      </TabsContent>\n      <TabsContent value=\"mango\" className=\"py-4\">\n        Mango\n      </TabsContent>\n    </Tabs>\n  )\n}\n",
    "dependencies": ["@/registry/default/ui/tabs"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/text-align.tsx": {
    "source": "import { Text } from \"@/registry/default/ui/text\"\n\nexport default function TextAlign() {\n  return (\n    <div>\n      <Text align=\"center\">The Evil Rabbit jumps.</Text>\n\n      <Text align=\"left\">The Evil Rabbit jumps.</Text>\n\n      <Text align=\"right\">The Evil Rabbit jumps.</Text>\n    </div>\n  )\n}\n",
    "dependencies": ["@/registry/default/ui/text"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/text-clamp.tsx": {
    "source": "import { Text } from \"@/registry/default/ui/text\"\n\nexport default function TextClamp() {\n  return (\n    <div style={{ maxHeight: 100 }}>\n      <Text size={16} truncate={2}>\n        The Evil Rabbit jumps. The Evil Rabbit jumps. The Evil Rabbit jumps. The\n        Evil Rabbit jumps. The Evil Rabbit jumps. The Evil Rabbit jumps. The\n        Evil Rabbit jumps. The Evil Rabbit jumps. The Evil Rabbit jumps. The\n        Evil Rabbit jumps. The Evil Rabbit jumps.\n      </Text>\n    </div>\n  )\n}\n",
    "dependencies": ["@/registry/default/ui/text"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/text-color.tsx": {
    "source": "import { Text } from \"@/registry/default/ui/text\"\n\nexport default function TextColor() {\n  return (\n    <Text color=\"blue-900\" size={16}>\n      The Evil Rabbit jumps.\n    </Text>\n  )\n}\n",
    "dependencies": ["@/registry/default/ui/text"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/text-demo.tsx": {
    "source": "import { Stack } from \"@/registry/default/ui/stack\"\nimport { Text } from \"@/registry/default/ui/text\"\n\nexport default function TextDemo() {\n  return (\n    <Stack gap={2}>\n      <Text size={48}>The Evil Rabbit jumps.</Text>\n      <Text size={32}>The Evil Rabbit jumps.</Text>\n      <Text size={24}>The Evil Rabbit jumps.</Text>\n      <Text size={20}>The Evil Rabbit jumps.</Text>\n      <Text size={16}>The Evil Rabbit jumps.</Text>\n      <Text size={14}>The Evil Rabbit jumps.</Text>\n      <Text size={12}>The Evil Rabbit jumps.</Text>\n      <Text size={10}>The Evil Rabbit jumps.</Text>\n    </Stack>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/stack",
      "@/registry/default/ui/text"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/text-modifiers.tsx": {
    "source": "import { Text } from \"@/registry/default/ui/text\"\n\nexport default function TextModifiers() {\n  return (\n    <Text size={16}>\n      The <strong>Evil Rabbit</strong> <em>jumps</em>\n      over the <s>quick brown fox</s> <u>Lawful Meerkat</u>.\n    </Text>\n  )\n}\n",
    "dependencies": ["@/registry/default/ui/text"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/text-monospace.tsx": {
    "source": "import { Text } from \"@/registry/default/ui/text\"\n\nexport default function TextMonospace() {\n  return (\n    <div>\n      <Text>This is a sans-serif font.</Text>\n\n      <Text monospace>This is a monospace font.</Text>\n    </div>\n  )\n}\n",
    "dependencies": ["@/registry/default/ui/text"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/text-polymorphic.tsx": {
    "source": "import { Text } from \"@/registry/default/ui/text\"\n\nexport default function TextPolymorphic() {\n  return (\n    <Text size={32}>\n      {`<p>`} semantically, {`<h2>`} visually.\n    </Text>\n  )\n}\n",
    "dependencies": ["@/registry/default/ui/text"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/text-responsive.tsx": {
    "source": "import { Text } from \"../ui/text\"\n\nexport default function TextResponsive() {\n  return <Text size={{ sm: 24, md: 32, lg: 48 }}> The Evil Rabbit jumps.</Text>\n}\n",
    "dependencies": ["../ui/text"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/text-truncate.tsx": {
    "source": "import { Text } from \"@/registry/default/ui/text\"\n\nexport default function TextTruncate() {\n  return (\n    <div style={{ maxWidth: 100 }}>\n      <Text size={16} truncate>\n        The Evil Rabbit jumps.\n      </Text>\n    </div>\n  )\n}\n",
    "dependencies": ["@/registry/default/ui/text"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/text-variants.tsx": {
    "source": "import { Stack } from \"@/registry/default/ui/stack\"\nimport { Text } from \"@/registry/default/ui/text\"\n\nexport default function TextVariants() {\n  return (\n    <Stack gap={2}>\n      {(\n        [\n          \"heading-72\",\n          \"heading-64\",\n          \"heading-56\",\n          \"heading-48\",\n          \"heading-40\",\n          \"heading-32\",\n          \"heading-24\",\n          \"heading-20\",\n          \"heading-16\",\n          \"button-16\",\n          \"button-14\",\n          \"button-12\",\n          \"label-20\",\n          \"label-18\",\n          \"label-16\",\n          \"label-14\",\n          \"label-13\",\n          \"label-12\",\n          \"copy-24\",\n          \"copy-20\",\n          \"copy-18\",\n          \"copy-16\",\n          \"copy-14\",\n          \"copy-13\",\n        ] as const\n      ).map((variant) => {\n        return (\n          <Text key={variant} transform=\"capitalize\" size={variant}>\n            {variant.replace(\"-\", \" \")}\n          </Text>\n        )\n      })}\n    </Stack>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/stack",
      "@/registry/default/ui/text"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/textarea-demo.tsx": {
    "source": "import { Textarea } from \"@/registry/default/ui/textarea\"\n\nexport default function TextareaDemo() {\n  return <Textarea placeholder=\"Type your message here.\" />\n}\n",
    "dependencies": ["@/registry/default/ui/textarea"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/textarea-disabled.tsx": {
    "source": "import { Textarea } from \"@/registry/default/ui/textarea\"\n\nexport default function TextareaDisabled() {\n  return <Textarea placeholder=\"Type your message here.\" disabled />\n}\n",
    "dependencies": ["@/registry/default/ui/textarea"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/textarea-form.tsx": {
    "source": "\"use client\"\n\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport { useForm } from \"react-hook-form\"\nimport { z } from \"zod\"\n\nimport { Button } from \"@/registry/default/ui/button\"\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/registry/default/ui/form\"\nimport { Textarea } from \"@/registry/default/ui/textarea\"\nimport { toast } from \"@/registry/default/ui/use-toast\"\n\nconst FormSchema = z.object({\n  bio: z\n    .string()\n    .min(10, {\n      message: \"Bio must be at least 10 characters.\",\n    })\n    .max(160, {\n      message: \"Bio must not be longer than 30 characters.\",\n    }),\n})\n\nexport default function TextareaForm() {\n  const form = useForm<z.infer<typeof FormSchema>>({\n    resolver: zodResolver(FormSchema),\n  })\n\n  function onSubmit(data: z.infer<typeof FormSchema>) {\n    toast({\n      title: \"You submitted the following values:\",\n      description: (\n        <pre className=\"mt-2 w-[340px] rounded-md bg-slate-950 p-4\">\n          <code className=\"text-white\">{JSON.stringify(data, null, 2)}</code>\n        </pre>\n      ),\n    })\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"w-2/3 space-y-6\">\n        <FormField\n          control={form.control}\n          name=\"bio\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Bio</FormLabel>\n              <FormControl>\n                <Textarea\n                  placeholder=\"Tell us a little bit about yourself\"\n                  className=\"resize-none\"\n                  {...field}\n                />\n              </FormControl>\n              <FormDescription>\n                You can <span>@mention</span> other users and organizations.\n              </FormDescription>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <Button type=\"submit\">Submit</Button>\n      </form>\n    </Form>\n  )\n}\n",
    "dependencies": [
      "@hookform/resolvers/zod",
      "react-hook-form",
      "zod",
      "@/registry/default/ui/button",
      "@/registry/default/ui/form",
      "@/registry/default/ui/textarea",
      "@/registry/default/ui/use-toast"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/textarea-with-button.tsx": {
    "source": "import { Button } from \"@/registry/default/ui/button\"\nimport { Textarea } from \"@/registry/default/ui/textarea\"\n\nexport default function TextareaWithButton() {\n  return (\n    <div className=\"grid w-full gap-2\">\n      <Textarea placeholder=\"Type your message here.\" />\n      <Button>Send message</Button>\n    </div>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/button",
      "@/registry/default/ui/textarea"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/textarea-with-label.tsx": {
    "source": "import { Label } from \"@/registry/default/ui/label\"\nimport { Textarea } from \"@/registry/default/ui/textarea\"\n\nexport default function TextareaWithLabel() {\n  return (\n    <div className=\"grid w-full gap-1.5\">\n      <Label htmlFor=\"message\">Your message</Label>\n      <Textarea placeholder=\"Type your message here.\" id=\"message\" />\n    </div>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/label",
      "@/registry/default/ui/textarea"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/textarea-with-text.tsx": {
    "source": "import { Label } from \"@/registry/default/ui/label\"\nimport { Textarea } from \"@/registry/default/ui/textarea\"\n\nexport default function TextareaWithText() {\n  return (\n    <div className=\"grid w-full gap-1.5\">\n      <Label htmlFor=\"message-2\">Your Message</Label>\n      <Textarea placeholder=\"Type your message here.\" id=\"message-2\" />\n      <p className=\"text-sm text-muted-foreground\">\n        Your message will be copied to the support team.\n      </p>\n    </div>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/label",
      "@/registry/default/ui/textarea"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/toast-demo.tsx": {
    "source": "\"use client\"\n\nimport { Button } from \"@/registry/default/ui/button\"\nimport { ToastAction } from \"@/registry/default/ui/toast\"\nimport { useToast } from \"@/registry/default/ui/use-toast\"\n\nexport default function ToastDemo() {\n  const { toast } = useToast()\n\n  return (\n    <Button\n      variant=\"secondary\"\n      onClick={() => {\n        toast({\n          title: \"Scheduled: Catch up \",\n          description: \"Friday, February 10, 2023 at 5:57 PM\",\n          action: (\n            <ToastAction altText=\"Goto schedule to undo\">Undo</ToastAction>\n          ),\n        })\n      }}\n    >\n      Add to calendar\n    </Button>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/button",
      "@/registry/default/ui/toast",
      "@/registry/default/ui/use-toast"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/toast-destructive.tsx": {
    "source": "\"use client\"\n\nimport { Button } from \"@/registry/default/ui/button\"\nimport { ToastAction } from \"@/registry/default/ui/toast\"\nimport { useToast } from \"@/registry/default/ui/use-toast\"\n\nexport default function ToastDestructive() {\n  const { toast } = useToast()\n\n  return (\n    <Button\n      variant=\"secondary\"\n      onClick={() => {\n        toast({\n          variant: \"destructive\",\n          title: \"Uh oh! Something went wrong.\",\n          description: \"There was a problem with your request.\",\n          action: <ToastAction altText=\"Try again\">Try again</ToastAction>,\n        })\n      }}\n    >\n      Show Toast\n    </Button>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/button",
      "@/registry/default/ui/toast",
      "@/registry/default/ui/use-toast"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/toast-simple.tsx": {
    "source": "\"use client\"\n\nimport { Button } from \"@/registry/default/ui/button\"\nimport { useToast } from \"@/registry/default/ui/use-toast\"\n\nexport default function ToastSimple() {\n  const { toast } = useToast()\n\n  return (\n    <Button\n      variant=\"secondary\"\n      onClick={() => {\n        toast({\n          description: \"Your message has been sent.\",\n        })\n      }}\n    >\n      Show Toast\n    </Button>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/button",
      "@/registry/default/ui/use-toast"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/toast-with-action.tsx": {
    "source": "\"use client\"\n\nimport { Button } from \"@/registry/default/ui/button\"\nimport { ToastAction } from \"@/registry/default/ui/toast\"\nimport { useToast } from \"@/registry/default/ui/use-toast\"\n\nexport default function ToastWithAction() {\n  const { toast } = useToast()\n\n  return (\n    <Button\n      variant=\"secondary\"\n      onClick={() => {\n        toast({\n          title: \"Uh oh! Something went wrong.\",\n          description: \"There was a problem with your request.\",\n          action: <ToastAction altText=\"Try again\">Try again</ToastAction>,\n        })\n      }}\n    >\n      Show Toast\n    </Button>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/button",
      "@/registry/default/ui/toast",
      "@/registry/default/ui/use-toast"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/toast-with-title.tsx": {
    "source": "\"use client\"\n\nimport { Button } from \"@/registry/default/ui/button\"\nimport { useToast } from \"@/registry/default/ui/use-toast\"\n\nexport default function ToastWithTitle() {\n  const { toast } = useToast()\n\n  return (\n    <Button\n      variant=\"secondary\"\n      onClick={() => {\n        toast({\n          title: \"Uh oh! Something went wrong.\",\n          description: \"There was a problem with your request.\",\n        })\n      }}\n    >\n      Show Toast\n    </Button>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/button",
      "@/registry/default/ui/use-toast"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/toggle-demo.tsx": {
    "source": "import { useState } from \"react\"\n\nimport { Toggle } from \"@/registry/default/ui/toggle\"\n\nexport default function ToggleDemo() {\n  const [checked, setChecked] = useState(false)\n  const [checked2, setChecked2] = useState(true)\n\n  return (\n    <div className=\"flex flex-col gap-6\">\n      <div className=\"\">\n        <Toggle\n          checked={checked}\n          onCheckedChange={(): void => setChecked(!checked)}\n        />\n      </div>\n      <div className=\"\">\n        <Toggle\n          checked={checked2}\n          onCheckedChange={(): void => setChecked2(!checked2)}\n        />\n      </div>\n    </div>\n  )\n}\n",
    "dependencies": ["react", "@/registry/default/ui/toggle"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/toggle-disabled.tsx": {
    "source": "import { Toggle } from \"@/registry/default/ui/toggle\"\n\nexport default function ToggleDemo() {\n  return (\n    <div className=\"flex flex-col gap-6\">\n      <Toggle checked={false} disabled />\n      <Toggle checked disabled />\n    </div>\n  )\n}\n",
    "dependencies": ["@/registry/default/ui/toggle"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/toggle-size.tsx": {
    "source": "import { Toggle } from \"@/registry/default/ui/toggle\"\n\nexport default function ToggleDemo() {\n  return (\n    <div className=\"flex items-start\">\n      <div className=\"flex-1\">\n        <Toggle />\n      </div>\n      <div className=\"flex-1\">\n        <Toggle size=\"large\" />\n      </div>\n    </div>\n  )\n}\n",
    "dependencies": ["@/registry/default/ui/toggle"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/tooltip-box-align.tsx": {
    "source": "import { Button } from \"@/registry/default/ui/button\"\nimport { Tooltip } from \"@/registry/default/ui/tooltip\"\n\nexport default function TooltipBoxAlignDemo() {\n  return (\n    <Tooltip text=\"Add to library\">\n      <Button variant=\"secondary\">Box</Button>\n    </Tooltip>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/button",
      "@/registry/default/ui/tooltip"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/tooltip-components.tsx": {
    "source": "import { Button } from \"@/registry/default/ui/button\"\nimport { Tooltip } from \"@/registry/default/ui/tooltip\"\n\nexport default function TooltipBoxAlignDemo() {\n  return (\n    <Tooltip text=\"Add to library\">\n      <Button variant=\"secondary\">Box</Button>\n    </Tooltip>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/button",
      "@/registry/default/ui/tooltip"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/tooltip-custom-content.tsx": {
    "source": "import { Button } from \"@/registry/default/ui/button\"\nimport { Tooltip } from \"@/registry/default/ui/tooltip\"\n\nexport default function TooltipBoxAlignDemo() {\n  return (\n    <Tooltip text=\"Add to library\">\n      <Button variant=\"secondary\">Box</Button>\n    </Tooltip>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/button",
      "@/registry/default/ui/tooltip"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/tooltip-custom-type.tsx": {
    "source": "import { Button } from \"@/registry/default/ui/button\"\nimport { Tooltip } from \"@/registry/default/ui/tooltip\"\n\nexport default function TooltipBoxAlignDemo() {\n  return (\n    <Tooltip text=\"Add to library\">\n      <Button variant=\"secondary\">Box</Button>\n    </Tooltip>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/button",
      "@/registry/default/ui/tooltip"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/tooltip-demo.tsx": {
    "source": "import { Button } from \"@/registry/default/ui/button\"\nimport { Tooltip } from \"@/registry/default/ui/tooltip\"\n\nexport default function TooltipDemo() {\n  return (\n    <Tooltip text=\"Add to library\">\n      <Button variant=\"secondary\">Hover</Button>\n    </Tooltip>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/button",
      "@/registry/default/ui/tooltip"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/tooltip-no-delay.tsx": {
    "source": "import { Button } from \"@/registry/default/ui/button\"\nimport { Tooltip } from \"@/registry/default/ui/tooltip\"\n\nexport default function TooltipNoDelayDemo() {\n  return (\n    <Tooltip text=\"Add to library\">\n      <Button variant=\"secondary\">No delay</Button>\n    </Tooltip>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/button",
      "@/registry/default/ui/tooltip"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/example/tooltip-other.tsx": {
    "source": "import { Button } from \"@/registry/default/ui/button\"\nimport { Tooltip } from \"@/registry/default/ui/tooltip\"\n\nexport default function TooltipBoxAlignDemo() {\n  return (\n    <Tooltip text=\"Add to library\">\n      <Button variant=\"secondary\">Box</Button>\n    </Tooltip>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/button",
      "@/registry/default/ui/tooltip"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/alert.tsx": {
    "source": "import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background-200 text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n",
    "dependencies": ["react", "class-variance-authority", "@/lib/utils"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/aspect-ratio.tsx": {
    "source": "\"use client\"\n\nimport * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n",
    "dependencies": ["@radix-ui/react-aspect-ratio"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/avatar.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n",
    "dependencies": ["react", "@radix-ui/react-avatar", "@/lib/utils"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/badge.tsx": {
    "source": "import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport type { LucideIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-full capitalize whitespace-nowrap\",\n  {\n    variants: {\n      variant: {\n        gray: \"bg-gray-700 text-white\",\n        \"gray-subtle\": \"bg-gray-200 text-gray-1000\",\n        blue: \"bg-blue-700 text-white\",\n        \"blue-subtle\": \"bg-blue-200 text-blue-900\",\n        purple: \"bg-purple-700 text-white\",\n        \"purple-subtle\": \"bg-purple-200 text-purple-900\",\n        amber: \"bg-amber-700 text-black\",\n        \"amber-subtle\": \"bg-amber-200 text-amber-900\",\n        red: \"bg-red-700 text-white\",\n        \"red-subtle\": \"bg-red-200 text-red-900\",\n        pink: \"bg-pink-700 text-white\",\n        \"pink-subtle\": \"bg-pink-300 text-pink-900\",\n        green: \"bg-green-700 text-white\",\n        \"green-subtle\": \"bg-green-200 text-green-900\",\n        teal: \"bg-teal-700 text-white\",\n        \"teal-subtle\": \"bg-teal-300 text-teal-900\",\n        // TODO revisit this pink color\n        trial: \"bg-gradient-to-br from-blue-700 to-[#f81be6] text-white\",\n        turbo: \"bg-gradient-to-br from-[#ff1e56] to-[#0096ff] text-white\",\n      },\n      size: {\n        sm: \"px-1.5 h-5 text-[11px] gap-0.5 [&_svg]:w-[11px] [&_svg]:h-[11px]\",\n        md: \"px-2.5 h-6 text-xs gap-1 [&_svg]:w-[14px] [&_svg]:h-[14px]\",\n        lg: \"px-3 h-8 text-sm gap-1.5 [&_svg]:w-4 [&_svg]:h-4\",\n      },\n    },\n    defaultVariants: {\n      variant: \"gray\",\n      size: \"md\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {\n  icon?: React.ReactNode\n}\n\n// TODO add icons\nfunction Badge({\n  className,\n  variant,\n  size,\n  icon,\n  children,\n  ...props\n}: BadgeProps) {\n  return (\n    <span\n      className={cn(badgeVariants({ variant, size }), className)}\n      {...props}\n    >\n      {icon && <span>{icon}</span>}\n      {children}\n    </span>\n  )\n}\n\nexport { Badge, badgeVariants }\n",
    "dependencies": [
      "react",
      "class-variance-authority",
      "lucide-react",
      "@/lib/utils"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/button.tsx": {
    "source": "import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nimport { Spinner } from \"./spinner\"\n\nconst buttonVariants = cva(\n  \"transition-colors select-none font-medium border border-transparent flex justify-center items-center gap-0.5 max-w-full disabled:bg-gray-100 disabled:text-gray-700 disabled:border-gray-400 disabled:cursor-not-allowed\",\n  {\n    variants: {\n      variant: {\n        // Vercel has some of these hard coded values in the specs, not sure why tbh. Could be worth looking at some point\n        default: \"bg-gray-1000 text-background-100 hover:bg-[#ccc]\",\n        secondary:\n          \"bg-background-100 border-gray-alpha-400 text-gray-1000 hover:bg-gray-alpha-200\",\n        tertiary:\n          \"bg-transparent border-transparent text-gray-1000 hover:bg-gray-alpha-200\",\n        error:\n          \"bg-red-800 border-red-800 hover:bg-red-900 hover:border-red-900\",\n        warning:\n          \"text-[#0a0a0a] bg-amber-800 border-amber-800 hover:bg-[#d27504] hover:border-[#d27504\",\n      },\n      size: {\n        tiny: \"h-6 px-0.5 rounded-[4px] text-xs leading-4\",\n        sm: \"h-8 px-1.5 rounded-md text-sm leading-5\",\n        small: \"h-8 px-1.5 rounded-md text-sm leading-5\",\n        medium: \"h-10 px-2.5 rounded-md text-sm leading-5\",\n        md: \"h-10 px-2.5 rounded-md text-sm leading-5\",\n        large: \"h-12 px-[14px] rounded-lg text-base leading-6\",\n        lg: \"h-12 px-[14px] rounded-lg text-base leading-6\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"medium\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends Omit<React.ButtonHTMLAttributes<HTMLButtonElement>, \"prefix\">,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n  shape?: \"square\" | \"circle\" | \"rounded\"\n  svgOnly?: boolean\n  prefix?: React.ReactNode\n  suffix?: React.ReactNode\n  shadow?: boolean\n  loading?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  (\n    {\n      className,\n      variant,\n      size,\n      asChild = false,\n      shape,\n      svgOnly,\n      prefix,\n      suffix,\n      shadow,\n      loading,\n      children,\n      disabled,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(\n          buttonVariants({ variant, size, className }),\n          (shape === \"rounded\" || shape === \"circle\") && \"rounded-full\",\n          svgOnly && \"aspect-square\",\n          shadow && \"shadow-sm\"\n        )}\n        ref={ref}\n        disabled={disabled || loading}\n        {...props}\n      >\n        {loading ? <Spinner size={size === \"large\" ? 24 : 16} /> : prefix}\n        <span className=\"text-ellipsis px-1.5\">{children}</span>\n        {loading ? null : suffix}\n      </Comp>\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n",
    "dependencies": [
      "react",
      "@radix-ui/react-slot",
      "class-variance-authority",
      "@/lib/utils",
      "./spinner"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/calendar.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/registry/default/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"secondary\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"secondary\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground opacity-50 aria-selected:bg-accent/50 aria-selected:text-muted-foreground aria-selected:opacity-30\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ ...props }) => <ChevronLeft className=\"h-4 w-4\" />,\n        IconRight: ({ ...props }) => <ChevronRight className=\"h-4 w-4\" />,\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n",
    "dependencies": [
      "react",
      "lucide-react",
      "react-day-picker",
      "@/lib/utils",
      "@/registry/default/ui/button"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/card.tsx": {
    "source": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n",
    "dependencies": ["react", "@/lib/utils"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/checkbox.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"ring-offset-background peer h-4 w-4 shrink-0 rounded-sm border border-primary focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n",
    "dependencies": [
      "react",
      "@radix-ui/react-checkbox",
      "lucide-react",
      "@/lib/utils"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/collapse.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst CollapseGroup = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Root>,\n  { children: React.ReactNode }\n>(({ children }, ref) => (\n  <AccordionPrimitive.Root ref={ref} className=\"w-full\" type=\"single\">\n    {children}\n  </AccordionPrimitive.Root>\n))\nCollapseGroup.displayName = \"CollapseGroup\"\n\nconst Collapse = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item> & {\n    title: string\n  }\n>(({ className, title, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  >\n    <AccordionPrimitive.Header className=\"flex\">\n      <AccordionPrimitive.Trigger\n        className={cn(\n          \"flex flex-1 items-center justify-between py-6 text-2xl font-semibold transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n          className\n        )}\n      >\n        {title}\n        <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n      </AccordionPrimitive.Trigger>\n    </AccordionPrimitive.Header>\n    {/* <AccordionPrimitive.Content className=\"overflow-hidden text-sm transition-[height]\"> */}\n    <AccordionPrimitive.Content className=\"mb-4 overflow-hidden text-base data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\">\n      {props.children}\n    </AccordionPrimitive.Content>\n  </AccordionPrimitive.Item>\n))\nCollapse.displayName = \"Collapse\"\n\nexport { CollapseGroup, Collapse }\n",
    "dependencies": [
      "react",
      "@radix-ui/react-accordion",
      "lucide-react",
      "@/lib/utils"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/collapsible.tsx": {
    "source": "\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n",
    "dependencies": ["@radix-ui/react-collapsible"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/command.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/registry/default/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\ninterface CommandDialogProps extends DialogProps {}\n\nconst CommandDialog = ({ children, ...props }: CommandDialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none aria-selected:bg-accent aria-selected:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n",
    "dependencies": [
      "react",
      "@radix-ui/react-dialog",
      "cmdk",
      "lucide-react",
      "@/lib/utils",
      "@/registry/default/ui/dialog"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/context-menu.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    type?: \"normal\" | \"error\"\n    inset?: boolean\n  }\n>(({ className, type, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 cursor-pointer select-none items-center rounded-md px-2 text-sm text-gray-1000 outline-none transition-colors focus:bg-gray-alpha-100 data-[disabled]:pointer-events-none data-[disabled]:text-gray-700\",\n      type === \"error\" && \"text-red-900\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"font-sm z-50 min-w-[150px] overflow-hidden rounded-xl bg-background-100 p-2 text-popover-foreground shadow-menu data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"font-sm z-50 min-w-[150px] overflow-hidden rounded-xl bg-background-100 p-2 text-popover-foreground shadow-menu data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n    type?: \"normal\" | \"error\"\n  }\n>(({ className, type, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 cursor-pointer select-none items-center rounded-md px-2 text-sm text-gray-1000 outline-none transition-colors focus:bg-gray-alpha-100 data-[disabled]:pointer-events-none data-[disabled]:text-gray-700\",\n      type === \"error\" && \"text-red-900\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n",
    "dependencies": [
      "react",
      "@radix-ui/react-context-menu",
      "lucide-react",
      "@/lib/utils"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/dialog.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background-200 p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"ring-offset-background absolute right-4 top-4 rounded-sm opacity-70 transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n",
    "dependencies": [
      "react",
      "@radix-ui/react-dialog",
      "lucide-react",
      "@/lib/utils"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/drawer.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background-200\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n",
    "dependencies": ["react", "vaul", "@/lib/utils"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/form.tsx": {
    "source": "import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  ControllerProps,\n  FieldPath,\n  FieldValues,\n  FormProvider,\n  useFormContext,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/registry/default/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message) : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n",
    "dependencies": [
      "react",
      "@radix-ui/react-label",
      "@radix-ui/react-slot",
      "react-hook-form",
      "@/lib/utils",
      "@/registry/default/ui/label"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/gauge.tsx": {
    "source": "import React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst gaugeVariants = cva(\"flex justify-center items-center relative\", {\n  variants: {\n    size: {\n      tiny: \"[--circle-size-d:20px] [--stroke-width:15] [--text-size:0px] [--text-weight:0]\",\n      small:\n        \"[--circle-size-d:32px] [--stroke-width:10] [--text-size:11px] [--text-weight:500]\",\n      medium:\n        \"[--circle-size-d:64px] [--stroke-width:10] [--text-size:18px] [--text-weight:500]\",\n      large:\n        \"[--circle-size-d:128px] [--stroke-width:10] [--text-size:32px] [--text-weight:600]\",\n    },\n  },\n  defaultVariants: {\n    size: \"medium\",\n  },\n})\n\nconst sizes = {\n  tiny: { circle: 20 },\n  small: { circle: 32 },\n  medium: { circle: 64 },\n  large: { circle: 128 },\n}\ninterface GaugeProps {\n  size: keyof typeof sizes\n  value: number\n  showValue?: boolean\n  colors?:\n    | {\n        primary: string\n        secondary: string\n      }\n    | Partial<\n        Record<\n          | \"0\"\n          | \"10\"\n          | \"20\"\n          | \"30\"\n          | \"40\"\n          | \"50\"\n          | \"60\"\n          | \"70\"\n          | \"80\"\n          | \"90\"\n          | \"100\",\n          string\n        >\n      >\n}\n\n// TODO fix the 0 value case\nconst Gauge: React.FC<GaugeProps> = ({\n  size = \"medium\",\n  value,\n  showValue,\n  colors,\n}) => {\n  const circleSize = 100\n\n  const secondaryColor =\n    colors && \"secondary\" in colors\n      ? `hsl(${colors.secondary})`\n      : \"var(--ds-gray-alpha-400)\"\n  const primaryColor = colors\n    ? \"primary\" in colors\n      ? `hsl(${colors.primary})`\n      : colors[`${Math.round(value / 10) * 10}` as keyof typeof colors]\n        ? `hsl(${\n            colors[`${Math.round(value / 10) * 10}` as keyof typeof colors]\n          })`\n        : `hsl(${\n            colors[\n              Object.keys(colors).reduce((prev, curr) =>\n                Math.abs(Number(curr) - value) < Math.abs(Number(prev) - value)\n                  ? curr\n                  : prev\n              ) as keyof typeof colors\n            ]\n          })`\n    : value >= 68\n      ? \"hsl(var(--ds-green-700))\"\n      : value >= 34\n        ? \"hsl(var(--ds-amber-700))\"\n        : \"hsl(var(--ds-red-800))\"\n\n  return (\n    <div\n      className={gaugeVariants({ size })}\n      style={{\n        // @ts-ignore\n        \"--circle-size\": `${100}px`,\n        \"--circumference\": `${2827433388230814}px`,\n        \"--percent-to-px\": `${2.827433388230814}px`,\n        \"--gap-percent\": `${5}`,\n        \"--offset-factor\": `${0}`,\n        \"--secondary-color\": `${secondaryColor}`,\n        \"--primary-color\": `${primaryColor}`,\n      }}\n    >\n      <svg\n        fill=\"none\"\n        viewBox=\"0 0 100 100\"\n        height={sizes[size].circle}\n        width={sizes[size].circle}\n        strokeWidth=\"2\"\n      >\n        <circle\n          cx=\"50\"\n          cy=\"50\"\n          r=\"45\"\n          strokeWidth=\"10\"\n          strokeDashoffset=\"0\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          className={cn(\n            \"stroke-[var(--secondary-color)] transition-all duration-1000 ease-in-out\",\n            \"[stroke-dasharray:calc(var(--stroke-percent)_*_var(--percent-to-px))_var(--circumference)]\",\n            \"[transition-property:stroke-dasharray,tranform]\",\n            \"[transform:rotate(calc(1turn_-_90deg_-(var(--gap-percent)_*_var(--percent-to-deg)_*_var(--offset-factor-secondary))))_scaleY(-1)]\",\n            \"[transform-origin:calc(var(--circle-size)_/_2)_calc(var(--circle-size)_/_2)]\"\n          )}\n          style={{\n            opacity: 1,\n            // @ts-ignore\n            \"--stroke-percent\": Math.max(0, 100 - value - 10),\n            \"--percent-to-deg\": \"3.6deg\",\n            \"--offset-factor-secondary\": \"calc(1 - var(--offset-factor))\",\n          }}\n        ></circle>\n        <circle\n          cx=\"50\"\n          cy=\"50\"\n          r=\"45\"\n          strokeWidth=\"10\"\n          strokeDashoffset=\"0\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          data-geist-progress-circle-fg=\"\"\n          className={cn(\n            \"stroke-[var(--primary-color)] transition-all duration-1000 ease-in-out\",\n            \"[stroke-dasharray:calc(var(--stroke-percent)_*_var(--percent-to-px))_var(--circumference)]\",\n            \"[transition-property:stroke-dasharray,tranform]\",\n            \"[transform:rotate(calc(-90deg_+_var(--gap-percent)_*_var(--offset-factor)_*_var(--percent-to-deg)))]\",\n            \"[transform-origin:calc(var(--circle-size)_/_2)_calc(var(--circle-size)_/_2)]\"\n          )}\n          style={{\n            opacity: 1,\n            // @ts-ignore\n            \"--stroke-percent\": value,\n            \"--percent-to-deg\": \"3.6deg\",\n          }}\n        ></circle>\n      </svg>\n      {showValue && size !== \"tiny\" && (\n        <div className=\"absolute text-center\">\n          <p className=\"[font-size:var(--text-size)] [font-weight:var(--text-weight)]\">\n            {value}\n          </p>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport { Gauge }\n",
    "dependencies": ["react", "class-variance-authority", "@/lib/utils"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/hover-card.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n",
    "dependencies": ["react", "@radix-ui/react-hover-card", "@/lib/utils"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/input.tsx": {
    "source": "import { forwardRef, useId } from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst inputVariants = cva(\n  \"border flex border-gray-alpha-400 overflow-hidden bg-background-100 relative focus-within:shadow-input-ring transition-shadow duration-150\",\n  {\n    variants: {\n      size: {\n        small: \"h-8 text-sm rounded-md [--icon-size:14px]\",\n        medium: \"h-10 text-sm rounded-md [--icon-size:16px]\",\n        large: \"h-12 text-base rounded-lg [--icon-size:18px]\",\n      },\n    },\n    defaultVariants: {\n      size: \"medium\",\n    },\n  }\n)\n\nexport interface InputProps\n  extends Omit<React.InputHTMLAttributes<HTMLInputElement>, \"size\" | \"prefix\">,\n    VariantProps<typeof inputVariants> {\n  prefix?: string | React.ReactNode\n  suffix?: string | React.ReactNode\n  prefixStyling?: boolean\n  suffixStyling?: boolean\n  label?: string\n}\n\nconst TextBox = ({\n  prefixStyling,\n  children,\n}: {\n  prefixStyling: boolean\n  children: React.ReactNode\n}) => {\n  return (\n    <span\n      className={cn(\n        \"flex shrink-0 items-center px-3 text-gray-700 [&>svg]:h-[var(--icon-size)] [&>svg]:w-[var(--icon-size)]\",\n        prefixStyling && \"bg-background-200\"\n      )}\n    >\n      {children}\n    </span>\n  )\n}\n\nconst Input = forwardRef<HTMLInputElement, InputProps>(\n  (\n    {\n      className,\n      type,\n      size,\n      label,\n      suffix,\n      prefix,\n      prefixStyling = true,\n      suffixStyling = true,\n      ...props\n    },\n    ref\n  ) => {\n    const id = useId()\n\n    const input = (\n      <div className={cn(inputVariants({ size, className }))}>\n        {prefix && (\n          <span\n            className={cn(\n              \"flex shrink-0 items-center px-3 text-gray-700 [&>svg]:h-[var(--icon-size)] [&>svg]:w-[var(--icon-size)]\",\n              prefixStyling && \"bg-background-200\"\n            )}\n          >\n            {prefix}\n          </span>\n        )}\n        <input\n          id={id}\n          type={type}\n          className={cn(\n            \"bg-transparent outline-none placeholder:text-gray-700 disabled:cursor-not-allowed disabled:bg-background-200 disabled:text-gray-700 disabled:placeholder:text-gray-500\",\n            ((prefix && prefixStyling) || !prefix) && \"pl-3\",\n            ((suffix && suffixStyling) || !suffix) && \"pr-3\"\n          )}\n          ref={ref}\n          {...props}\n        />\n        {suffix && (\n          <span\n            className={cn(\n              \"flex shrink-0 items-center px-3 text-gray-700 [&>svg]:h-[var(--icon-size)] [&>svg]:w-[var(--icon-size)]\",\n              suffixStyling && \"bg-background-200\"\n            )}\n          >\n            {suffix}\n          </span>\n        )}\n      </div>\n    )\n\n    if (!label) return input\n\n    return (\n      <label htmlFor={id}>\n        <div className=\"mb-2 text-xs text-gray-900\">{label}</div>\n        {input}\n      </label>\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n",
    "dependencies": ["react", "class-variance-authority", "@/lib/utils"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/kbd.tsx": {
    "source": "import React from \"react\"\nimport { cva } from \"class-variance-authority\"\n\nconst kbdVariants = cva(\n  \"text-gray-1000 text-sm bg-background-100 text-center space-x-1 inline-block rounded ml-1 shadow-border\",\n  {\n    variants: {\n      size: {\n        small: \"min-w-5 px-1\",\n        medium: \"min-w-6 min-h-6 px-1.5\",\n      },\n    },\n    defaultVariants: {\n      size: \"medium\",\n    },\n  }\n)\n\ninterface KbdProps {\n  meta?: boolean\n  shift?: boolean\n  alt?: boolean\n  ctrl?: boolean\n  small?: boolean\n  children?: React.ReactNode\n}\n\n// TODO fix the font so that this looks good\nconst Kbd: React.FC<KbdProps> = ({\n  meta,\n  shift,\n  alt,\n  ctrl,\n  small,\n  children,\n}) => {\n  return (\n    <kbd className={kbdVariants({ size: small ? \"small\" : \"medium\" })}>\n      {meta && <span>⌘</span>}\n      {shift && <span>⇧</span>}\n      {alt && <span>⌥</span>}\n      {ctrl && <span>⌃</span>}\n\n      {children && <span>{children}</span>}\n    </kbd>\n  )\n}\n\nexport { Kbd }\n",
    "dependencies": ["react", "class-variance-authority"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/label.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n",
    "dependencies": [
      "react",
      "@radix-ui/react-label",
      "class-variance-authority",
      "@/lib/utils"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/loading-dots.tsx": {
    "source": "import React from \"react\"\n\ninterface LoadingDotsProps {\n  size?: number\n  children?: React.ReactNode\n}\n\nconst LoadingDots: React.FC<LoadingDotsProps> = ({ size = 2, children }) => {\n  return (\n    <span\n      className=\"inline-flex items-center\"\n      style={{\n        // @ts-ignore\n        \"--loading-dots-size\": `${size}px`,\n      }}\n    >\n      {children && <span className=\"mr-3 inline-block\">{children}</span>}\n      <span className=\"mx-[1px] inline-block h-[var(--loading-dots-size)] w-[var(--loading-dots-size)] animate-loading-dots-blink rounded-full bg-gray-900\"></span>\n      <span className=\"mx-[1px] inline-block h-[var(--loading-dots-size)] w-[var(--loading-dots-size)] animate-loading-dots-blink rounded-full bg-gray-900 delay-200\"></span>\n      <span className=\"mx-[1px] inline-block h-[var(--loading-dots-size)] w-[var(--loading-dots-size)] animate-loading-dots-blink rounded-full bg-gray-900 [animation-delay:400ms]\"></span>\n    </span>\n  )\n}\n\nexport { LoadingDots }\n",
    "dependencies": ["react"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/menu.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\nimport Link from \"next/link\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nimport { Button } from \"./button\"\n\nconst MenuContainer = ({ children }: { children: React.ReactNode }) => (\n  <DropdownMenuPrimitive.Root modal={false}>\n    {children}\n  </DropdownMenuPrimitive.Root>\n)\n\nconst MenuButton = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof Button>\n>(({ ...props }, ref) => (\n  <DropdownMenuPrimitive.Trigger asChild ref={ref}>\n    <Button {...props} />\n  </DropdownMenuPrimitive.Trigger>\n))\nMenuButton.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst Menu = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content> & {\n    width?: number\n  }\n>(({ className, sideOffset = 8, width, align = \"start\", ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"font-sm z-50 min-w-[150px] overflow-hidden rounded-xl bg-background-100 p-2 text-popover-foreground shadow-menu data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      align={align}\n      style={{ width: width ? `${width}px` : undefined }}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nMenu.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst MenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    type?: \"normal\" | \"error\"\n  }\n>(({ className, type, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 cursor-pointer select-none items-center rounded-md px-2 text-sm text-gray-1000 outline-none transition-colors focus:bg-gray-alpha-100 data-[disabled]:pointer-events-none data-[disabled]:text-gray-700\",\n      type === \"error\" && \"text-red-900\",\n      className\n    )}\n    {...props}\n  />\n))\nMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst MenuLink = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    href: string\n  }\n>(({ className, href, children, ...props }, ref) => (\n  <MenuItem asChild {...props}>\n    <Link href={href}>{children}</Link>\n  </MenuItem>\n))\nMenuLink.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  MenuContainer,\n  Menu,\n  MenuItem,\n  MenuLink,\n  MenuButton,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuShortcut,\n  DropdownMenuRadioGroup,\n}\n",
    "dependencies": [
      "react",
      "next/link",
      "@radix-ui/react-dropdown-menu",
      "lucide-react",
      "@/lib/utils",
      "./button"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/menubar.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst MenubarMenu = MenubarPrimitive.Menu\n\nconst MenubarGroup = MenubarPrimitive.Group\n\nconst MenubarPortal = MenubarPrimitive.Portal\n\nconst MenubarSub = MenubarPrimitive.Sub\n\nconst MenubarRadioGroup = MenubarPrimitive.RadioGroup\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background-200 p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n",
    "dependencies": [
      "react",
      "@radix-ui/react-menubar",
      "lucide-react",
      "@/lib/utils"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/modal.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/registry/default/ui/button\"\n\nconst ModalBase = AlertDialogPrimitive.Root\n\nconst Trigger = AlertDialogPrimitive.Trigger\n\nconst Content = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AlertDialogPrimitive.Portal>\n    <AlertDialogPrimitive.Overlay\n      className={cn(\n        \"fixed inset-0 z-50 bg-black/75 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n        className\n      )}\n    />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"group fixed left-1/2 top-1/2 z-50 w-full max-w-[540px] -translate-x-1/2 -translate-y-1/2\",\n\n        className\n      )}\n      {...props}\n    >\n      <div\n        className={cn(\n          \"rounded-xl bg-background-100 shadow-modal transition-all ![animation-duration:350ms] group-data-[state=open]:animate-in group-data-[state=closed]:animate-out group-data-[state=closed]:fade-out-0 group-data-[state=open]:fade-in-0 group-data-[state=closed]:slide-out-to-top-10 group-data-[state=open]:slide-in-from-top-10\"\n        )}\n      >\n        {children}\n      </div>\n    </AlertDialogPrimitive.Content>\n  </AlertDialogPrimitive.Portal>\n))\nContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst Body = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div className={cn(\"space-y-6 p-6\", className)} {...props} />\n)\nBody.displayName = \"ModalHeader\"\n\nconst Header = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div className={cn(\"text-center sm:text-left\", className)} {...props} />\n)\nHeader.displayName = \"ModalHeader\"\n\nconst Title = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"mb-6 text-left text-2xl font-semibold text-gray-1000\",\n      className\n    )}\n    {...props}\n  />\n))\nTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst Description = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-base font-normal text-gray-1000\", className)}\n    {...props}\n  />\n))\nDescription.displayName = AlertDialogPrimitive.Description.displayName\n\nconst Actions = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"sticky bottom-0 flex justify-between rounded-b-xl bg-background-200 p-4 [box-shadow:0_-1px_0_0_var(--ds-gray-alpha-400)]\",\n      className\n    )}\n    {...props}\n  />\n)\nActions.displayName = \"ModalActions\"\n\nconst Action = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst Cancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(buttonVariants({ variant: \"secondary\" }), className)}\n    {...props}\n  />\n))\nCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nconst Modal = {\n  Modal: ModalBase,\n  Trigger,\n  Content,\n  Body,\n  Header,\n  Title,\n  Description,\n  Actions,\n  Action,\n  Cancel,\n} as const\n\nexport { Modal }\n",
    "dependencies": [
      "react",
      "@radix-ui/react-alert-dialog",
      "@/lib/utils",
      "@/registry/default/ui/button"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/navigation-menu.tsx": {
    "source": "import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background-200 px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[active]:bg-accent/50 data-[state=open]:bg-accent/50\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n",
    "dependencies": [
      "react",
      "@radix-ui/react-navigation-menu",
      "class-variance-authority",
      "lucide-react",
      "@/lib/utils"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/note.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport {\n  AlertOctagon,\n  AlertTriangleIcon,\n  CheckCircle2,\n  InfoIcon,\n  XIcon,\n} from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst noteVariants = cva(\n  \"border p-2 flex leading-normal justify-between items-center rounded-md gap-3 [word-break:break-word] grow\",\n  {\n    variants: {\n      variant: {\n        secondary:\n          \"text-gray-600 border-gray-300 [--note-filled-bg:var(--ds-gray-alpha-200)] [--note-filled-border:transparent]\",\n        success:\n          \"text-blue-900 border-blue-400 selection:bg-blue-700 [--note-filled-bg:hsl(var(--ds-blue-200))] [--note-filled-border:hsl(var(--ds-blue-100))]\",\n        error:\n          \"text-red-900 border-red-400 selection:bg-red-800 [--note-filled-bg:hsl(var(--ds-red-200))] [--note-filled-border:hsl(var(--ds-red-100))]\",\n        warning:\n          \"text-amber-900 border-amber-400 selection:bg-amber-500 [--note-filled-bg:hsl(var(--ds-amber-200))] [--note-filled-border:hsl(var(--ds-amber-100))]\",\n        violet:\n          \"text-purple-900 border-purple-400 selection:bg-purple-600 [--note-filled-bg:hsl(var(--ds-purple-200))] [--note-filled-border:hsl(var(--ds-purple-100))]\",\n        cyan: \"text-teal-900 border-teal-400 selection:bg-teal-900 [--note-filled-bg:hsl(var(--ds-teal-200))] [--note-filled-border:hsl(var(--ds-teal-100))]\",\n      },\n      size: {\n        small: \"py-1.5 px-2 text-[13px] min-h-[34px]\",\n        medium: \"py-2 px-3 text-sm min-h-[40px]\",\n        large: \"py-[11px] px-3 text-base min-h-[24px]\",\n      },\n    },\n    defaultVariants: {\n      variant: \"secondary\",\n      size: \"medium\",\n    },\n  }\n)\ninterface NoteProps {\n  children: React.ReactNode\n  action?: React.ReactNode\n  size?: VariantProps<typeof noteVariants>[\"size\"]\n  type?: VariantProps<typeof noteVariants>[\"variant\"]\n  fill?: boolean\n  className?: string\n  disabled?: boolean\n}\n\nconst icons = {\n  success: CheckCircle2,\n  error: AlertOctagon,\n  warning: AlertTriangleIcon,\n}\n\nconst Note = ({\n  action,\n  children,\n  size,\n  type = \"secondary\",\n  fill,\n  className,\n  disabled,\n}: NoteProps) => {\n  const Icon = icons[type as keyof typeof icons] ?? InfoIcon\n\n  return (\n    <div\n      className={cn(\n        noteVariants({\n          variant: type,\n          size,\n        }),\n        fill && \"border-[var(--note-filled-border)] bg-[var(--note-filled-bg)]\",\n        disabled &&\n          \"border-gray-alpha-200 text-gray-700 [--note-filled-bg:transparent] [--note-filled-border:var(--ds-gray-alpha-200)]\",\n        className\n      )}\n    >\n      <span className=\"flex items-center gap-3\">\n        <Icon className=\"h-4 w-4 shrink-0\" />\n\n        <span className=\"\">{children}</span>\n      </span>\n      {action && <div className=\"shrink-0\">{action}</div>}\n    </div>\n  )\n}\n\nexport { Note }\n",
    "dependencies": [
      "react",
      "class-variance-authority",
      "lucide-react",
      "@/lib/utils"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/pagination.tsx": {
    "source": "import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/registry/default/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  // TODO change this to icon button\n  size = \"sm\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"secondary\" : \"default\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"md\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"medium\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n",
    "dependencies": [
      "react",
      "lucide-react",
      "@/lib/utils",
      "@/registry/default/ui/button"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/popover.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n",
    "dependencies": ["react", "@radix-ui/react-popover", "@/lib/utils"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/progress.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n",
    "dependencies": ["react", "@radix-ui/react-progress", "@/lib/utils"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/radio-group.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"ring-offset-background aspect-square h-4 w-4 rounded-full border border-primary text-primary focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n",
    "dependencies": [
      "react",
      "@radix-ui/react-radio-group",
      "lucide-react",
      "@/lib/utils"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/resizable.tsx": {
    "source": "\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n",
    "dependencies": ["lucide-react", "react-resizable-panels", "@/lib/utils"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/scroll-area.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n",
    "dependencies": ["react", "@radix-ui/react-scroll-area", "@/lib/utils"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/select.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"ring-offset-background flex h-10 w-full items-center justify-between rounded-md border border-input bg-background-200 px-3 py-2 text-sm placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n",
    "dependencies": [
      "react",
      "@radix-ui/react-select",
      "lucide-react",
      "@/lib/utils"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/sheet.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background-200 p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"ring-offset-background absolute right-4 top-4 rounded-sm opacity-70 transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n",
    "dependencies": [
      "react",
      "@radix-ui/react-dialog",
      "class-variance-authority",
      "lucide-react",
      "@/lib/utils"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/show-more.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\nimport { ChevronDownIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/registry/default/ui/button\"\n\ninterface ShowMoreProps {\n  expanded: boolean\n  onClick: () => void\n}\n\nconst ShowMore = ({ expanded, onClick }: ShowMoreProps) => {\n  return (\n    <div className=\"flex min-h-[30px] w-[calc(100%-40px)] items-center\">\n      <div className=\"h-[1px] flex-1 translate-x-[-1px] bg-gray-alpha-400\"></div>\n      <div className=\"shrink-0\">\n        <Button\n          size=\"small\"\n          shape=\"rounded\"\n          variant=\"secondary\"\n          onClick={onClick}\n        >\n          <div className=\"flex items-center\">\n            <span>{expanded ? \"Show less\" : \"Show more\"}</span>\n            <ChevronDownIcon\n              className={cn(\n                \"ml-1 h-5 w-5 transition-transform\",\n                expanded && \"rotate-180\"\n              )}\n            />\n          </div>\n        </Button>\n      </div>\n      <div className=\"h-[1px] flex-1 translate-x-[1px] bg-gray-alpha-400\"></div>\n    </div>\n  )\n}\n\nexport { ShowMore }\n",
    "dependencies": [
      "react",
      "lucide-react",
      "@/lib/utils",
      "@/registry/default/ui/button"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/skeleton.tsx": {
    "source": "import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n",
    "dependencies": ["@/lib/utils"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/snippet.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { Check, Copy } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst snippetVariants = cva(\n  \"max-w-full relative rounded-md border py-2.5 pl-3 pr-12\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background-100 border-gray-alpha-400 text-gray-1000\",\n        dark: \"bg-gray-1000 border-gray-1000 text-gray-100\",\n        success: \"bg-blue-100 border-blue-400 text-blue-900\",\n        error: \"bg-red-100 border-red-400 text-red-900\",\n        warning: \"bg-amber-100 border-amber-400 text-amber-900\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\ninterface SnippetProps {\n  text: string | string[]\n  width?: string\n  onCopy?: () => void\n  type?: VariantProps<typeof snippetVariants>[\"variant\"]\n  prompt?: boolean\n  className?: string\n}\n\nconst Snippet: React.FC<SnippetProps> = ({\n  text,\n  width,\n  prompt = true,\n  onCopy,\n  type = \"default\",\n  className,\n}) => {\n  const textArray = Array.isArray(text) ? text : [text]\n  const [showCopyButton, setShowCopyButton] = React.useState(true)\n\n  function copyTextHandler() {\n    if (showCopyButton === false) return\n\n    setShowCopyButton(false)\n    navigator.clipboard.writeText(textArray.join(\"\\n\\t\")).then(() => {\n      if (onCopy) {\n        onCopy()\n      }\n    })\n\n    setTimeout(() => {\n      setShowCopyButton(true)\n    }, 1200)\n  }\n\n  return (\n    <div\n      className={cn(snippetVariants({ variant: type }), className)}\n      style={{ width }}\n    >\n      <div className=\"flex-1\">\n        {textArray.map((text, index) => (\n          <pre\n            key={index}\n            className={cn(\n              \"overflow-y-auto text-[13px]\",\n              prompt && \"before:select-none before:content-['$_']\"\n            )}\n          >\n            {text}\n          </pre>\n        ))}\n      </div>\n\n      <button\n        onClick={copyTextHandler}\n        className=\"absolute right-1 top-1/2 flex h-8 w-8 -translate-y-1/2 items-center justify-center\"\n      >\n        <div\n          className={cn(\n            \"absolute  duration-150 ease-out fill-mode-forwards\",\n            showCopyButton\n              ? \"animate-copy-button-fadeOut\"\n              : \"animate-copy-button-fadeIn\"\n          )}\n        >\n          <Check className=\"h-4 w-4\" />\n        </div>\n        <div\n          className={cn(\n            \"absolute  duration-150 ease-out fill-mode-forwards\",\n            showCopyButton\n              ? \"animate-copy-button-fadeIn\"\n              : \"animate-copy-button-fadeOut\"\n          )}\n        >\n          <Copy className=\"h-4 w-4\" />\n        </div>\n      </button>\n    </div>\n  )\n}\n\nexport { Snippet }\n",
    "dependencies": [
      "react",
      "class-variance-authority",
      "lucide-react",
      "@/lib/utils"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/sonner.tsx": {
    "source": "\"use client\"\n\nimport { useTheme } from \"next-themes\"\nimport { Toaster as Sonner } from \"sonner\"\n\ntype ToasterProps = React.ComponentProps<typeof Sonner>\n\nconst Toaster = ({ ...props }: ToasterProps) => {\n  const { theme = \"system\" } = useTheme()\n\n  return (\n    <Sonner\n      theme={theme as ToasterProps[\"theme\"]}\n      className=\"toaster group\"\n      toastOptions={{\n        classNames: {\n          toast:\n            \"group toast group-[.toaster]:bg-background-200 group-[.toaster]:text-foreground group-[.toaster]:border-border group-[.toaster]:shadow-lg\",\n          description: \"group-[.toast]:text-muted-foreground\",\n          actionButton:\n            \"group-[.toast]:bg-primary group-[.toast]:text-primary-foreground\",\n          cancelButton:\n            \"group-[.toast]:bg-muted group-[.toast]:text-muted-foreground\",\n        },\n      }}\n      {...props}\n    />\n  )\n}\n\nexport { Toaster }\n",
    "dependencies": ["next-themes", "sonner"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/spinner.tsx": {
    "source": "import React from \"react\"\n\ntype SpinnerProps = { size?: number }\n\nconst Spinner = ({ size }: SpinnerProps) => {\n  return (\n    <div\n      className=\"h-[var(--spinner-size)] w-[var(--spinner-size)] shrink-0\"\n      style={\n        {\n          [\"--spinner-size\"]: size ? `${size}px` : \"20px\",\n        } as React.CSSProperties\n      }\n    >\n      <div className=\"relative left-1/2 top-1/2 h-[var(--spinner-size)] w-[var(--spinner-size)]\">\n        {Array(12)\n          .fill(null)\n          .map((_, i) => (\n            <div\n              key={i}\n              className=\"absolute left-[-10%] top-[-3.9%] h-[8%] w-[24%] animate-spinner-spin rounded-[5px] bg-gray-700\"\n              style={{\n                transform: `rotate(${i * 30}deg) translate(146%)`,\n                animationDelay: `-${1.2 - (i + 1) * 0.1}s`,\n              }}\n            />\n          ))}\n      </div>\n    </div>\n  )\n}\n\nexport { Spinner }\n",
    "dependencies": ["react"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/stack.tsx": {
    "source": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Define breakpoints and their corresponding min-widths for media queries\nconst breakpoints = {\n  sm: \"640px\", // Example breakpoint min-widths\n  md: \"768px\",\n  lg: \"1024px\",\n  xl: \"1280px\",\n}\n\ntype BreakPoint = keyof typeof breakpoints\ntype Gap = number | { [key in BreakPoint]?: number }\ntype Direction = \"column\" | \"row\" | { [key in BreakPoint]?: \"column\" | \"row\" }\n\nexport interface StackProps extends React.HTMLAttributes<HTMLDivElement> {\n  gap?: Gap\n  direction?: Direction\n  align?: React.CSSProperties[\"alignItems\"]\n  justify?: React.CSSProperties[\"justifyContent\"]\n}\n\nfunction convertNumberIntoPx(n: number) {\n  return `${n * 4}px`\n}\n\nfunction convertGapToProps(gap?: Gap) {\n  if (typeof gap === \"number\") {\n    return { gap: convertNumberIntoPx(gap) } // Applies universally if gap is a number\n  } else if (gap && typeof gap === \"object\") {\n    return Object.entries(gap).reduce(\n      (acc, [breakpoint, value]) => {\n        // Use CSS variables for gap values at different breakpoints\n        acc[`--gap-${breakpoint}`] = convertNumberIntoPx(value)\n        return acc\n      },\n      {} as Record<string, Object>\n    )\n  }\n  return {}\n}\n\nconst Stack = React.forwardRef<HTMLDivElement, StackProps>(\n  ({ className, gap, direction, align, justify, ...props }, ref) => {\n    const styles = convertGapToProps(gap)\n\n    // Append styles for direction changes at specified breakpoints\n    if (direction && typeof direction === \"object\") {\n      Object.entries(direction).forEach(([breakpoint, dirValue]) => {\n        const minWidth = breakpoints[breakpoint as BreakPoint]\n        if (!styles[`@media (min-width: ${minWidth})`]) {\n          styles[`@media (min-width: ${minWidth})`] = {}\n        }\n        ;(\n          styles[`@media (min-width: ${minWidth})`] as React.CSSProperties\n        ).flexDirection = dirValue\n      })\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex [align-items:var(--align-items)] [justify-content:var(--justify-content)]\",\n          !direction && \"flex-col\",\n          typeof gap === \"number\"\n            ? convertGapToProps(gap)\n            : [\n                gap?.sm && \"sm:gap-[var(--gap-sm)]\",\n                gap?.md && \"md:gap-[var(--gap-md)]\",\n                gap?.lg && \"lg:gap-[var(--gap-lg)]\",\n                gap?.xl && \"xl:gap-[var(--gap-xl)]\",\n              ],\n          className\n        )}\n        style={\n          {\n            ...styles,\n            \"--align-items\": align,\n            \"--justify-content\": justify,\n          } as React.CSSProperties\n        }\n        {...props}\n      >\n        {props.children}\n      </div>\n    )\n  }\n)\nStack.displayName = \"Stack\"\n\nexport { Stack }\n",
    "dependencies": ["react", "@/lib/utils"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/status-dot.tsx": {
    "source": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\ntype State = \"QUEUED\" | \"BUILDING\" | \"ERROR\" | \"READY\" | \"CANCELED\"\n\nconst labels: Record<State, string> = {\n  QUEUED: \"Queued\",\n  BUILDING: \"Building\",\n  ERROR: \"Error\",\n  READY: \"Ready\",\n  CANCELED: \"Canceled\",\n}\n\nconst colors: Record<State, string> = {\n  QUEUED: \"bg-accents-2\",\n  BUILDING: \"bg-orange-500\", // TODO change out these colors to real colors\n  ERROR: \"bg-red-800\",\n  READY: \"bg-teal-600\",\n  CANCELED: \"bg-accents-2\",\n}\n\ninterface StatusDotProps {\n  state: State\n  label?: boolean\n}\n\nconst StatusDot: React.FC<StatusDotProps> = ({ state, label }) => {\n  return (\n    <div className=\"flex items-center\">\n      <div className={cn(\"h-2.5 w-2.5 rounded-full\", colors[state])} />\n      {label && <p className=\"ml-2 text-sm leading-4\">{labels[state]}</p>}\n    </div>\n  )\n}\n\nexport { StatusDot }\n",
    "dependencies": ["react", "@/lib/utils"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/switch.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\nimport { VariantProps, cva } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst switchVariants = cva(\n  \"flex group bg-background-100 p-1 [box-shadow:0_0_0_1px_var(--ds-gray-alpha-400)]\",\n  {\n    variants: {\n      size: {\n        small: \"h-8 rounded-md\",\n        medium: \"h-10 rounded-md\",\n        large: \"h-12 rounded-lg\",\n      },\n    },\n  }\n)\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List> &\n    VariantProps<typeof switchVariants>\n>(({ className, size = \"medium\", ...props }, ref) => (\n  <TabsPrimitive.Root defaultValue=\"list\">\n    <TabsPrimitive.List\n      ref={ref}\n      className={switchVariants({ size, className })}\n      data-size={size}\n      {...props}\n    />\n  </TabsPrimitive.Root>\n))\nSwitch.displayName = \"Switch\"\n\nconst SwitchControl = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger> & {\n    label: string\n  }\n>(({ className, label, disabled, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    disabled={disabled}\n    className={cn(\n      \"flex-1 cursor-pointer text-gray-900 transition-colors disabled:cursor-not-allowed data-[state=active]:bg-gray-100 data-[state=active]:text-gray-1000\",\n      !disabled && \"hover:text-gray-1000\",\n      \"group-data-[size=small]:rounded-sm group-data-[size=small]:px-3 group-data-[size=small]:text-sm\",\n      \"group-data-[size=medium]:rounded-sm group-data-[size=medium]:px-3 group-data-[size=medium]:text-sm\",\n      \"group-data-[size=large]:rounded-[4px] group-data-[size=large]:px-4 group-data-[size=large]:text-base\",\n      className\n    )}\n    {...props}\n  >\n    {label}\n  </TabsPrimitive.Trigger>\n))\nSwitchControl.displayName = TabsPrimitive.Trigger.displayName\n\nexport { Switch, SwitchControl }\n",
    "dependencies": [
      "react",
      "@radix-ui/react-tabs",
      "class-variance-authority",
      "@/lib/utils"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/tabs.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    // TODO maybe rethink the box shadow here\n    className={cn(\n      \"flex w-full flex-nowrap items-baseline overflow-x-auto pb-[1px] [box-shadow:0_-1px_0_var(--accents-2)_inset]\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, children, disabled, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    disabled={disabled}\n    className={cn(\n      \"group pr-6 text-gray-900 last:pr-0 disabled:cursor-not-allowed data-[state=active]:text-gray-1000\",\n      !disabled && \"hover:text-gray-1000\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"mb-[-1px] border-b-2 border-b-transparent py-3 text-sm leading-5 group-first:pl-0.5 group-data-[state=active]:border-b-gray-1000 group-data-[state=active]:text-foreground group-data-[state=active]:shadow-sm\">\n      {children}\n    </div>\n  </TabsPrimitive.Trigger>\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content ref={ref} className={cn(className)} {...props} />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n",
    "dependencies": ["react", "@radix-ui/react-tabs", "@/lib/utils"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/text.tsx": {
    "source": "import { cn } from \"@/lib/utils\"\n\n// Define breakpoints and their corresponding min-widths for media queries\nconst breakpoints = {\n  sm: \"640px\", // Example breakpoint min-widths\n  md: \"768px\",\n  lg: \"1024px\",\n  xl: \"1280px\",\n}\n\ntype BreakPoint = keyof typeof breakpoints\n\ntype TextSize = keyof typeof textSizes\n\ninterface TextProps {\n  children: React.ReactNode\n  size?: TextSize | { [key in BreakPoint]?: TextSize }\n  transform?: React.CSSProperties[\"textTransform\"]\n  align?: React.CSSProperties[\"textAlign\"]\n  color?: string // TODO get better TS type here\n  truncate?: boolean | number\n  monospace?: boolean\n  className?: string\n  // TODO add the \"as\" property\n}\n\nconst Text: React.FC<TextProps> = ({\n  children,\n  size = 14,\n  transform,\n  align,\n  color,\n  truncate,\n  monospace,\n  className,\n}) => {\n  const isMediaSize = typeof size === \"object\"\n\n  const style: React.CSSProperties = isMediaSize\n    ? Object.entries(size).reduce(\n        (acc, [breakpoint, value]) => {\n          acc[`--${breakpoint}-text-size`] = textSizes[value].fontSize\n          acc[`--${breakpoint}-text-weight`] = textSizes[value].fontWeight\n          acc[`--${breakpoint}-text-letter-spacing`] =\n            textSizes[value].letterSpacing\n          acc[`--${breakpoint}-text-line-height`] = textSizes[value].lineHeight\n          return acc\n        },\n        {} as Record<string, string>\n      )\n    : {\n        \"--text-size\": textSizes[size as TextSize]?.fontSize,\n        \"--text-weight\": textSizes[size as TextSize]?.fontWeight,\n        \"--text-letter-spacing\": textSizes[size as TextSize]?.letterSpacing,\n        \"--text-line-height\": textSizes[size as TextSize]?.lineHeight,\n      }\n\n  if (transform) {\n    // @ts-ignore-line\n    style[\"--text-transform\"] = transform\n  }\n\n  if (align) {\n    // @ts-ignore-line\n    style[\"--text-align\"] = align\n  }\n\n  // @ts-ignore-line\n  style[\"--text-color\"] = `var(--ds-${color ?? \"gray-1000\"})`\n\n  if (truncate && typeof truncate === \"number\") {\n    // @ts-ignore-line\n    style[\"--text-clamp\"] = truncate\n  }\n\n  return (\n    <p\n      className={cn(\n        \"[color:hsl(var(--text-color))] [text-transform:var(--text-transform)]\",\n        isMediaSize\n          ? [\n              size?.sm &&\n                \"sm:[font-size:var(--sm-text-size)] sm:[font-weight:var(--sm-text-weight)] sm:[letter-spacing:var(--sm-text-letter-spacing)] sm:[line-height:var(--sm-text-line-height)]\",\n              size?.md &&\n                \"md:[font-size:var(--md-text-size)] md:[font-weight:var(--md-text-weight)] md:[letter-spacing:var(--md-text-letter-spacing)] md:[line-height:var(--md-text-line-height)]\",\n              size?.lg &&\n                \"lg:[font-size:var(--lg-text-size)] lg:[font-weight:var(--lg-text-weight)] lg:[letter-spacing:var(--lg-text-letter-spacing)] lg:[line-height:var(--lg-text-line-height)]\",\n              size?.xl &&\n                \"xl:[font-size:var(--xl-text-size)] xl:[font-weight:var(--xl-text-weight)] xl:[letter-spacing:var(--xl-text-letter-spacing)] xl:[line-height:var(--xl-text-line-height)]\",\n            ]\n          : \"[font-size:var(--text-size)] [font-weight:var(--text-weight)] [letter-spacing:var(--text-letter-spacing)] [line-height:var(--text-line-height)]\",\n        monospace && \"font-mono\",\n        align && \"[text-align:var(--text-align)]\",\n        truncate && typeof truncate === \"number\"\n          ? \"line-clamp-[var(--text-clamp)]\"\n          : \"truncate\",\n        className\n      )}\n      style={style}\n    >\n      {children}\n    </p>\n  )\n}\n\nexport { Text }\n\nconst textSizes = {\n  10: {\n    fontSize: \"0.625rem\",\n    lineHeight: \"0.75rem\",\n    fontWeight: \"400\",\n    letterSpacing: \"initial\",\n  },\n  12: {\n    fontSize: \"0.75rem\",\n    lineHeight: `1rem`,\n    fontWeight: \"400\",\n    letterSpacing: \"initial\",\n  },\n  14: {\n    fontSize: \"0.875rem\",\n    lineHeight: \"1.25rem\",\n    fontWeight: \"400\",\n    letterSpacing: \"initial\",\n  },\n  16: {\n    fontSize: \"1rem\",\n    lineHeight: \"1.5rem\",\n    fontWeight: \"400\",\n    letterSpacing: \"initial\",\n  },\n  20: {\n    fontSize: \"1.25rem\",\n    lineHeight: \"1.5rem\",\n    fontWeight: \"600\",\n    letterSpacing: \"-0.020625rem\",\n  },\n  24: {\n    fontSize: \"1.5rem\",\n    lineHeight: \"2rem\",\n    fontWeight: \"600\",\n    letterSpacing: \"-0.029375rem\",\n  },\n  32: {\n    fontSize: \"2rem\",\n    lineHeight: \"2.5rem\",\n    fontWeight: \"600\",\n    letterSpacing: \"-0.049375rem\",\n  },\n  48: {\n    fontSize: \"3rem\",\n    lineHeight: \"3.5rem\",\n    fontWeight: \"700\",\n    letterSpacing: \"-0.066875rem\",\n  },\n  [\"heading-72\"]: {\n    fontSize: \"4.5rem\",\n    lineHeight: \"4.5rem\",\n    letterSpacing: \"-4.32px\",\n    fontWeight: \"600\",\n  },\n  [\"heading-64\"]: {\n    fontSize: \"4rem\",\n    lineHeight: \"4rem\",\n    letterSpacing: \"-3.84px\",\n    fontWeight: \"600\",\n  },\n  [\"heading-56\"]: {\n    fontSize: \"3.5rem\",\n    lineHeight: \"3.5rem\",\n    letterSpacing: \"-3.36px\",\n    fontWeight: \"600\",\n  },\n  [\"heading-48\"]: {\n    fontSize: \"3rem\",\n    lineHeight: \"3.5rem\",\n    letterSpacing: \"-2.88px\",\n    fontWeight: \"600\",\n  },\n  [\"heading-40\"]: {\n    fontSize: \"2.5rem\",\n    lineHeight: \"3rem\",\n    letterSpacing: \"-2.4px\",\n    fontWeight: \"600\",\n  },\n  [\"heading-32\"]: {\n    fontSize: \"2rem\",\n    lineHeight: \"2.5rem\",\n    letterSpacing: \"-1.28px\",\n    fontWeight: \"600\",\n  },\n  [\"heading-24\"]: {\n    fontSize: \"1.5rem\",\n    lineHeight: \"2rem\",\n    letterSpacing: \"-0.96px\",\n    fontWeight: \"600\",\n  },\n  [\"heading-20\"]: {\n    fontSize: \"1.25rem\",\n    lineHeight: \"1.625rem\",\n    letterSpacing: \"-0.4px\",\n    fontWeight: \"600\",\n  },\n  [\"heading-16\"]: {\n    fontSize: \"1rem\",\n    lineHeight: \"1.5rem\",\n    letterSpacing: \"-0.32px\",\n    fontWeight: \"600\",\n  },\n  [\"button-16\"]: {\n    fontSize: \"1rem\",\n    lineHeight: \"1.25rem\",\n    letterSpacing: \"0px\",\n    fontWeight: \"500\",\n  },\n  [\"button-14\"]: {\n    fontSize: \"0.875rem\",\n    lineHeight: \"1.25rem\",\n    letterSpacing: \"0px\",\n    fontWeight: \"500\",\n  },\n  [\"button-12\"]: {\n    fontSize: \"0.75rem\",\n    lineHeight: \"1rem\",\n    letterSpacing: \"0px\",\n    fontWeight: \"500\",\n  },\n  [\"label-20\"]: {\n    fontSize: \"1.25rem\",\n    lineHeight: \"2rem\",\n    letterSpacing: \"0px\",\n    fontWeight: \"400\",\n  },\n  [\"label-18\"]: {\n    fontSize: \"1.125rem\",\n    lineHeight: \"1.25rem\",\n    letterSpacing: \"0px\",\n    fontWeight: \"400\",\n  },\n  [\"label-16\"]: {\n    fontSize: \"1rem\",\n    lineHeight: \"1.25rem\",\n    letterSpacing: \"0px\",\n    fontWeight: \"400\",\n  },\n  [\"label-14\"]: {\n    fontSize: \"0.875rem\",\n    lineHeight: \"1.25rem\",\n    letterSpacing: \"0px\",\n    fontWeight: \"400\",\n  },\n  [\"label-13\"]: {\n    fontSize: \"0.8125rem\",\n    lineHeight: \"1rem\",\n    letterSpacing: \"0px\",\n    fontWeight: \"400\",\n  },\n  [\"label-12\"]: {\n    fontSize: \"0.75rem\",\n    lineHeight: \"1rem\",\n    letterSpacing: \"0px\",\n    fontWeight: \"400\",\n  },\n  [\"copy-24\"]: {\n    fontSize: \"1.5rem\",\n    lineHeight: \"2.25rem\",\n    letterSpacing: \"0px\",\n    fontWeight: \"400\",\n  },\n  [\"copy-20\"]: {\n    fontSize: \"1.25rem\",\n    lineHeight: \"2.25rem\",\n    letterSpacing: \"0px\",\n    fontWeight: \"400\",\n  },\n  [\"copy-18\"]: {\n    fontSize: \"1.125rem\",\n    lineHeight: \"1.75rem\",\n    letterSpacing: \"0px\",\n    fontWeight: \"400\",\n  },\n  [\"copy-16\"]: {\n    fontSize: \"1rem\",\n    lineHeight: \"1.5rem\",\n    letterSpacing: \"0px\",\n    fontWeight: \"400\",\n  },\n  [\"copy-14\"]: {\n    fontSize: \"0.875rem\",\n    lineHeight: \"1.25rem\",\n    letterSpacing: \"0px\",\n    fontWeight: \"400\",\n  },\n  [\"copy-13\"]: {\n    fontSize: \"0.8125rem\",\n    lineHeight: \"1.125rem\",\n    letterSpacing: \"0px\",\n    fontWeight: \"400\",\n  },\n} as const satisfies Record<\n  string | number,\n  {\n    fontSize: string\n    fontWeight: string\n    letterSpacing: string\n    lineHeight: string\n  }\n>\n",
    "dependencies": ["@/lib/utils"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/textarea.tsx": {
    "source": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface TextareaProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <textarea\n        className={cn(\n          \"ring-offset-background flex min-h-[80px] w-full rounded-md border border-input bg-background-200 px-3 py-2 text-sm placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n",
    "dependencies": ["react", "@/lib/utils"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/toast.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background-200 text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"ring-offset-background inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n",
    "dependencies": [
      "react",
      "@radix-ui/react-toast",
      "class-variance-authority",
      "lucide-react",
      "@/lib/utils"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/toaster.tsx": {
    "source": "\"use client\"\n\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/registry/default/ui/toast\"\nimport { useToast } from \"@/registry/default/ui/use-toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n",
    "dependencies": [
      "@/registry/default/ui/toast",
      "@/registry/default/ui/use-toast"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/toggle.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\ntype Size = \"medium\" | \"large\"\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root> & {\n    size?: Size\n  }\n>(({ className, size = \"medium\", ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"focus-visible:ring-offset-background peer inline-flex shrink-0 cursor-pointer items-center rounded-full border transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      {\n        \"h-[14px] w-[28px]\": size === \"medium\",\n        \"h-[24px] w-[40px]\": size === \"large\",\n      },\n      props.disabled\n        ? \"disabled:cursor-not-allowed disabled:border-accents-2 disabled:bg-accents-1\"\n        : \"border-gray-alpha-400 data-[state=checked]:bg-success data-[state=unchecked]:bg-gray-100\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block rounded-full shadow-md ring-0 transition-transform data-[state=unchecked]:translate-x-0\",\n        {\n          \"h-[12px] w-[12px] data-[state=checked]:translate-x-[14px]\":\n            size === \"medium\",\n          \"h-[22px] w-[22px] data-[state=checked]:translate-x-[16px]\":\n            size === \"large\",\n        },\n        props.disabled\n          ? \"bg-gray-200\"\n          : \"data-[state=checked]:bg-gray-1000 data-[state=unchecked]:bg-gray-700\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nToggle.displayName = SwitchPrimitives.Root.displayName\n\nexport { Toggle }\n",
    "dependencies": ["react", "@radix-ui/react-switch", "@/lib/utils"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/tooltip.tsx": {
    "source": "\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tooltip = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content> & {\n    text: string | React.ReactNode\n  }\n>(({ className, sideOffset = 5, text, children, ...props }, ref) => (\n  <TooltipPrimitive.Provider>\n    <TooltipPrimitive.Root>\n      <TooltipPrimitive.Trigger asChild>{children}</TooltipPrimitive.Trigger>\n      <TooltipPrimitive.Portal>\n        <TooltipPrimitive.Content\n          ref={ref}\n          sideOffset={sideOffset}\n          className={cn(\n            \"z-50 overflow-hidden rounded-md border border-contrast bg-contrast px-3 py-2 text-[13px] text-gray-100 shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n            className\n          )}\n          {...props}\n        >\n          <p>{text}</p>\n          <TooltipPrimitive.Arrow className=\"fill-contrast\" />\n        </TooltipPrimitive.Content>\n      </TooltipPrimitive.Portal>\n    </TooltipPrimitive.Root>\n  </TooltipPrimitive.Provider>\n))\nTooltip.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip }\n",
    "dependencies": ["react", "@radix-ui/react-tooltip", "@/lib/utils"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/default/ui/use-toast.ts": {
    "source": "\"use client\"\n\n// Inspired by react-hot-toast library\nimport * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/registry/default/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n",
    "dependencies": ["react", "@/registry/default/ui/toast"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/registry.ts": {
    "source": "import { Registry } from \"@/registry/schema\"\n\nconst ui: Registry = [\n  {\n    name: \"aspect-ratio\",\n    type: \"components:ui\",\n    dependencies: [\"@radix-ui/react-aspect-ratio\"],\n    files: [\"ui/aspect-ratio.tsx\"],\n  },\n  {\n    name: \"avatar\",\n    type: \"components:ui\",\n    dependencies: [\"@radix-ui/react-avatar\"],\n    files: [\"ui/avatar.tsx\"],\n  },\n  {\n    name: \"badge\",\n    type: \"components:ui\",\n    files: [\"ui/badge.tsx\"],\n  },\n  {\n    name: \"button\",\n    type: \"components:ui\",\n    dependencies: [\"@radix-ui/react-slot\"],\n    files: [\"ui/button.tsx\"],\n  },\n  {\n    name: \"calendar\",\n    type: \"components:ui\",\n    dependencies: [\"react-day-picker\", \"date-fns\"],\n    registryDependencies: [\"button\"],\n    files: [\"ui/calendar.tsx\"],\n  },\n  {\n    name: \"card\",\n    type: \"components:ui\",\n    files: [\"ui/card.tsx\"],\n  },\n  {\n    name: \"checkbox\",\n    type: \"components:ui\",\n    dependencies: [\"@radix-ui/react-checkbox\"],\n    files: [\"ui/checkbox.tsx\"],\n  },\n  {\n    name: \"collapse\",\n    type: \"components:ui\",\n    dependencies: [\"@radix-ui/react-accordion\"],\n    files: [\"ui/collapse.tsx\"],\n  },\n  {\n    name: \"collapsible\",\n    type: \"components:ui\",\n    dependencies: [\"@radix-ui/react-collapsible\"],\n    files: [\"ui/collapsible.tsx\"],\n  },\n  {\n    name: \"command\",\n    type: \"components:ui\",\n    dependencies: [\"cmdk\"],\n    registryDependencies: [\"dialog\"],\n    files: [\"ui/command.tsx\"],\n  },\n  {\n    name: \"context-menu\",\n    type: \"components:ui\",\n    dependencies: [\"@radix-ui/react-context-menu\"],\n    files: [\"ui/context-menu.tsx\"],\n  },\n  {\n    name: \"dialog\",\n    type: \"components:ui\",\n    dependencies: [\"@radix-ui/react-dialog\"],\n    files: [\"ui/dialog.tsx\"],\n  },\n  {\n    name: \"drawer\",\n    type: \"components:ui\",\n    dependencies: [\"vaul\", \"@radix-ui/react-dialog\"],\n    files: [\"ui/drawer.tsx\"],\n  },\n  {\n    name: \"form\",\n    type: \"components:ui\",\n    dependencies: [\n      \"@radix-ui/react-label\",\n      \"@radix-ui/react-slot\",\n      \"@hookform/resolvers\",\n      \"zod\",\n      \"react-hook-form\",\n    ],\n    registryDependencies: [\"button\", \"label\"],\n    files: [\"ui/form.tsx\"],\n  },\n  {\n    name: \"gauge\",\n    type: \"components:ui\",\n    files: [\"ui/gauge.tsx\"],\n  },\n  {\n    name: \"hover-card\",\n    type: \"components:ui\",\n    dependencies: [\"@radix-ui/react-hover-card\"],\n    files: [\"ui/hover-card.tsx\"],\n  },\n  {\n    name: \"input\",\n    type: \"components:ui\",\n    files: [\"ui/input.tsx\"],\n  },\n  {\n    name: \"kbd\",\n    type: \"components:ui\",\n    files: [\"ui/kbd.tsx\"],\n  },\n  {\n    name: \"loading-dots\",\n    type: \"components:ui\",\n    files: [\"ui/loading-dots.tsx\"],\n  },\n  {\n    name: \"label\",\n    type: \"components:ui\",\n    dependencies: [\"@radix-ui/react-label\"],\n    files: [\"ui/label.tsx\"],\n  },\n  {\n    name: \"menu\",\n    type: \"components:ui\",\n    dependencies: [\"@radix-ui/react-menu\"],\n    files: [\"ui/menu.tsx\"],\n  },\n  {\n    name: \"menubar\",\n    type: \"components:ui\",\n    dependencies: [\"@radix-ui/react-menubar\"],\n    files: [\"ui/menubar.tsx\"],\n  },\n  {\n    name: \"modal\",\n    type: \"components:ui\",\n    dependencies: [\"@radix-ui/react-alert-dialog\"],\n    registryDependencies: [\"button\"],\n    files: [\"ui/modal.tsx\"],\n  },\n  {\n    name: \"navigation-menu\",\n    type: \"components:ui\",\n    dependencies: [\"@radix-ui/react-navigation-menu\"],\n    files: [\"ui/navigation-menu.tsx\"],\n  },\n  {\n    name: \"note\",\n    type: \"components:ui\",\n    files: [\"ui/note.tsx\"],\n  },\n  {\n    name: \"pagination\",\n    type: \"components:ui\",\n    registryDependencies: [\"button\"],\n    files: [\"ui/pagination.tsx\"],\n  },\n  {\n    name: \"popover\",\n    type: \"components:ui\",\n    dependencies: [\"@radix-ui/react-popover\"],\n    files: [\"ui/popover.tsx\"],\n  },\n  {\n    name: \"progress\",\n    type: \"components:ui\",\n    dependencies: [\"@radix-ui/react-progress\"],\n    files: [\"ui/progress.tsx\"],\n  },\n  {\n    name: \"radio-group\",\n    type: \"components:ui\",\n    dependencies: [\"@radix-ui/react-radio-group\"],\n    files: [\"ui/radio-group.tsx\"],\n  },\n  {\n    name: \"resizable\",\n    type: \"components:ui\",\n    dependencies: [\"react-resizable-panels\"],\n    files: [\"ui/resizable.tsx\"],\n  },\n  {\n    name: \"scroll-area\",\n    type: \"components:ui\",\n    dependencies: [\"@radix-ui/react-scroll-area\"],\n    files: [\"ui/scroll-area.tsx\"],\n  },\n  {\n    name: \"select\",\n    type: \"components:ui\",\n    dependencies: [\"@radix-ui/react-select\"],\n    files: [\"ui/select.tsx\"],\n  },\n  {\n    name: \"sheet\",\n    type: \"components:ui\",\n    dependencies: [\"@radix-ui/react-dialog\"],\n    files: [\"ui/sheet.tsx\"],\n  },\n  {\n    name: \"show-more\",\n    type: \"components:ui\",\n    dependencies: [],\n    registryDependencies: [\"button\"],\n    files: [\"ui/show-more.tsx\"],\n  },\n  {\n    name: \"skeleton\",\n    type: \"components:ui\",\n    files: [\"ui/skeleton.tsx\"],\n  },\n  {\n    name: \"snippet\",\n    type: \"components:ui\",\n    files: [\"ui/snippet.tsx\"],\n  },\n  {\n    name: \"sonner\",\n    type: \"components:ui\",\n    dependencies: [\"sonner\", \"next-themes\"],\n    files: [\"ui/sonner.tsx\"],\n  },\n  {\n    name: \"status-dot\",\n    type: \"components:ui\",\n    dependencies: [],\n    files: [\"ui/status-dot.tsx\"],\n  },\n  {\n    name: \"switch\",\n    type: \"components:ui\",\n    dependencies: [\"@radix-ui/react-tabs\"],\n    files: [\"ui/switch.tsx\"],\n  },\n  {\n    name: \"spinner\",\n    type: \"components:ui\",\n    files: [\"ui/spinner.tsx\"],\n  },\n  {\n    name: \"stack\",\n    type: \"components:ui\",\n    dependencies: [],\n    files: [\"ui/stack.tsx\"],\n  },\n  {\n    name: \"toggle\",\n    type: \"components:ui\",\n    dependencies: [\"@radix-ui/react-switch\"],\n    files: [\"ui/toggle.tsx\"],\n  },\n  {\n    name: \"tabs\",\n    type: \"components:ui\",\n    dependencies: [\"@radix-ui/react-tabs\"],\n    files: [\"ui/tabs.tsx\"],\n  },\n  {\n    name: \"textarea\",\n    type: \"components:ui\",\n    files: [\"ui/textarea.tsx\"],\n  },\n  {\n    name: \"toast\",\n    type: \"components:ui\",\n    dependencies: [\"@radix-ui/react-toast\"],\n    files: [\"ui/toast.tsx\", \"ui/use-toast.ts\", \"ui/toaster.tsx\"],\n  },\n  {\n    name: \"text\",\n    type: \"components:ui\",\n    dependencies: [],\n    files: [\"ui/text.tsx\"],\n  },\n  {\n    name: \"tooltip\",\n    type: \"components:ui\",\n    dependencies: [\"@radix-ui/react-tooltip\"],\n    files: [\"ui/tooltip.tsx\"],\n  },\n]\n\nconst example: Registry = [\n  {\n    name: \"collapse-demo\",\n    type: \"components:example\",\n    registryDependencies: [\"collapse\"],\n    files: [\"example/collapse-demo.tsx\"],\n  },\n  {\n    name: \"modal-demo\",\n    type: \"components:example\",\n    registryDependencies: [\"modal\", \"button\"],\n    files: [\"example/modal-demo.tsx\"],\n  },\n  {\n    name: \"aspect-ratio-demo\",\n    type: \"components:example\",\n    registryDependencies: [\"aspect-ratio\"],\n    files: [\"example/aspect-ratio-demo.tsx\"],\n  },\n  {\n    name: \"avatar-demo\",\n    type: \"components:example\",\n    registryDependencies: [\"avatar\"],\n    files: [\"example/avatar-demo.tsx\"],\n  },\n  {\n    name: \"badge-demo\",\n    type: \"components:example\",\n    registryDependencies: [\"badge\"],\n    files: [\"example/badge-demo.tsx\"],\n  },\n  {\n    name: \"badge-sizes\",\n    type: \"components:example\",\n    registryDependencies: [\"badge\"],\n    files: [\"example/badge-sizes.tsx\"],\n  },\n  {\n    name: \"badge-icons\",\n    type: \"components:example\",\n    registryDependencies: [\"badge\"],\n    files: [\"example/badge-icons.tsx\"],\n  },\n  {\n    name: \"button-demo\",\n    type: \"components:example\",\n    registryDependencies: [\"button\"],\n    files: [\"example/button-demo.tsx\"],\n  },\n  {\n    name: \"button-disabled\",\n    type: \"components:example\",\n    registryDependencies: [\"button\"],\n    files: [\"example/button-disabled.tsx\"],\n  },\n  {\n    name: \"button-loading\",\n    type: \"components:example\",\n    registryDependencies: [\"button\"],\n    files: [\"example/button-loading.tsx\"],\n  },\n  {\n    name: \"button-prefix\",\n    type: \"components:example\",\n    registryDependencies: [\"button\"],\n    files: [\"example/button-prefix.tsx\"],\n  },\n  {\n    name: \"button-rounded\",\n    type: \"components:example\",\n    registryDependencies: [\"button\"],\n    files: [\"example/button-rounded.tsx\"],\n  },\n  {\n    name: \"button-shapes\",\n    type: \"components:example\",\n    registryDependencies: [\"button\"],\n    files: [\"example/button-shapes.tsx\"],\n  },\n  {\n    name: \"button-types\",\n    type: \"components:example\",\n    registryDependencies: [\"button\"],\n    files: [\"example/button-types.tsx\"],\n  },\n  {\n    name: \"calendar-demo\",\n    type: \"components:example\",\n    registryDependencies: [\"calendar\"],\n    files: [\"example/calendar-demo.tsx\"],\n  },\n  {\n    name: \"calendar-form\",\n    type: \"components:example\",\n    registryDependencies: [\"calendar\", \"form\", \"popover\"],\n    files: [\"example/calendar-form.tsx\"],\n  },\n  {\n    name: \"card-demo\",\n    type: \"components:example\",\n    registryDependencies: [\"card\", \"button\", \"toggle\"],\n    files: [\"example/card-demo.tsx\"],\n  },\n  {\n    name: \"card-with-form\",\n    type: \"components:example\",\n    registryDependencies: [\"button\", \"card\", \"input\", \"label\", \"select\"],\n    files: [\"example/card-with-form.tsx\"],\n  },\n  {\n    name: \"checkbox-demo\",\n    type: \"components:example\",\n    registryDependencies: [\"checkbox\"],\n    files: [\"example/checkbox-demo.tsx\"],\n  },\n  {\n    name: \"checkbox-disabled\",\n    type: \"components:example\",\n    registryDependencies: [\"checkbox\"],\n    files: [\"example/checkbox-disabled.tsx\"],\n  },\n  {\n    name: \"checkbox-form-multiple\",\n    type: \"components:example\",\n    registryDependencies: [\"checkbox\", \"form\"],\n    files: [\"example/checkbox-form-multiple.tsx\"],\n  },\n  {\n    name: \"checkbox-form-single\",\n    type: \"components:example\",\n    registryDependencies: [\"checkbox\", \"form\"],\n    files: [\"example/checkbox-form-single.tsx\"],\n  },\n  {\n    name: \"checkbox-with-text\",\n    type: \"components:example\",\n    registryDependencies: [\"checkbox\"],\n    files: [\"example/checkbox-with-text.tsx\"],\n  },\n  {\n    name: \"collapsible-demo\",\n    type: \"components:example\",\n    registryDependencies: [\"collapsible\"],\n    files: [\"example/collapsible-demo.tsx\"],\n  },\n  {\n    name: \"combobox-demo\",\n    type: \"components:example\",\n    registryDependencies: [\"command\"],\n    files: [\"example/combobox-demo.tsx\"],\n  },\n  {\n    name: \"combobox-dropdown-menu\",\n    type: \"components:example\",\n    registryDependencies: [\"command\", \"menu\", \"button\"],\n    files: [\"example/combobox-dropdown-menu.tsx\"],\n  },\n  {\n    name: \"combobox-form\",\n    type: \"components:example\",\n    registryDependencies: [\"command\", \"form\"],\n    files: [\"example/combobox-form.tsx\"],\n  },\n  {\n    name: \"combobox-popover\",\n    type: \"components:example\",\n    registryDependencies: [\"combobox\", \"popover\"],\n    files: [\"example/combobox-popover.tsx\"],\n  },\n  {\n    name: \"combobox-responsive\",\n    type: \"components:example\",\n    registryDependencies: [\"combobox\", \"popover\", \"drawer\"],\n    files: [\"example/combobox-responsive.tsx\"],\n  },\n  {\n    name: \"command-demo\",\n    type: \"components:example\",\n    registryDependencies: [\"command\"],\n    files: [\"example/command-demo.tsx\"],\n  },\n  {\n    name: \"command-dialog\",\n    type: \"components:example\",\n    registryDependencies: [\"command\", \"dialog\"],\n    files: [\"example/command-dialog.tsx\"],\n  },\n  {\n    name: \"context-menu-demo\",\n    type: \"components:example\",\n    registryDependencies: [\"context-menu\"],\n    files: [\"example/context-menu-demo.tsx\"],\n  },\n  {\n    name: \"date-picker-demo\",\n    type: \"components:example\",\n    registryDependencies: [\"button\", \"calendar\", \"popover\"],\n    files: [\"example/date-picker-demo.tsx\"],\n    dependencies: [\"date-fns\"],\n  },\n  {\n    name: \"date-picker-form\",\n    type: \"components:example\",\n    registryDependencies: [\"button\", \"calendar\", \"form\", \"popover\"],\n    files: [\"example/date-picker-form.tsx\"],\n    dependencies: [\"date-fns\"],\n  },\n  {\n    name: \"date-picker-with-presets\",\n    type: \"components:example\",\n    registryDependencies: [\"button\", \"calendar\", \"popover\", \"select\"],\n    files: [\"example/date-picker-with-presets.tsx\"],\n    dependencies: [\"date-fns\"],\n  },\n  {\n    name: \"date-picker-with-range\",\n    type: \"components:example\",\n    registryDependencies: [\"button\", \"calendar\", \"popover\"],\n    files: [\"example/date-picker-with-range.tsx\"],\n    dependencies: [\"date-fns\"],\n  },\n  {\n    name: \"dialog-demo\",\n    type: \"components:example\",\n    registryDependencies: [\"dialog\"],\n    files: [\"example/dialog-demo.tsx\"],\n  },\n  {\n    name: \"dialog-close-button\",\n    type: \"components:example\",\n    registryDependencies: [\"dialog\", \"button\"],\n    files: [\"example/dialog-close-button.tsx\"],\n  },\n  {\n    name: \"drawer-demo\",\n    type: \"components:example\",\n    registryDependencies: [\"drawer\"],\n    files: [\"example/drawer-demo.tsx\"],\n  },\n  {\n    name: \"drawer-dialog\",\n    type: \"components:example\",\n    registryDependencies: [\"drawer\", \"dialog\"],\n    files: [\"example/drawer-dialog.tsx\"],\n  },\n  {\n    name: \"gauge-demo\",\n    type: \"components:example\",\n    registryDependencies: [\"gauge\"],\n    files: [\"example/gauge-demo.tsx\"],\n  },\n  {\n    name: \"gauge-label\",\n    type: \"components:example\",\n    registryDependencies: [\"gauge\"],\n    files: [\"example/gauge-label.tsx\"],\n  },\n  {\n    name: \"gauge-color-scale\",\n    type: \"components:example\",\n    registryDependencies: [\"gauge\"],\n    files: [\"example/gauge-color-scale.tsx\"],\n  },\n  {\n    name: \"gauge-custom-color-range\",\n    type: \"components:example\",\n    registryDependencies: [\"gauge\"],\n    files: [\"example/gauge-custom-color-range.tsx\"],\n  },\n  {\n    name: \"gauge-custom-secondary-color\",\n    type: \"components:example\",\n    registryDependencies: [\"gauge\"],\n    files: [\"example/gauge-custom-secondary-color.tsx\"],\n  },\n  {\n    name: \"gauge-arc-priority\",\n    type: \"components:example\",\n    registryDependencies: [\"gauge\"],\n    files: [\"example/gauge-arc-priority.tsx\"],\n  },\n  {\n    name: \"menu-demo\",\n    type: \"components:example\",\n    registryDependencies: [\"menu\"],\n    files: [\"example/menu-demo.tsx\"],\n  },\n  {\n    name: \"menu-checkboxes\",\n    type: \"components:example\",\n    registryDependencies: [\"menu\", \"checkbox\"],\n    files: [\"example/menu-checkboxes.tsx\"],\n  },\n  {\n    name: \"menu-custom-trigger\",\n    type: \"components:example\",\n    registryDependencies: [\"menu\"],\n    files: [\"example/menu-custom-trigger.tsx\"],\n  },\n  {\n    name: \"menu-disabled-items\",\n    type: \"components:example\",\n    registryDependencies: [\"menu\"],\n    files: [\"example/menu-disabled-items.tsx\"],\n  },\n  {\n    name: \"menu-link-items\",\n    type: \"components:example\",\n    registryDependencies: [\"menu\"],\n    files: [\"example/menu-link-items.tsx\"],\n  },\n  {\n    name: \"menu-position\",\n    type: \"components:example\",\n    registryDependencies: [\"menu\"],\n    files: [\"example/menu-position.tsx\"],\n  },\n  {\n    name: \"menu-prefix\",\n    type: \"components:example\",\n    registryDependencies: [\"menu\"],\n    files: [\"example/menu-prefix.tsx\"],\n  },\n  {\n    name: \"menu-radio-group\",\n    type: \"components:example\",\n    registryDependencies: [\"menu\", \"radio-group\"],\n    files: [\"example/menu-radio-group.tsx\"],\n  },\n  {\n    name: \"hover-card-demo\",\n    type: \"components:example\",\n    registryDependencies: [\"hover-card\"],\n    files: [\"example/hover-card-demo.tsx\"],\n  },\n  {\n    name: \"input-demo\",\n    type: \"components:example\",\n    registryDependencies: [\"input\"],\n    files: [\"example/input-demo.tsx\"],\n  },\n  {\n    name: \"input-disabled\",\n    type: \"components:example\",\n    registryDependencies: [\"input\"],\n    files: [\"example/input-disabled.tsx\"],\n  },\n  {\n    name: \"input-prefix-suffix\",\n    type: \"components:example\",\n    registryDependencies: [\"input\"],\n    files: [\"example/input-prefix-suffix.tsx\"],\n  },\n  {\n    name: \"input-with-button\",\n    type: \"components:example\",\n    registryDependencies: [\"input\", \"button\"],\n    files: [\"example/input-with-button.tsx\"],\n  },\n  {\n    name: \"input-with-label\",\n    type: \"components:example\",\n    registryDependencies: [\"input\", \"button\", \"label\"],\n    files: [\"example/input-with-label.tsx\"],\n  },\n  {\n    name: \"input-with-text\",\n    type: \"components:example\",\n    registryDependencies: [\"input\", \"button\", \"label\"],\n    files: [\"example/input-with-text.tsx\"],\n  },\n  {\n    name: \"kbd-demo\",\n    type: \"components:example\",\n    registryDependencies: [\"kbd\"],\n    files: [\"example/kbd-demo.tsx\"],\n  },\n  {\n    name: \"kbd-combination\",\n    type: \"components:example\",\n    registryDependencies: [\"kbd\"],\n    files: [\"example/kbd-combination.tsx\"],\n  },\n  {\n    name: \"kbd-small\",\n    type: \"components:example\",\n    registryDependencies: [\"kbd\"],\n    files: [\"example/kbd-small.tsx\"],\n  },\n  {\n    name: \"loading-dots-demo\",\n    type: \"components:example\",\n    registryDependencies: [\"loading-dots\"],\n    files: [\"example/loading-dots-demo.tsx\"],\n  },\n  {\n    name: \"loading-dots-with-text\",\n    type: \"components:example\",\n    registryDependencies: [\"loading-dots\"],\n    files: [\"example/loading-dots-with-text.tsx\"],\n  },\n  {\n    name: \"label-demo\",\n    type: \"components:example\",\n    registryDependencies: [\"label\"],\n    files: [\"example/label-demo.tsx\"],\n  },\n  {\n    name: \"menubar-demo\",\n    type: \"components:example\",\n    registryDependencies: [\"menubar\"],\n    files: [\"example/menubar-demo.tsx\"],\n  },\n  {\n    name: \"navigation-menu-demo\",\n    type: \"components:example\",\n    registryDependencies: [\"navigation-menu\"],\n    files: [\"example/navigation-menu-demo.tsx\"],\n  },\n  {\n    name: \"note-demo\",\n    type: \"components:example\",\n    registryDependencies: [\"note\"],\n    files: [\"example/note-demo.tsx\"],\n  },\n  {\n    name: \"note-action\",\n    type: \"components:example\",\n    registryDependencies: [\"note\"],\n    files: [\"example/note-action.tsx\"],\n  },\n  {\n    name: \"note-success\",\n    type: \"components:example\",\n    registryDependencies: [\"note\"],\n    files: [\"example/note-success.tsx\"],\n  },\n  {\n    name: \"note-secondary\",\n    type: \"components:example\",\n    registryDependencies: [\"note\"],\n    files: [\"example/note-secondary.tsx\"],\n  },\n  {\n    name: \"note-violet\",\n    type: \"components:example\",\n    registryDependencies: [\"note\"],\n    files: [\"example/note-violet.tsx\"],\n  },\n  {\n    name: \"note-warning\",\n    type: \"components:example\",\n    registryDependencies: [\"note\"],\n    files: [\"example/note-warning.tsx\"],\n  },\n  {\n    name: \"note-error\",\n    type: \"components:example\",\n    registryDependencies: [\"note\"],\n    files: [\"example/note-error.tsx\"],\n  },\n  {\n    name: \"note-cyan\",\n    type: \"components:example\",\n    registryDependencies: [\"note\"],\n    files: [\"example/note-cyan.tsx\"],\n  },\n  {\n    name: \"note-disabled\",\n    type: \"components:example\",\n    registryDependencies: [\"note\"],\n    files: [\"example/note-disabled.tsx\"],\n  },\n  {\n    name: \"pagination-demo\",\n    type: \"components:example\",\n    registryDependencies: [\"pagination\"],\n    files: [\"example/pagination-demo.tsx\"],\n  },\n  {\n    name: \"popover-demo\",\n    type: \"components:example\",\n    registryDependencies: [\"popover\"],\n    files: [\"example/popover-demo.tsx\"],\n  },\n  {\n    name: \"progress-demo\",\n    type: \"components:example\",\n    registryDependencies: [\"progress\"],\n    files: [\"example/progress-demo.tsx\"],\n  },\n  {\n    name: \"radio-group-demo\",\n    type: \"components:example\",\n    registryDependencies: [\"radio-group\"],\n    files: [\"example/radio-group-demo.tsx\"],\n  },\n  {\n    name: \"radio-group-form\",\n    type: \"components:example\",\n    registryDependencies: [\"radio-group\", \"form\"],\n    files: [\"example/radio-group-form.tsx\"],\n  },\n  {\n    name: \"resizable-demo\",\n    type: \"components:example\",\n    registryDependencies: [\"resizable\"],\n    files: [\"example/resizable-demo.tsx\"],\n  },\n  {\n    name: \"resizable-demo-with-handle\",\n    type: \"components:example\",\n    registryDependencies: [\"resizable\"],\n    files: [\"example/resizable-demo-with-handle.tsx\"],\n  },\n  {\n    name: \"resizable-vertical\",\n    type: \"components:example\",\n    registryDependencies: [\"resizable\"],\n    files: [\"example/resizable-vertical.tsx\"],\n  },\n  {\n    name: \"resizable-handle\",\n    type: \"components:example\",\n    registryDependencies: [\"resizable\"],\n    files: [\"example/resizable-handle.tsx\"],\n  },\n  {\n    name: \"scroll-area-demo\",\n    type: \"components:example\",\n    registryDependencies: [\"scroll-area\"],\n    files: [\"example/scroll-area-demo.tsx\"],\n  },\n  {\n    name: \"scroll-area-horizontal-demo\",\n    type: \"components:example\",\n    registryDependencies: [\"scroll-area\"],\n    files: [\"example/scroll-area-horizontal-demo.tsx\"],\n  },\n  {\n    name: \"select-demo\",\n    type: \"components:example\",\n    registryDependencies: [\"select\"],\n    files: [\"example/select-demo.tsx\"],\n  },\n  {\n    name: \"select-scrollable\",\n    type: \"components:example\",\n    registryDependencies: [\"select\"],\n    files: [\"example/select-scrollable.tsx\"],\n  },\n  {\n    name: \"select-form\",\n    type: \"components:example\",\n    registryDependencies: [\"select\"],\n    files: [\"example/select-form.tsx\"],\n  },\n  {\n    name: \"sheet-demo\",\n    type: \"components:example\",\n    registryDependencies: [\"sheet\"],\n    files: [\"example/sheet-demo.tsx\"],\n  },\n  {\n    name: \"sheet-side\",\n    type: \"components:example\",\n    registryDependencies: [\"sheet\"],\n    files: [\"example/sheet-side.tsx\"],\n  },\n  {\n    name: \"show-more-demo\",\n    type: \"components:example\",\n    registryDependencies: [\"show-more\"],\n    files: [\"example/show-more-demo.tsx\"],\n  },\n  {\n    name: \"skeleton-demo\",\n    type: \"components:example\",\n    registryDependencies: [\"skeleton\"],\n    files: [\"example/skeleton-demo.tsx\"],\n  },\n  {\n    name: \"skeleton-card\",\n    type: \"components:example\",\n    registryDependencies: [\"skeleton\"],\n    files: [\"example/skeleton-card.tsx\"],\n  },\n  {\n    name: \"snippet-demo\",\n    type: \"components:example\",\n    registryDependencies: [\"snippet\"],\n    files: [\"example/snippet-demo.tsx\"],\n  },\n  {\n    name: \"snippet-inverted\",\n    type: \"components:example\",\n    registryDependencies: [\"snippet\"],\n    files: [\"example/snippet-inverted.tsx\"],\n  },\n  {\n    name: \"snippet-multi-line\",\n    type: \"components:example\",\n    registryDependencies: [\"snippet\"],\n    files: [\"example/snippet-multi-line.tsx\"],\n  },\n  {\n    name: \"snippet-no-prompt\",\n    type: \"components:example\",\n    registryDependencies: [\"snippet\"],\n    files: [\"example/snippet-no-prompt.tsx\"],\n  },\n  {\n    name: \"snippet-callback\",\n    type: \"components:example\",\n    registryDependencies: [\"snippet\"],\n    files: [\"example/snippet-callback.tsx\"],\n  },\n  {\n    name: \"snippet-variants\",\n    type: \"components:example\",\n    registryDependencies: [\"snippet\"],\n    files: [\"example/snippet-variants.tsx\"],\n  },\n  {\n    name: \"sonner-demo\",\n    type: \"components:example\",\n    registryDependencies: [\"sonner\"],\n    files: [\"example/sonner-demo.tsx\"],\n  },\n  {\n    name: \"spinner-demo\",\n    type: \"components:example\",\n    registryDependencies: [\"spinner\"],\n    files: [\"example/spinner-demo.tsx\"],\n  },\n  {\n    name: \"spinner-size\",\n    type: \"components:example\",\n    registryDependencies: [\"spinner\"],\n    files: [\"example/spinner-size.tsx\"],\n  },\n  {\n    name: \"stack-demo\",\n    type: \"components:example\",\n    registryDependencies: [\"stack\"],\n    files: [\"example/stack-demo.tsx\"],\n  },\n  {\n    name: \"stack-padding\",\n    type: \"components:example\",\n    registryDependencies: [\"stack\"],\n    files: [\"example/stack-padding.tsx\"],\n  },\n  {\n    name: \"stack-responsive\",\n    type: \"components:example\",\n    registryDependencies: [\"stack\"],\n    files: [\"example/stack-responsive.tsx\"],\n  },\n  {\n    name: \"status-dot-demo\",\n    type: \"components:example\",\n    files: [\"example/status-dot-demo.tsx\"],\n  },\n  {\n    name: \"status-dot-label\",\n    type: \"components:example\",\n    files: [\"example/status-dot-label.tsx\"],\n  },\n  {\n    name: \"switch-demo\",\n    type: \"components:example\",\n    files: [\"example/switch-demo.tsx\"],\n  },\n  {\n    name: \"switch-disabled\",\n    type: \"components:example\",\n    files: [\"example/switch-disabled.tsx\"],\n  },\n  {\n    name: \"switch-sizes\",\n    type: \"components:example\",\n    files: [\"example/switch-sizes.tsx\"],\n  },\n  {\n    name: \"switch-full-width\",\n    type: \"components:example\",\n    files: [\"example/switch-full-width.tsx\"],\n  },\n  {\n    name: \"switch-icon\",\n    type: \"components:example\",\n    files: [\"example/switch-icon.tsx\"],\n  },\n  {\n    name: \"tabs-demo\",\n    type: \"components:example\",\n    registryDependencies: [\"tabs\"],\n    files: [\"example/tabs-demo.tsx\"],\n  },\n  {\n    name: \"tabs-controlled\",\n    type: \"components:example\",\n    registryDependencies: [\"tabs\"],\n    files: [\"example/tabs-controlled.tsx\"],\n  },\n  {\n    name: \"tabs-disable-specific-tabs\",\n    type: \"components:example\",\n    registryDependencies: [\"tabs\"],\n    files: [\"example/tabs-disable-specific-tabs.tsx\"],\n  },\n  {\n    name: \"textarea-demo\",\n    type: \"components:example\",\n    registryDependencies: [\"textarea\"],\n    files: [\"example/textarea-demo.tsx\"],\n  },\n  {\n    name: \"textarea-disabled\",\n    type: \"components:example\",\n    registryDependencies: [\"textarea\"],\n    files: [\"example/textarea-disabled.tsx\"],\n  },\n  {\n    name: \"textarea-form\",\n    type: \"components:example\",\n    registryDependencies: [\"textarea\", \"form\"],\n    files: [\"example/textarea-form.tsx\"],\n  },\n  {\n    name: \"textarea-with-button\",\n    type: \"components:example\",\n    registryDependencies: [\"textarea\", \"button\"],\n    files: [\"example/textarea-with-button.tsx\"],\n  },\n  {\n    name: \"textarea-with-label\",\n    type: \"components:example\",\n    registryDependencies: [\"textarea\", \"label\"],\n    files: [\"example/textarea-with-label.tsx\"],\n  },\n  {\n    name: \"textarea-with-text\",\n    type: \"components:example\",\n    registryDependencies: [\"textarea\", \"label\"],\n    files: [\"example/textarea-with-text.tsx\"],\n  },\n  {\n    name: \"toast-demo\",\n    type: \"components:example\",\n    registryDependencies: [\"toast\"],\n    files: [\"example/toast-demo.tsx\"],\n  },\n  {\n    name: \"toast-destructive\",\n    type: \"components:example\",\n    registryDependencies: [\"toast\"],\n    files: [\"example/toast-destructive.tsx\"],\n  },\n  {\n    name: \"toast-simple\",\n    type: \"components:example\",\n    registryDependencies: [\"toast\"],\n    files: [\"example/toast-simple.tsx\"],\n  },\n  {\n    name: \"toast-with-action\",\n    type: \"components:example\",\n    registryDependencies: [\"toast\"],\n    files: [\"example/toast-with-action.tsx\"],\n  },\n  {\n    name: \"toast-with-title\",\n    type: \"components:example\",\n    registryDependencies: [\"toast\"],\n    files: [\"example/toast-with-title.tsx\"],\n  },\n  {\n    name: \"toggle-demo\",\n    type: \"components:example\",\n    registryDependencies: [\"toggle\"],\n    files: [\"example/toggle-demo.tsx\"],\n  },\n  {\n    name: \"toggle-disabled\",\n    type: \"components:example\",\n    registryDependencies: [\"toggle\"],\n    files: [\"example/toggle-disabled.tsx\"],\n  },\n  {\n    name: \"toggle-size\",\n    type: \"components:example\",\n    registryDependencies: [\"toggle\"],\n    files: [\"example/toggle-size.tsx\"],\n  },\n  {\n    name: \"tooltip-box-align\",\n    type: \"components:example\",\n    registryDependencies: [\"tooltip\"],\n    files: [\"example/tooltip-box-align.tsx\"],\n  },\n  {\n    name: \"tooltip-components\",\n    type: \"components:example\",\n    registryDependencies: [\"tooltip\"],\n    files: [\"example/tooltip-components.tsx\"],\n  },\n  {\n    name: \"tooltip-custom-content\",\n    type: \"components:example\",\n    registryDependencies: [\"tooltip\"],\n    files: [\"example/tooltip-custom-content.tsx\"],\n  },\n  {\n    name: \"tooltip-custom-type\",\n    type: \"components:example\",\n    registryDependencies: [\"tooltip\"],\n    files: [\"example/tooltip-custom-type.tsx\"],\n  },\n  {\n    name: \"tooltip-demo\",\n    type: \"components:example\",\n    registryDependencies: [\"tooltip\"],\n    files: [\"example/tooltip-demo.tsx\"],\n  },\n  {\n    name: \"tooltip-no-delay\",\n    type: \"components:example\",\n    registryDependencies: [\"tooltip\"],\n    files: [\"example/tooltip-no-delay.tsx\"],\n  },\n  {\n    name: \"tooltip-other\",\n    type: \"components:example\",\n    registryDependencies: [\"tooltip\"],\n    files: [\"example/tooltip-other.tsx\"],\n  },\n  {\n    name: \"text-demo\",\n    type: \"components:example\",\n    files: [\"example/text-demo.tsx\"],\n  },\n  {\n    name: \"text-align\",\n    type: \"components:example\",\n    files: [\"example/text-align.tsx\"],\n  },\n  {\n    name: \"text-clamp\",\n    type: \"components:example\",\n    files: [\"example/text-clamp.tsx\"],\n  },\n  {\n    name: \"text-color\",\n    type: \"components:example\",\n    files: [\"example/text-color.tsx\"],\n  },\n  {\n    name: \"text-modifiers\",\n    type: \"components:example\",\n    files: [\"example/text-modifiers.tsx\"],\n  },\n  {\n    name: \"text-monospace\",\n    type: \"components:example\",\n    files: [\"example/text-monospace.tsx\"],\n  },\n  {\n    name: \"text-polymorphic\",\n    type: \"components:example\",\n    files: [\"example/text-polymorphic.tsx\"],\n  },\n  {\n    name: \"text-responsive\",\n    type: \"components:example\",\n    files: [\"example/text-responsive.tsx\"],\n  },\n  {\n    name: \"text-truncate\",\n    type: \"components:example\",\n    files: [\"example/text-truncate.tsx\"],\n  },\n  {\n    name: \"text-variants\",\n    type: \"components:example\",\n    files: [\"example/text-variants.tsx\"],\n  },\n  {\n    name: \"mode-toggle\",\n    type: \"components:example\",\n    files: [\"example/mode-toggle.tsx\"],\n  },\n]\n\nexport const registry: Registry = [...ui, ...example]\n",
    "dependencies": ["@/registry/schema"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/schema.ts": {
    "source": "import { z } from \"zod\"\n\nexport const registrySchema = z.array(\n  z.object({\n    name: z.string(),\n    dependencies: z.array(z.string()).optional(),\n    devDependencies: z.array(z.string()).optional(),\n    registryDependencies: z.array(z.string()).optional(),\n    files: z.array(z.string()),\n    type: z.enum([\n      \"components:ui\",\n      \"components:component\",\n      \"components:example\",\n    ]),\n  })\n)\n\nexport type Registry = z.infer<typeof registrySchema>\n",
    "dependencies": ["zod"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/styles.ts": {
    "source": "export const styles = [\n  {\n    name: \"default\",\n    label: \"Default\",\n  },\n] as const\n\nexport type Style = (typeof styles)[number]\n",
    "dependencies": []
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/registry/themes.ts": {
    "source": "export const themes = [\n  {\n    name: \"zinc\",\n    label: \"Zinc\",\n    activeColor: {\n      light: \"240 5.9% 10%\",\n      dark: \"240 5.2% 33.9%\",\n    },\n    cssVars: {\n      light: {\n        background: \"0 0% 100%\",\n        foreground: \"240 10% 3.9%\",\n        card: \"0 0% 100%\",\n        \"card-foreground\": \"240 10% 3.9%\",\n        popover: \"0 0% 100%\",\n        \"popover-foreground\": \"240 10% 3.9%\",\n        primary: \"240 5.9% 10%\",\n        \"primary-foreground\": \"0 0% 98%\",\n        secondary: \"240 4.8% 95.9%\",\n        \"secondary-foreground\": \"240 5.9% 10%\",\n        muted: \"240 4.8% 95.9%\",\n        \"muted-foreground\": \"240 3.8% 46.1%\",\n        accent: \"240 4.8% 95.9%\",\n        \"accent-foreground\": \"240 5.9% 10%\",\n        destructive: \"0 84.2% 60.2%\",\n        \"destructive-foreground\": \"0 0% 98%\",\n        border: \"240 5.9% 90%\",\n        input: \"240 5.9% 90%\",\n        ring: \"240 5.9% 10%\",\n        radius: \"0.5rem\",\n      },\n      dark: {\n        background: \"240 10% 3.9%\",\n        foreground: \"0 0% 98%\",\n        card: \"240 10% 3.9%\",\n        \"card-foreground\": \"0 0% 98%\",\n        popover: \"240 10% 3.9%\",\n        \"popover-foreground\": \"0 0% 98%\",\n        primary: \"0 0% 98%\",\n        \"primary-foreground\": \"240 5.9% 10%\",\n        secondary: \"240 3.7% 15.9%\",\n        \"secondary-foreground\": \"0 0% 98%\",\n        muted: \"240 3.7% 15.9%\",\n        \"muted-foreground\": \"240 5% 64.9%\",\n        accent: \"240 3.7% 15.9%\",\n        \"accent-foreground\": \"0 0% 98%\",\n        destructive: \"0 62.8% 30.6%\",\n        \"destructive-foreground\": \"0 0% 98%\",\n        border: \"240 3.7% 15.9%\",\n        input: \"240 3.7% 15.9%\",\n        ring: \"240 4.9% 83.9%\",\n      },\n    },\n  },\n  {\n    name: \"slate\",\n    label: \"Slate\",\n    activeColor: {\n      light: \"215.4 16.3% 46.9%\",\n      dark: \"215.3 19.3% 34.5%\",\n    },\n    cssVars: {\n      light: {\n        background: \"0 0% 100%\",\n        foreground: \"222.2 84% 4.9%\",\n        card: \"0 0% 100%\",\n        \"card-foreground\": \"222.2 84% 4.9%\",\n        popover: \"0 0% 100%\",\n        \"popover-foreground\": \"222.2 84% 4.9%\",\n        primary: \"222.2 47.4% 11.2%\",\n        \"primary-foreground\": \"210 40% 98%\",\n        secondary: \"210 40% 96.1%\",\n        \"secondary-foreground\": \"222.2 47.4% 11.2%\",\n        muted: \"210 40% 96.1%\",\n        \"muted-foreground\": \"215.4 16.3% 46.9%\",\n        accent: \"210 40% 96.1%\",\n        \"accent-foreground\": \"222.2 47.4% 11.2%\",\n        destructive: \"0 84.2% 60.2%\",\n        \"destructive-foreground\": \"210 40% 98%\",\n        border: \"214.3 31.8% 91.4%\",\n        input: \"214.3 31.8% 91.4%\",\n        ring: \"222.2 84% 4.9%\",\n        radius: \"0.5rem\",\n      },\n      dark: {\n        background: \"222.2 84% 4.9%\",\n        foreground: \"210 40% 98%\",\n        card: \"222.2 84% 4.9%\",\n        \"card-foreground\": \"210 40% 98%\",\n        popover: \"222.2 84% 4.9%\",\n        \"popover-foreground\": \"210 40% 98%\",\n        primary: \"210 40% 98%\",\n        \"primary-foreground\": \"222.2 47.4% 11.2%\",\n        secondary: \"217.2 32.6% 17.5%\",\n        \"secondary-foreground\": \"210 40% 98%\",\n        muted: \"217.2 32.6% 17.5%\",\n        \"muted-foreground\": \"215 20.2% 65.1%\",\n        accent: \"217.2 32.6% 17.5%\",\n        \"accent-foreground\": \"210 40% 98%\",\n        destructive: \"0 62.8% 30.6%\",\n        \"destructive-foreground\": \"210 40% 98%\",\n        border: \"217.2 32.6% 17.5%\",\n        input: \"217.2 32.6% 17.5%\",\n        ring: \"212.7 26.8% 83.9\",\n      },\n    },\n  },\n  {\n    name: \"stone\",\n    label: \"Stone\",\n    activeColor: {\n      light: \"25 5.3% 44.7%\",\n      dark: \"33.3 5.5% 32.4%\",\n    },\n    cssVars: {\n      light: {\n        background: \"0 0% 100%\",\n        foreground: \"20 14.3% 4.1%\",\n        card: \"0 0% 100%\",\n        \"card-foreground\": \"20 14.3% 4.1%\",\n        popover: \"0 0% 100%\",\n        \"popover-foreground\": \"20 14.3% 4.1%\",\n        primary: \"24 9.8% 10%\",\n        \"primary-foreground\": \"60 9.1% 97.8%\",\n        secondary: \"60 4.8% 95.9%\",\n        \"secondary-foreground\": \"24 9.8% 10%\",\n        muted: \"60 4.8% 95.9%\",\n        \"muted-foreground\": \"25 5.3% 44.7%\",\n        accent: \"60 4.8% 95.9%\",\n        \"accent-foreground\": \"24 9.8% 10%\",\n        destructive: \"0 84.2% 60.2%\",\n        \"destructive-foreground\": \"60 9.1% 97.8%\",\n        border: \"20 5.9% 90%\",\n        input: \"20 5.9% 90%\",\n        ring: \"20 14.3% 4.1%\",\n        radius: \"0.95rem\",\n      },\n      dark: {\n        background: \"20 14.3% 4.1%\",\n        foreground: \"60 9.1% 97.8%\",\n        card: \"20 14.3% 4.1%\",\n        \"card-foreground\": \"60 9.1% 97.8%\",\n        popover: \"20 14.3% 4.1%\",\n        \"popover-foreground\": \"60 9.1% 97.8%\",\n        primary: \"60 9.1% 97.8%\",\n        \"primary-foreground\": \"24 9.8% 10%\",\n        secondary: \"12 6.5% 15.1%\",\n        \"secondary-foreground\": \"60 9.1% 97.8%\",\n        muted: \"12 6.5% 15.1%\",\n        \"muted-foreground\": \"24 5.4% 63.9%\",\n        accent: \"12 6.5% 15.1%\",\n        \"accent-foreground\": \"60 9.1% 97.8%\",\n        destructive: \"0 62.8% 30.6%\",\n        \"destructive-foreground\": \"60 9.1% 97.8%\",\n        border: \"12 6.5% 15.1%\",\n        input: \"12 6.5% 15.1%\",\n        ring: \"24 5.7% 82.9%\",\n      },\n    },\n  },\n  {\n    name: \"gray\",\n    label: \"Gray\",\n    activeColor: {\n      light: \"220 8.9% 46.1%\",\n      dark: \"215 13.8% 34.1%\",\n    },\n    cssVars: {\n      light: {\n        background: \"0 0% 100%\",\n        foreground: \"224 71.4% 4.1%\",\n        card: \"0 0% 100%\",\n        \"card-foreground\": \"224 71.4% 4.1%\",\n        popover: \"0 0% 100%\",\n        \"popover-foreground\": \"224 71.4% 4.1%\",\n        primary: \"220.9 39.3% 11%\",\n        \"primary-foreground\": \"210 20% 98%\",\n        secondary: \"220 14.3% 95.9%\",\n        \"secondary-foreground\": \"220.9 39.3% 11%\",\n        muted: \"220 14.3% 95.9%\",\n        \"muted-foreground\": \"220 8.9% 46.1%\",\n        accent: \"220 14.3% 95.9%\",\n        \"accent-foreground\": \"220.9 39.3% 11%\",\n        destructive: \"0 84.2% 60.2%\",\n        \"destructive-foreground\": \"210 20% 98%\",\n        border: \"220 13% 91%\",\n        input: \"220 13% 91%\",\n        ring: \"224 71.4% 4.1%\",\n        radius: \"0.35rem\",\n      },\n      dark: {\n        background: \"224 71.4% 4.1%\",\n        foreground: \"210 20% 98%\",\n        card: \"224 71.4% 4.1%\",\n        \"card-foreground\": \"210 20% 98%\",\n        popover: \"224 71.4% 4.1%\",\n        \"popover-foreground\": \"210 20% 98%\",\n        primary: \"210 20% 98%\",\n        \"primary-foreground\": \"220.9 39.3% 11%\",\n        secondary: \"215 27.9% 16.9%\",\n        \"secondary-foreground\": \"210 20% 98%\",\n        muted: \"215 27.9% 16.9%\",\n        \"muted-foreground\": \"217.9 10.6% 64.9%\",\n        accent: \"215 27.9% 16.9%\",\n        \"accent-foreground\": \"210 20% 98%\",\n        destructive: \"0 62.8% 30.6%\",\n        \"destructive-foreground\": \"210 20% 98%\",\n        border: \"215 27.9% 16.9%\",\n        input: \"215 27.9% 16.9%\",\n        ring: \"216 12.2% 83.9%\",\n      },\n    },\n  },\n  {\n    name: \"neutral\",\n    label: \"Neutral\",\n    activeColor: {\n      light: \"0 0% 45.1%\",\n      dark: \"0 0% 32.2%\",\n    },\n    cssVars: {\n      light: {\n        background: \"0 0% 100%\",\n        foreground: \"0 0% 3.9%\",\n        card: \"0 0% 100%\",\n        \"card-foreground\": \"0 0% 3.9%\",\n        popover: \"0 0% 100%\",\n        \"popover-foreground\": \"0 0% 3.9%\",\n        primary: \"0 0% 9%\",\n        \"primary-foreground\": \"0 0% 98%\",\n        secondary: \"0 0% 96.1%\",\n        \"secondary-foreground\": \"0 0% 9%\",\n        muted: \"0 0% 96.1%\",\n        \"muted-foreground\": \"0 0% 45.1%\",\n        accent: \"0 0% 96.1%\",\n        \"accent-foreground\": \"0 0% 9%\",\n        destructive: \"0 84.2% 60.2%\",\n        \"destructive-foreground\": \"0 0% 98%\",\n        border: \"0 0% 89.8%\",\n        input: \"0 0% 89.8%\",\n        ring: \"0 0% 3.9%\",\n      },\n      dark: {\n        background: \"0 0% 3.9%\",\n        foreground: \"0 0% 98%\",\n        card: \"0 0% 3.9%\",\n        \"card-foreground\": \"0 0% 98%\",\n        popover: \"0 0% 3.9%\",\n        \"popover-foreground\": \"0 0% 98%\",\n        primary: \"0 0% 98%\",\n        \"primary-foreground\": \"0 0% 9%\",\n        secondary: \"0 0% 14.9%\",\n        \"secondary-foreground\": \"0 0% 98%\",\n        muted: \"0 0% 14.9%\",\n        \"muted-foreground\": \"0 0% 63.9%\",\n        accent: \"0 0% 14.9%\",\n        \"accent-foreground\": \"0 0% 98%\",\n        destructive: \"0 62.8% 30.6%\",\n        \"destructive-foreground\": \"0 0% 98%\",\n        border: \"0 0% 14.9%\",\n        input: \"0 0% 14.9%\",\n        ring: \"0 0% 83.1%\",\n      },\n    },\n  },\n  {\n    name: \"red\",\n    label: \"Red\",\n    activeColor: {\n      light: \"0 72.2% 50.6%\",\n      dark: \"0 72.2% 50.6%\",\n    },\n    cssVars: {\n      light: {\n        background: \"0 0% 100%\",\n        foreground: \"0 0% 3.9%\",\n        card: \"0 0% 100%\",\n        \"card-foreground\": \"0 0% 3.9%\",\n        popover: \"0 0% 100%\",\n        \"popover-foreground\": \"0 0% 3.9%\",\n        primary: \"0 72.2% 50.6%\",\n        \"primary-foreground\": \"0 85.7% 97.3%\",\n        secondary: \"0 0% 96.1%\",\n        \"secondary-foreground\": \"0 0% 9%\",\n        muted: \"0 0% 96.1%\",\n        \"muted-foreground\": \"0 0% 45.1%\",\n        accent: \"0 0% 96.1%\",\n        \"accent-foreground\": \"0 0% 9%\",\n        destructive: \"0 84.2% 60.2%\",\n        \"destructive-foreground\": \"0 0% 98%\",\n        border: \"0 0% 89.8%\",\n        input: \"0 0% 89.8%\",\n        ring: \"0 72.2% 50.6%\",\n        radius: \"0.4rem\",\n      },\n      dark: {\n        background: \"0 0% 3.9%\",\n        foreground: \"0 0% 98%\",\n        card: \"0 0% 3.9%\",\n        \"card-foreground\": \"0 0% 98%\",\n        popover: \"0 0% 3.9%\",\n        \"popover-foreground\": \"0 0% 98%\",\n        primary: \"0 72.2% 50.6%\",\n        \"primary-foreground\": \"0 85.7% 97.3%\",\n        secondary: \"0 0% 14.9%\",\n        \"secondary-foreground\": \"0 0% 98%\",\n        muted: \"0 0% 14.9%\",\n        \"muted-foreground\": \"0 0% 63.9%\",\n        accent: \"0 0% 14.9%\",\n        \"accent-foreground\": \"0 0% 98%\",\n        destructive: \"0 62.8% 30.6%\",\n        \"destructive-foreground\": \"0 0% 98%\",\n        border: \"0 0% 14.9%\",\n        input: \"0 0% 14.9%\",\n        ring: \"0 72.2% 50.6%\",\n      },\n    },\n  },\n  {\n    name: \"rose\",\n    label: \"Rose\",\n    activeColor: {\n      light: \"346.8 77.2% 49.8%\",\n      dark: \"346.8 77.2% 49.8%\",\n    },\n    cssVars: {\n      light: {\n        background: \"0 0% 100%\",\n        foreground: \"240 10% 3.9%\",\n        card: \"0 0% 100%\",\n        \"card-foreground\": \"240 10% 3.9%\",\n        popover: \"0 0% 100%\",\n        \"popover-foreground\": \"240 10% 3.9%\",\n        primary: \"346.8 77.2% 49.8%\",\n        \"primary-foreground\": \"355.7 100% 97.3%\",\n        secondary: \"240 4.8% 95.9%\",\n        \"secondary-foreground\": \"240 5.9% 10%\",\n        muted: \"240 4.8% 95.9%\",\n        \"muted-foreground\": \"240 3.8% 46.1%\",\n        accent: \"240 4.8% 95.9%\",\n        \"accent-foreground\": \"240 5.9% 10%\",\n        destructive: \"0 84.2% 60.2%\",\n        \"destructive-foreground\": \"0 0% 98%\",\n        border: \"240 5.9% 90%\",\n        input: \"240 5.9% 90%\",\n        ring: \"346.8 77.2% 49.8%\",\n        radius: \"0.5rem\",\n      },\n      dark: {\n        background: \"20 14.3% 4.1%\",\n        foreground: \"0 0% 95%\",\n        popover: \"0 0% 9%\",\n        \"popover-foreground\": \"0 0% 95%\",\n        card: \"24 9.8% 10%\",\n        \"card-foreground\": \"0 0% 95%\",\n        primary: \"346.8 77.2% 49.8%\",\n        \"primary-foreground\": \"355.7 100% 97.3%\",\n        secondary: \"240 3.7% 15.9%\",\n        \"secondary-foreground\": \"0 0% 98%\",\n        muted: \"0 0% 15%\",\n        \"muted-foreground\": \"240 5% 64.9%\",\n        accent: \"12 6.5% 15.1%\",\n        \"accent-foreground\": \"0 0% 98%\",\n        destructive: \"0 62.8% 30.6%\",\n        \"destructive-foreground\": \"0 85.7% 97.3%\",\n        border: \"240 3.7% 15.9%\",\n        input: \"240 3.7% 15.9%\",\n        ring: \"346.8 77.2% 49.8%\",\n      },\n    },\n  },\n  {\n    name: \"orange\",\n    label: \"Orange\",\n    activeColor: {\n      light: \"24.6 95% 53.1%\",\n      dark: \"20.5 90.2% 48.2%\",\n    },\n    cssVars: {\n      light: {\n        background: \"0 0% 100%\",\n        foreground: \"20 14.3% 4.1%\",\n        card: \"0 0% 100%\",\n        \"card-foreground\": \"20 14.3% 4.1%\",\n        popover: \"0 0% 100%\",\n        \"popover-foreground\": \"20 14.3% 4.1%\",\n        primary: \"24.6 95% 53.1%\",\n        \"primary-foreground\": \"60 9.1% 97.8%\",\n        secondary: \"60 4.8% 95.9%\",\n        \"secondary-foreground\": \"24 9.8% 10%\",\n        muted: \"60 4.8% 95.9%\",\n        \"muted-foreground\": \"25 5.3% 44.7%\",\n        accent: \"60 4.8% 95.9%\",\n        \"accent-foreground\": \"24 9.8% 10%\",\n        destructive: \"0 84.2% 60.2%\",\n        \"destructive-foreground\": \"60 9.1% 97.8%\",\n        border: \"20 5.9% 90%\",\n        input: \"20 5.9% 90%\",\n        ring: \"24.6 95% 53.1%\",\n        radius: \"0.95rem\",\n      },\n      dark: {\n        background: \"20 14.3% 4.1%\",\n        foreground: \"60 9.1% 97.8%\",\n        card: \"20 14.3% 4.1%\",\n        \"card-foreground\": \"60 9.1% 97.8%\",\n        popover: \"20 14.3% 4.1%\",\n        \"popover-foreground\": \"60 9.1% 97.8%\",\n        primary: \"20.5 90.2% 48.2%\",\n        \"primary-foreground\": \"60 9.1% 97.8%\",\n        secondary: \"12 6.5% 15.1%\",\n        \"secondary-foreground\": \"60 9.1% 97.8%\",\n        muted: \"12 6.5% 15.1%\",\n        \"muted-foreground\": \"24 5.4% 63.9%\",\n        accent: \"12 6.5% 15.1%\",\n        \"accent-foreground\": \"60 9.1% 97.8%\",\n        destructive: \"0 72.2% 50.6%\",\n        \"destructive-foreground\": \"60 9.1% 97.8%\",\n        border: \"12 6.5% 15.1%\",\n        input: \"12 6.5% 15.1%\",\n        ring: \"20.5 90.2% 48.2%\",\n      },\n    },\n  },\n  {\n    name: \"green\",\n    label: \"Green\",\n    activeColor: {\n      light: \"142.1 76.2% 36.3%\",\n      dark: \"142.1 70.6% 45.3%\",\n    },\n    cssVars: {\n      light: {\n        background: \"0 0% 100%\",\n        foreground: \"240 10% 3.9%\",\n        card: \"0 0% 100%\",\n        \"card-foreground\": \"240 10% 3.9%\",\n        popover: \"0 0% 100%\",\n        \"popover-foreground\": \"240 10% 3.9%\",\n        primary: \"142.1 76.2% 36.3%\",\n        \"primary-foreground\": \"355.7 100% 97.3%\",\n        secondary: \"240 4.8% 95.9%\",\n        \"secondary-foreground\": \"240 5.9% 10%\",\n        muted: \"240 4.8% 95.9%\",\n        \"muted-foreground\": \"240 3.8% 46.1%\",\n        accent: \"240 4.8% 95.9%\",\n        \"accent-foreground\": \"240 5.9% 10%\",\n        destructive: \"0 84.2% 60.2%\",\n        \"destructive-foreground\": \"0 0% 98%\",\n        border: \"240 5.9% 90%\",\n        input: \"240 5.9% 90%\",\n        ring: \"142.1 76.2% 36.3%\",\n      },\n      dark: {\n        background: \"20 14.3% 4.1%\",\n        foreground: \"0 0% 95%\",\n        popover: \"0 0% 9%\",\n        \"popover-foreground\": \"0 0% 95%\",\n        card: \"24 9.8% 10%\",\n        \"card-foreground\": \"0 0% 95%\",\n        primary: \"142.1 70.6% 45.3%\",\n        \"primary-foreground\": \"144.9 80.4% 10%\",\n        secondary: \"240 3.7% 15.9%\",\n        \"secondary-foreground\": \"0 0% 98%\",\n        muted: \"0 0% 15%\",\n        \"muted-foreground\": \"240 5% 64.9%\",\n        accent: \"12 6.5% 15.1%\",\n        \"accent-foreground\": \"0 0% 98%\",\n        destructive: \"0 62.8% 30.6%\",\n        \"destructive-foreground\": \"0 85.7% 97.3%\",\n        border: \"240 3.7% 15.9%\",\n        input: \"240 3.7% 15.9%\",\n        ring: \"142.4 71.8% 29.2%\",\n      },\n    },\n  },\n  {\n    name: \"blue\",\n    label: \"Blue\",\n    activeColor: {\n      light: \"221.2 83.2% 53.3%\",\n      dark: \"217.2 91.2% 59.8%\",\n    },\n    cssVars: {\n      light: {\n        background: \"0 0% 100%\",\n        foreground: \"222.2 84% 4.9%\",\n        card: \"0 0% 100%\",\n        \"card-foreground\": \"222.2 84% 4.9%\",\n        popover: \"0 0% 100%\",\n        \"popover-foreground\": \"222.2 84% 4.9%\",\n        primary: \"221.2 83.2% 53.3%\",\n        \"primary-foreground\": \"210 40% 98%\",\n        secondary: \"210 40% 96.1%\",\n        \"secondary-foreground\": \"222.2 47.4% 11.2%\",\n        muted: \"210 40% 96.1%\",\n        \"muted-foreground\": \"215.4 16.3% 46.9%\",\n        accent: \"210 40% 96.1%\",\n        \"accent-foreground\": \"222.2 47.4% 11.2%\",\n        destructive: \"0 84.2% 60.2%\",\n        \"destructive-foreground\": \"210 40% 98%\",\n        border: \"214.3 31.8% 91.4%\",\n        input: \"214.3 31.8% 91.4%\",\n        ring: \"221.2 83.2% 53.3%\",\n      },\n      dark: {\n        background: \"222.2 84% 4.9%\",\n        foreground: \"210 40% 98%\",\n        card: \"222.2 84% 4.9%\",\n        \"card-foreground\": \"210 40% 98%\",\n        popover: \"222.2 84% 4.9%\",\n        \"popover-foreground\": \"210 40% 98%\",\n        primary: \"217.2 91.2% 59.8%\",\n        \"primary-foreground\": \"222.2 47.4% 11.2%\",\n        secondary: \"217.2 32.6% 17.5%\",\n        \"secondary-foreground\": \"210 40% 98%\",\n        muted: \"217.2 32.6% 17.5%\",\n        \"muted-foreground\": \"215 20.2% 65.1%\",\n        accent: \"217.2 32.6% 17.5%\",\n        \"accent-foreground\": \"210 40% 98%\",\n        destructive: \"0 62.8% 30.6%\",\n        \"destructive-foreground\": \"210 40% 98%\",\n        border: \"217.2 32.6% 17.5%\",\n        input: \"217.2 32.6% 17.5%\",\n        ring: \"224.3 76.3% 48%\",\n      },\n    },\n  },\n  {\n    name: \"yellow\",\n    label: \"Yellow\",\n    activeColor: {\n      light: \"47.9 95.8% 53.1%\",\n      dark: \"47.9 95.8% 53.1%\",\n    },\n    cssVars: {\n      light: {\n        background: \"0 0% 100%\",\n        foreground: \"20 14.3% 4.1%\",\n        card: \"0 0% 100%\",\n        \"card-foreground\": \"20 14.3% 4.1%\",\n        popover: \"0 0% 100%\",\n        \"popover-foreground\": \"20 14.3% 4.1%\",\n        primary: \"47.9 95.8% 53.1%\",\n        \"primary-foreground\": \"26 83.3% 14.1%\",\n        secondary: \"60 4.8% 95.9%\",\n        \"secondary-foreground\": \"24 9.8% 10%\",\n        muted: \"60 4.8% 95.9%\",\n        \"muted-foreground\": \"25 5.3% 44.7%\",\n        accent: \"60 4.8% 95.9%\",\n        \"accent-foreground\": \"24 9.8% 10%\",\n        destructive: \"0 84.2% 60.2%\",\n        \"destructive-foreground\": \"60 9.1% 97.8%\",\n        border: \"20 5.9% 90%\",\n        input: \"20 5.9% 90%\",\n        ring: \"20 14.3% 4.1%\",\n        radius: \"0.95rem\",\n      },\n      dark: {\n        background: \"20 14.3% 4.1%\",\n        foreground: \"60 9.1% 97.8%\",\n        card: \"20 14.3% 4.1%\",\n        \"card-foreground\": \"60 9.1% 97.8%\",\n        popover: \"20 14.3% 4.1%\",\n        \"popover-foreground\": \"60 9.1% 97.8%\",\n        primary: \"47.9 95.8% 53.1%\",\n        \"primary-foreground\": \"26 83.3% 14.1%\",\n        secondary: \"12 6.5% 15.1%\",\n        \"secondary-foreground\": \"60 9.1% 97.8%\",\n        muted: \"12 6.5% 15.1%\",\n        \"muted-foreground\": \"24 5.4% 63.9%\",\n        accent: \"12 6.5% 15.1%\",\n        \"accent-foreground\": \"60 9.1% 97.8%\",\n        destructive: \"0 62.8% 30.6%\",\n        \"destructive-foreground\": \"60 9.1% 97.8%\",\n        border: \"12 6.5% 15.1%\",\n        input: \"12 6.5% 15.1%\",\n        ring: \"35.5 91.7% 32.9%\",\n      },\n    },\n  },\n  {\n    name: \"violet\",\n    label: \"Violet\",\n    activeColor: {\n      light: \"262.1 83.3% 57.8%\",\n      dark: \"263.4 70% 50.4%\",\n    },\n    cssVars: {\n      light: {\n        background: \"0 0% 100%\",\n        foreground: \"224 71.4% 4.1%\",\n        card: \"0 0% 100%\",\n        \"card-foreground\": \"224 71.4% 4.1%\",\n        popover: \"0 0% 100%\",\n        \"popover-foreground\": \"224 71.4% 4.1%\",\n        primary: \"262.1 83.3% 57.8%\",\n        \"primary-foreground\": \"210 20% 98%\",\n        secondary: \"220 14.3% 95.9%\",\n        \"secondary-foreground\": \"220.9 39.3% 11%\",\n        muted: \"220 14.3% 95.9%\",\n        \"muted-foreground\": \"220 8.9% 46.1%\",\n        accent: \"220 14.3% 95.9%\",\n        \"accent-foreground\": \"220.9 39.3% 11%\",\n        destructive: \"0 84.2% 60.2%\",\n        \"destructive-foreground\": \"210 20% 98%\",\n        border: \"220 13% 91%\",\n        input: \"220 13% 91%\",\n        ring: \"262.1 83.3% 57.8%\",\n      },\n      dark: {\n        background: \"224 71.4% 4.1%\",\n        foreground: \"210 20% 98%\",\n        card: \"224 71.4% 4.1%\",\n        \"card-foreground\": \"210 20% 98%\",\n        popover: \"224 71.4% 4.1%\",\n        \"popover-foreground\": \"210 20% 98%\",\n        primary: \"263.4 70% 50.4%\",\n        \"primary-foreground\": \"210 20% 98%\",\n        secondary: \"215 27.9% 16.9%\",\n        \"secondary-foreground\": \"210 20% 98%\",\n        muted: \"215 27.9% 16.9%\",\n        \"muted-foreground\": \"217.9 10.6% 64.9%\",\n        accent: \"215 27.9% 16.9%\",\n        \"accent-foreground\": \"210 20% 98%\",\n        destructive: \"0 62.8% 30.6%\",\n        \"destructive-foreground\": \"210 20% 98%\",\n        border: \"215 27.9% 16.9%\",\n        input: \"215 27.9% 16.9%\",\n        ring: \"263.4 70% 50.4%\",\n      },\n    },\n  },\n] as const\n\nexport type Theme = (typeof themes)[number]\n",
    "dependencies": []
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/scripts/build-registry.ts": {
    "source": "// @ts-nocheck\nimport fs from \"fs\"\nimport path, { basename } from \"path\"\nimport template from \"lodash.template\"\nimport { rimraf } from \"rimraf\"\n\nimport { colorMapping, colors } from \"../registry/colors\"\nimport { registry } from \"../registry/registry\"\nimport { registrySchema } from \"../registry/schema\"\nimport { styles } from \"../registry/styles\"\nimport { themes } from \"../registry/themes\"\n\nconst REGISTRY_PATH = path.join(process.cwd(), \"public/registry\")\n\nconst result = registrySchema.safeParse(registry)\n\nif (!result.success) {\n  console.error(result.error)\n  process.exit(1)\n}\n\n// ----------------------------------------------------------------------------\n// Build __registry__/index.tsx.\n// ----------------------------------------------------------------------------\nlet index = `// @ts-nocheck\n// This file is autogenerated by scripts/build-registry.ts\n// Do not edit this file directly.\nimport * as React from \"react\"\n\nexport const Index: Record<string, any> = {\n`\n\nfor (const style of styles) {\n  index += `  \"${style.name}\": {`\n\n  // Build style index.\n  for (const item of result.data) {\n    // if (item.type === \"components:ui\") {\n    //   continue\n    // }\n\n    const resolveFiles = item.files.map(\n      (file) => `registry/${style.name}/${file}`\n    )\n\n    const type = item.type.split(\":\")[1]\n    index += `\n    \"${item.name}\": {\n      name: \"${item.name}\",\n      type: \"${item.type}\",\n      registryDependencies: ${JSON.stringify(item.registryDependencies)},\n      component: React.lazy(() => import(\"@/registry/${style.name}/${type}/${\n        item.name\n      }\")),\n      files: [${resolveFiles.map((file) => `\"${file}\"`)}],\n    },`\n  }\n\n  index += `\n  },`\n}\n\nindex += `\n}\n`\n\n// Write style index.\nrimraf.sync(path.join(process.cwd(), \"__registry__/index.tsx\"))\nfs.writeFileSync(path.join(process.cwd(), \"__registry__/index.tsx\"), index)\n\n// ----------------------------------------------------------------------------\n// Build registry/styles/[style]/[name].json.\n// ----------------------------------------------------------------------------\nfor (const style of styles) {\n  const targetPath = path.join(REGISTRY_PATH, \"styles\", style.name)\n\n  // Create directory if it doesn't exist.\n  if (!fs.existsSync(targetPath)) {\n    fs.mkdirSync(targetPath, { recursive: true })\n  }\n\n  for (const item of result.data) {\n    if (item.type !== \"components:ui\") {\n      continue\n    }\n\n    const files = item.files?.map((file) => {\n      const content = fs.readFileSync(\n        path.join(process.cwd(), \"registry\", style.name, file),\n        \"utf8\"\n      )\n\n      return {\n        name: basename(file),\n        content,\n      }\n    })\n\n    const payload = {\n      ...item,\n      files,\n    }\n\n    fs.writeFileSync(\n      path.join(targetPath, `${item.name}.json`),\n      JSON.stringify(payload, null, 2),\n      \"utf8\"\n    )\n  }\n}\n\n// ----------------------------------------------------------------------------\n// Build registry/styles/index.json.\n// ----------------------------------------------------------------------------\nconst stylesJson = JSON.stringify(styles, null, 2)\nfs.writeFileSync(\n  path.join(REGISTRY_PATH, \"styles/index.json\"),\n  stylesJson,\n  \"utf8\"\n)\n\n// ----------------------------------------------------------------------------\n// Build registry/index.json.\n// ----------------------------------------------------------------------------\nconst names = result.data.filter((item) => item.type === \"components:ui\")\nconst registryJson = JSON.stringify(names, null, 2)\nrimraf.sync(path.join(REGISTRY_PATH, \"index.json\"))\nfs.writeFileSync(path.join(REGISTRY_PATH, \"index.json\"), registryJson, \"utf8\")\n\n// ----------------------------------------------------------------------------\n// Build registry/colors/index.json.\n// ----------------------------------------------------------------------------\nconst colorsTargetPath = path.join(REGISTRY_PATH, \"colors\")\nrimraf.sync(colorsTargetPath)\nif (!fs.existsSync(colorsTargetPath)) {\n  fs.mkdirSync(colorsTargetPath, { recursive: true })\n}\n\nconst colorsData: Record<string, any> = {}\nfor (const [color, value] of Object.entries(colors)) {\n  if (typeof value === \"string\") {\n    colorsData[color] = value\n    continue\n  }\n\n  if (Array.isArray(value)) {\n    colorsData[color] = value.map((item) => ({\n      ...item,\n      rgbChannel: item.rgb.replace(/^rgb\\((\\d+),(\\d+),(\\d+)\\)$/, \"$1 $2 $3\"),\n      hslChannel: item.hsl.replace(\n        /^hsl\\(([\\d.]+),([\\d.]+%),([\\d.]+%)\\)$/,\n        \"$1 $2 $3\"\n      ),\n    }))\n    continue\n  }\n\n  if (typeof value === \"object\") {\n    colorsData[color] = {\n      ...value,\n      rgbChannel: value.rgb.replace(/^rgb\\((\\d+),(\\d+),(\\d+)\\)$/, \"$1 $2 $3\"),\n      hslChannel: value.hsl.replace(\n        /^hsl\\(([\\d.]+),([\\d.]+%),([\\d.]+%)\\)$/,\n        \"$1 $2 $3\"\n      ),\n    }\n    continue\n  }\n}\n\nfs.writeFileSync(\n  path.join(colorsTargetPath, \"index.json\"),\n  JSON.stringify(colorsData, null, 2),\n  \"utf8\"\n)\n\n// ----------------------------------------------------------------------------\n// Build registry/colors/[base].json.\n// ----------------------------------------------------------------------------\nexport const BASE_STYLES = `@tailwind base;\n@tailwind components;\n@tailwind utilities;\n`\n\nexport const BASE_STYLES_WITH_VARIABLES = `@tailwind base;\n@tailwind components;\n@tailwind utilities;\n \n@layer base {\n  :root {\n    --background: <%- colors.light[\"background\"] %>;\n    --foreground: <%- colors.light[\"foreground\"] %>;\n\n    --card: <%- colors.light[\"card\"] %>;\n    --card-foreground: <%- colors.light[\"card-foreground\"] %>;\n \n    --popover: <%- colors.light[\"popover\"] %>;\n    --popover-foreground: <%- colors.light[\"popover-foreground\"] %>;\n \n    --primary: <%- colors.light[\"primary\"] %>;\n    --primary-foreground: <%- colors.light[\"primary-foreground\"] %>;\n \n    --secondary: <%- colors.light[\"secondary\"] %>;\n    --secondary-foreground: <%- colors.light[\"secondary-foreground\"] %>;\n \n    --muted: <%- colors.light[\"muted\"] %>;\n    --muted-foreground: <%- colors.light[\"muted-foreground\"] %>;\n \n    --accent: <%- colors.light[\"accent\"] %>;\n    --accent-foreground: <%- colors.light[\"accent-foreground\"] %>;\n \n    --destructive: <%- colors.light[\"destructive\"] %>;\n    --destructive-foreground: <%- colors.light[\"destructive-foreground\"] %>;\n\n    --border: <%- colors.light[\"border\"] %>;\n    --input: <%- colors.light[\"input\"] %>;\n    --ring: <%- colors.light[\"ring\"] %>;\n \n    --radius: 0.5rem;\n  }\n \n  .dark {\n    --background: <%- colors.dark[\"background\"] %>;\n    --foreground: <%- colors.dark[\"foreground\"] %>;\n \n    --card: <%- colors.dark[\"card\"] %>;\n    --card-foreground: <%- colors.dark[\"card-foreground\"] %>;\n \n    --popover: <%- colors.dark[\"popover\"] %>;\n    --popover-foreground: <%- colors.dark[\"popover-foreground\"] %>;\n \n    --primary: <%- colors.dark[\"primary\"] %>;\n    --primary-foreground: <%- colors.dark[\"primary-foreground\"] %>;\n \n    --secondary: <%- colors.dark[\"secondary\"] %>;\n    --secondary-foreground: <%- colors.dark[\"secondary-foreground\"] %>;\n \n    --muted: <%- colors.dark[\"muted\"] %>;\n    --muted-foreground: <%- colors.dark[\"muted-foreground\"] %>;\n \n    --accent: <%- colors.dark[\"accent\"] %>;\n    --accent-foreground: <%- colors.dark[\"accent-foreground\"] %>;\n \n    --destructive: <%- colors.dark[\"destructive\"] %>;\n    --destructive-foreground: <%- colors.dark[\"destructive-foreground\"] %>;\n \n    --border: <%- colors.dark[\"border\"] %>;\n    --input: <%- colors.dark[\"input\"] %>;\n    --ring: <%- colors.dark[\"ring\"] %>;\n  }\n}\n \n@layer base {\n  * {\n    @apply border-border;\n  }\n  body {\n    @apply bg-background-200 text-foreground;\n  }\n}`\n\nfor (const baseColor of [\"slate\", \"gray\", \"zinc\", \"neutral\", \"stone\"]) {\n  const base: Record<string, any> = {\n    inlineColors: {},\n    cssVars: {},\n  }\n  for (const [mode, values] of Object.entries(colorMapping)) {\n    base[\"inlineColors\"][mode] = {}\n    base[\"cssVars\"][mode] = {}\n    for (const [key, value] of Object.entries(values)) {\n      if (typeof value === \"string\") {\n        const resolvedColor = value.replace(/{{base}}-/g, `${baseColor}-`)\n        base[\"inlineColors\"][mode][key] = resolvedColor\n\n        const [resolvedBase, scale] = resolvedColor.split(\"-\")\n        const color = scale\n          ? colorsData[resolvedBase].find(\n              (item) => item.scale === parseInt(scale)\n            )\n          : colorsData[resolvedBase]\n        if (color) {\n          base[\"cssVars\"][mode][key] = color.hslChannel\n        }\n      }\n    }\n  }\n\n  // Build css vars.\n  base[\"inlineColorsTemplate\"] = template(BASE_STYLES)({})\n  base[\"cssVarsTemplate\"] = template(BASE_STYLES_WITH_VARIABLES)({\n    colors: base[\"cssVars\"],\n  })\n\n  fs.writeFileSync(\n    path.join(REGISTRY_PATH, `colors/${baseColor}.json`),\n    JSON.stringify(base, null, 2),\n    \"utf8\"\n  )\n}\n\n// ----------------------------------------------------------------------------\n// Build registry/themes.css\n// ----------------------------------------------------------------------------\nexport const THEME_STYLES_WITH_VARIABLES = `\n  .theme-<%- theme %> {\n    --background: <%- colors.light[\"background\"] %>;\n    --foreground: <%- colors.light[\"foreground\"] %>;\n \n    --muted: <%- colors.light[\"muted\"] %>;\n    --muted-foreground: <%- colors.light[\"muted-foreground\"] %>;\n \n    --popover: <%- colors.light[\"popover\"] %>;\n    --popover-foreground: <%- colors.light[\"popover-foreground\"] %>;\n \n    --card: <%- colors.light[\"card\"] %>;\n    --card-foreground: <%- colors.light[\"card-foreground\"] %>;\n \n    --border: <%- colors.light[\"border\"] %>;\n    --input: <%- colors.light[\"input\"] %>;\n \n    --primary: <%- colors.light[\"primary\"] %>;\n    --primary-foreground: <%- colors.light[\"primary-foreground\"] %>;\n \n    --secondary: <%- colors.light[\"secondary\"] %>;\n    --secondary-foreground: <%- colors.light[\"secondary-foreground\"] %>;\n \n    --accent: <%- colors.light[\"accent\"] %>;\n    --accent-foreground: <%- colors.light[\"accent-foreground\"] %>;\n \n    --destructive: <%- colors.light[\"destructive\"] %>;\n    --destructive-foreground: <%- colors.light[\"destructive-foreground\"] %>;\n \n    --ring: <%- colors.light[\"ring\"] %>;\n \n    --radius: <%- colors.light[\"radius\"] %>;\n  }\n \n  .dark .theme-<%- theme %> {\n    --background: <%- colors.dark[\"background\"] %>;\n    --foreground: <%- colors.dark[\"foreground\"] %>;\n \n    --muted: <%- colors.dark[\"muted\"] %>;\n    --muted-foreground: <%- colors.dark[\"muted-foreground\"] %>;\n \n    --popover: <%- colors.dark[\"popover\"] %>;\n    --popover-foreground: <%- colors.dark[\"popover-foreground\"] %>;\n \n    --card: <%- colors.dark[\"card\"] %>;\n    --card-foreground: <%- colors.dark[\"card-foreground\"] %>;\n \n    --border: <%- colors.dark[\"border\"] %>;\n    --input: <%- colors.dark[\"input\"] %>;\n \n    --primary: <%- colors.dark[\"primary\"] %>;\n    --primary-foreground: <%- colors.dark[\"primary-foreground\"] %>;\n \n    --secondary: <%- colors.dark[\"secondary\"] %>;\n    --secondary-foreground: <%- colors.dark[\"secondary-foreground\"] %>;\n \n    --accent: <%- colors.dark[\"accent\"] %>;\n    --accent-foreground: <%- colors.dark[\"accent-foreground\"] %>;\n \n    --destructive: <%- colors.dark[\"destructive\"] %>;\n    --destructive-foreground: <%- colors.dark[\"destructive-foreground\"] %>;\n \n    --ring: <%- colors.dark[\"ring\"] %>;\n  }`\n\nconst themeCSS = []\nfor (const theme of themes) {\n  themeCSS.push(\n    template(THEME_STYLES_WITH_VARIABLES)({\n      colors: theme.cssVars,\n      theme: theme.name,\n    })\n  )\n}\n\nfs.writeFileSync(\n  path.join(REGISTRY_PATH, `themes.css`),\n  themeCSS.join(\"\\n\"),\n  \"utf8\"\n)\n\n// ----------------------------------------------------------------------------\n// Build registry/themes/[theme].json\n// ----------------------------------------------------------------------------\nrimraf.sync(path.join(REGISTRY_PATH, \"themes\"))\nfor (const baseColor of [\"slate\", \"gray\", \"zinc\", \"neutral\", \"stone\"]) {\n  const payload = {\n    name: baseColor,\n    label: baseColor.charAt(0).toUpperCase() + baseColor.slice(1),\n    cssVars: {},\n  }\n\n  for (const [mode, values] of Object.entries(colorMapping)) {\n    payload[\"cssVars\"][mode] = {}\n    for (const [key, value] of Object.entries(values)) {\n      if (typeof value === \"string\") {\n        const resolvedColor = value.replace(/{{base}}-/g, `${baseColor}-`)\n        payload[\"cssVars\"][mode][key] = resolvedColor\n\n        const [resolvedBase, scale] = resolvedColor.split(\"-\")\n        const color = scale\n          ? colorsData[resolvedBase].find(\n              (item) => item.scale === parseInt(scale)\n            )\n          : colorsData[resolvedBase]\n        if (color) {\n          payload[\"cssVars\"][mode][key] = color.hslChannel\n        }\n      }\n    }\n  }\n\n  const targetPath = path.join(REGISTRY_PATH, \"themes\")\n\n  // Create directory if it doesn't exist.\n  if (!fs.existsSync(targetPath)) {\n    fs.mkdirSync(targetPath, { recursive: true })\n  }\n\n  fs.writeFileSync(\n    path.join(targetPath, `${payload.name}.json`),\n    JSON.stringify(payload, null, 2),\n    \"utf8\"\n  )\n}\n\nconsole.log(\"✅ Done!\")\n",
    "dependencies": [
      "fs",
      "path",
      "lodash.template",
      "rimraf",
      "../registry/colors",
      "../registry/registry",
      "../registry/schema",
      "../registry/styles",
      "../registry/themes"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/styles/globals.css": {
    "source": "@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer base {\n  :root {\n    --ds-background-100: 0 0% 100%;\n    --ds-background-200: 0 0% 98%;\n\n    --border: 0, 0%, 0%, 0.08;\n\n    --accents-1: #fafafa;\n    --accents-2: #eaeaea;\n    --accents-3: #999;\n    --accents-4: #888;\n    --accents-5: #666;\n    --accents-6: #444;\n    --accents-7: #333;\n    --accents-8: #111;\n\n    --ds-gray-alpha-100: hsla(0, 0%, 0%, 0.05);\n    --ds-gray-alpha-200: hsla(0, 0%, 0%, 0.08);\n    --ds-gray-alpha-300: hsla(0, 0%, 0%, 0.1);\n    --ds-gray-alpha-400: hsla(0, 0%, 0%, 0.08);\n    --ds-gray-alpha-500: hsla(0, 0%, 0%, 0.21);\n    --ds-gray-alpha-600: hsla(0, 0%, 0%, 0.34);\n    --ds-gray-alpha-700: hsla(0, 0%, 0%, 0.44);\n    --ds-gray-alpha-800: hsla(0, 0%, 0%, 0.51);\n    --ds-gray-alpha-900: hsla(0, 0%, 0%, 0.61);\n    --ds-gray-alpha-1000: hsla(0, 0%, 0%, 0.91);\n\n    --ds-gray-100: 0 0% 95%;\n    --ds-gray-200: 0 0% 92%;\n    --ds-gray-300: 0 0% 90%;\n    --ds-gray-400: 0 0% 92%;\n    --ds-gray-500: 0 0% 79%;\n    --ds-gray-600: 0 0% 66%;\n    --ds-gray-700: 0 0% 56%;\n    --ds-gray-800: 0 0% 49%;\n    --ds-gray-900: 0 0% 40%;\n    --ds-gray-1000: 0 0% 9%;\n\n    --ds-blue-100: 212 100% 97%;\n    --ds-blue-200: 210 100% 96%;\n    --ds-blue-300: 210 100% 94%;\n    --ds-blue-400: 209 100% 90%;\n    --ds-blue-500: 209 100% 80%;\n    --ds-blue-600: 208 100% 66%;\n    --ds-blue-700: 212 100% 48%;\n    --ds-blue-800: 212 100% 41%;\n    --ds-blue-900: 211 100% 42%;\n    --ds-blue-1000: 211 100% 15%;\n\n    --ds-red-100: 0 100% 97%;\n    --ds-red-200: 0 100% 96%;\n    --ds-red-300: 0 100% 95%;\n    --ds-red-400: 0 90% 92%;\n    --ds-red-500: 0 82% 85%;\n    --ds-red-600: 359 90% 71%;\n    --ds-red-700: 358 75% 59%;\n    --ds-red-800: 358 70% 52%;\n    --ds-red-900: 358 66% 48%;\n    --ds-red-1000: 355 49% 15%;\n\n    --ds-amber-100: 39 100% 95%;\n    --ds-amber-200: 44 100% 92%;\n    --ds-amber-300: 43 96% 90%;\n    --ds-amber-400: 42 100% 78%;\n    --ds-amber-500: 38 100% 71%;\n    --ds-amber-600: 36 90% 62%;\n    --ds-amber-700: 39 100% 57%;\n    --ds-amber-800: 35 100% 52%;\n    --ds-amber-900: 30 100% 32%;\n    --ds-amber-1000: 20 79% 17%;\n\n    --ds-green-100: 120 60% 96%;\n    --ds-green-200: 120 60% 95%;\n    --ds-green-300: 120 60% 91%;\n    --ds-green-400: 122 60% 86%;\n    --ds-green-500: 124 60% 75%;\n    --ds-green-600: 125 60% 64%;\n    --ds-green-700: 131 41% 46%;\n    --ds-green-800: 132 43% 39%;\n    --ds-green-900: 133 50% 32%;\n    --ds-green-1000: 128 29% 15%;\n\n    --ds-teal-100: 169 70% 96%;\n    --ds-teal-200: 167 70% 94%;\n    --ds-teal-300: 168 70% 90%;\n    --ds-teal-400: 170 70% 85%;\n    --ds-teal-500: 170 70% 72%;\n    --ds-teal-600: 170 70% 57%;\n    --ds-teal-700: 173 80% 36%;\n    --ds-teal-800: 173 83% 30%;\n    --ds-teal-900: 174 91% 25%;\n    --ds-teal-1000: 171 80% 13%;\n\n    --ds-purple-100: 276 100% 97%;\n    --ds-purple-200: 277 87% 97%;\n    --ds-purple-300: 274 78% 95%;\n    --ds-purple-400: 276 71% 92%;\n    --ds-purple-500: 274 70% 82%;\n    --ds-purple-600: 273 72% 73%;\n    --ds-purple-700: 272 51% 54%;\n    --ds-purple-800: 272 47% 45%;\n    --ds-purple-900: 274 71% 43%;\n    --ds-purple-1000: 276 100% 15%;\n\n    --ds-pink-100: 330 100% 96%;\n    --ds-pink-200: 340 90% 96%;\n    --ds-pink-300: 340 82% 94%;\n    --ds-pink-400: 341 76% 91%;\n    --ds-pink-500: 340 75% 84%;\n    --ds-pink-600: 341 75% 73%;\n    --ds-pink-700: 336 80% 58%;\n    --ds-pink-800: 336 74% 51%;\n    --ds-pink-900: 336 65% 45%;\n    --ds-pink-1000: 333 74% 15%;\n\n    --ds-contrast-fg: 0 0% 0%;\n\n    --ds-shadow-inset: inset 0 0 0 1px rgba(0 0 0 / 0.08);\n    --ds-shadow-border: 0 0 0 1px var(--ds-gray-alpha-400);\n    --ds-shadow-modal: var(--ds-shadow-border), 0px 1px 1px rgba(0, 0, 0, 0.02),\n      0px 8px 16px -4px rgba(0, 0, 0, 0.04),\n      0px 24px 32px -8px rgba(0, 0, 0, 0.06);\n    --ds-shadow-border-inset: inset 0 0 0 1px rgba(0, 0, 0, 0.08);\n    --ds-shadow-small: 0px 2px 2px rgba(0, 0, 0, 0.04);\n    --ds-shadow-input-ring: 0 0 0 1px var(--ds-gray-alpha-600),\n      0 0 0 4px rgba(0, 0, 0, 0.16);\n    --ds-shadow-border-small: var(--ds-shadow-border), var(--ds-shadow-small);\n    --ds-shadow-medium: 0px 2px 2px rgba(0, 0, 0, 0.04),\n      0px 8px 8px -8px rgba(0, 0, 0, 0.04);\n    --ds-shadow-border-medium: var(--ds-shadow-border), var(--ds-shadow-medium);\n    --ds-shadow-large: 0px 2px 2px rgba(0, 0, 0, 0.04),\n      0px 8px 16px -4px rgba(0, 0, 0, 0.04);\n    --ds-shadow-border-large: var(--ds-shadow-border), var(--ds-shadow-large);\n    --ds-shadow-tooltip: var(--ds-shadow-border),\n      0px 1px 1px rgba(0, 0, 0, 0.02), 0px 4px 8px rgba(0, 0, 0, 0.04);\n    --ds-shadow-menu: var(--ds-shadow-border), 0px 1px 1px rgba(0, 0, 0, 0.02),\n      0px 4px 8px -4px rgba(0, 0, 0, 0.04),\n      0px 16px 24px -8px rgba(0, 0, 0, 0.06);\n    --ds-shadow-modal: var(--ds-shadow-border), 0px 1px 1px rgba(0, 0, 0, 0.02),\n      0px 8px 16px -4px rgba(0, 0, 0, 0.04),\n      0px 24px 32px -8px rgba(0, 0, 0, 0.06);\n    --ds-shadow-fullscreen: var(--ds-shadow-border),\n      0px 1px 1px rgba(0, 0, 0, 0.02), 0px 8px 16px -4px rgba(0, 0, 0, 0.04),\n      0px 24px 32px -8px rgba(0, 0, 0, 0.06);\n    --ds-focus-ring: 0 0 0 2px var(--ds-background-100),\n      0 0 0 4px var(--ds-focus-color);\n\n    --geist-success-lighter: #d3e5ff;\n    --geist-success-light: #3291ff;\n    --geist-success: #0070f3;\n    --geist-success-dark: #0761d1;\n  }\n\n  .dark {\n    --ds-background-100: 0 0% 4%;\n    --ds-background-200: 0 0% 0%;\n\n    --border: 0 0% 14%;\n\n    --accents-8: #fafafa;\n    --accents-7: #eaeaea;\n    --accents-6: #999;\n    --accents-5: #888;\n    --accents-4: #666;\n    --accents-3: #444;\n    --accents-2: #333;\n    --accents-1: #111;\n\n    --ds-gray-100: 0 0% 10%;\n    --ds-gray-200: 0 0% 12%;\n    --ds-gray-300: 0 0% 16%;\n    --ds-gray-400: 0 0% 18%;\n    --ds-gray-500: 0 0% 27%;\n    --ds-gray-600: 0 0% 53%;\n    --ds-gray-700: 0 0% 56%;\n    --ds-gray-800: 0 0% 49%;\n    --ds-gray-900: 0 0% 63%;\n    --ds-gray-1000: 0 0% 93%;\n\n    --ds-gray-alpha-100: hsla(0, 0%, 100%, 0.06);\n    --ds-gray-alpha-200: hsla(0, 0%, 100%, 0.09);\n    --ds-gray-alpha-300: hsla(0, 0%, 100%, 0.13);\n    --ds-gray-alpha-400: hsla(0, 0%, 100%, 0.14);\n    --ds-gray-alpha-500: hsla(0, 0%, 100%, 0.24);\n    --ds-gray-alpha-600: hsla(0, 0%, 100%, 0.51);\n    --ds-gray-alpha-700: hsla(0, 0%, 100%, 0.54);\n    --ds-gray-alpha-800: hsla(0, 0%, 100%, 0.47);\n    --ds-gray-alpha-900: hsla(0, 0%, 100%, 0.61);\n    --ds-gray-alpha-1000: hsla(0, 0%, 100%, 0.92);\n\n    --ds-blue-100: 216 50% 12%;\n    --ds-blue-200: 214 59% 15%;\n    --ds-blue-300: 213 71% 20%;\n    --ds-blue-400: 212 78% 23%;\n    --ds-blue-500: 211 86% 27%;\n    --ds-blue-600: 206 100% 50%;\n    --ds-blue-700: 212 100% 48%;\n    --ds-blue-800: 212 100% 41%;\n    --ds-blue-900: 210 100% 66%;\n    --ds-blue-1000: 206 100% 96%;\n\n    --ds-red-100: 357 37% 12%;\n    --ds-red-200: 357 46% 16%;\n    --ds-red-300: 356 54% 22%;\n    --ds-red-400: 357 55% 26%;\n    --ds-red-500: 357 60% 32%;\n    --ds-red-600: 358 75% 59%;\n    --ds-red-700: 358 75% 59%;\n    --ds-red-800: 358 69% 52%;\n    --ds-red-900: 358 100% 69%;\n    --ds-red-1000: 353 90% 96%;\n\n    --ds-amber-100: 35 100% 8%;\n    --ds-amber-200: 32 100% 10%;\n    --ds-amber-300: 33 100% 15%;\n    --ds-amber-400: 35 100% 17%;\n    --ds-amber-500: 35 91% 22%;\n    --ds-amber-600: 39 85% 49%;\n    --ds-amber-700: 39 100% 57%;\n    --ds-amber-800: 35 100% 52%;\n    --ds-amber-900: 35 100% 52%;\n    --ds-amber-1000: 40 94% 93%;\n\n    --ds-green-100: 136 50% 9%;\n    --ds-green-200: 137 50% 12%;\n    --ds-green-300: 136 50% 14%;\n    --ds-green-400: 135 70% 16%;\n    --ds-green-500: 135 70% 23%;\n    --ds-green-600: 135 70% 34%;\n    --ds-green-700: 131 41% 46%;\n    --ds-green-800: 132 43% 39%;\n    --ds-green-900: 131 43% 57%;\n    --ds-green-1000: 136 73% 94%;\n\n    --ds-teal-100: 169 78% 7%;\n    --ds-teal-200: 170 74% 9%;\n    --ds-teal-300: 171 75% 13%;\n    --ds-teal-400: 171 85% 13%;\n    --ds-teal-500: 172 85% 20%;\n    --ds-teal-600: 172 85% 32%;\n    --ds-teal-700: 173 80% 36%;\n    --ds-teal-800: 173 83% 30%;\n    --ds-teal-900: 174 90% 41%;\n    --ds-teal-1000: 166 71% 93%;\n\n    --ds-purple-100: 283 30% 12%;\n    --ds-purple-200: 281 38% 16%;\n    --ds-purple-300: 279 44% 23%;\n    --ds-purple-400: 277 46% 28%;\n    --ds-purple-500: 274 49% 35%;\n    --ds-purple-600: 272 51% 54%;\n    --ds-purple-700: 272 51% 54%;\n    --ds-purple-800: 272 47% 45%;\n    --ds-purple-900: 275 80% 71%;\n    --ds-purple-1000: 281 73% 96%;\n\n    --ds-pink-100: 335 32% 12%;\n    --ds-pink-200: 335 43% 16%;\n    --ds-pink-300: 335 47% 21%;\n    --ds-pink-400: 335 51% 22%;\n    --ds-pink-500: 335 57% 27%;\n    --ds-pink-600: 336 75% 40%;\n    --ds-pink-700: 336 80% 58%;\n    --ds-pink-800: 336 74% 51%;\n    --ds-pink-900: 341 90% 67%;\n    --ds-pink-1000: 333 90% 96%;\n\n    --ds-contrast-fg: 0 0% 100%;\n\n    --ds-shadow-inset: inset 0 0 0 1px hsla(0 0% 100% / 0.1);\n    --ds-shadow-small: 0px 1px 2px rgba(0, 0, 0, 0.16);\n    --ds-shadow-border: 0 0 0 1px var(--ds-gray-alpha-400);\n    --ds-shadow-modal: var(--ds-shadow-border), 0px 1px 1px rgba(0, 0, 0, 0.02),\n      0px 8px 16px -4px rgba(0, 0, 0, 0.04),\n      0px 24px 32px -8px rgba(0, 0, 0, 0.06);\n    --ds-shadow-input-ring: 0 0 0 1px var(--ds-gray-alpha-600),\n      0 0 0 4px hsla(0, 0%, 100%, 0.24);\n    --ds-shadow-border-small: var(--ds-shadow-border),\n      0px 1px 2px rgba(0, 0, 0, 0.16);\n    --ds-shadow-medium: 0px 2px 2px rgba(0, 0, 0, 0.32),\n      0px 8px 8px -8px rgba(0, 0, 0, 0.16);\n    --ds-shadow-border-medium: var(--ds-shadow-border),\n      0px 2px 2px rgba(0, 0, 0, 0.32), 0px 8px 8px -8px rgba(0, 0, 0, 0.16);\n    --ds-shadow-large: 0px 2px 2px rgba(0, 0, 0, 0.04),\n      0px 8px 16px -4px rgba(0, 0, 0, 0.04);\n    --ds-shadow-border-large: var(--ds-shadow-border),\n      0px 2px 2px rgba(0, 0, 0, 0.04), 0px 8px 16px -4px rgba(0, 0, 0, 0.04);\n    --ds-shadow-tooltip: var(--ds-shadow-border),\n      0px 1px 1px rgba(0, 0, 0, 0.02), 0px 4px 8px rgba(0, 0, 0, 0.04);\n    --ds-shadow-menu: var(--ds-shadow-border), 0px 1px 1px rgba(0, 0, 0, 0.02),\n      0px 4px 8px -4px rgba(0, 0, 0, 0.04),\n      0px 16px 24px -8px rgba(0, 0, 0, 0.06);\n    --ds-shadow-modal: var(--ds-shadow-border), 0px 1px 1px rgba(0, 0, 0, 0.02),\n      0px 8px 16px -4px rgba(0, 0, 0, 0.04),\n      0px 24px 32px -8px rgba(0, 0, 0, 0.06);\n    --ds-shadow-fullscreen: var(--ds-shadow-border),\n      0px 1px 1px rgba(0, 0, 0, 0.02), 0px 8px 16px -4px rgba(0, 0, 0, 0.04),\n      0px 24px 32px -8px rgba(0, 0, 0, 0.06);\n    --ds-focus-ring: 0 0 0 2px var(--ds-background-100),\n      0 0 0 4px var(--ds-focus-color);\n\n    --geist-success-lighter: #d3e5ff;\n    --geist-success-light: #3291ff;\n    --geist-success: #0070f3;\n    --geist-success-dark: #0761d1;\n  }\n}\n\n@layer base {\n  /* * {\n    @apply border-border;\n  } */\n  body {\n    @apply bg-background-100 text-gray-1000;\n    font-synthesis-weight: none;\n    text-rendering: optimizeLegibility;\n  }\n\n  ::selection {\n    @apply bg-blue-800 text-white;\n  }\n}\n\n@layer utilities {\n  .step {\n    counter-increment: step;\n  }\n\n  .step:before {\n    @apply absolute ml-[-50px] mt-[-4px] inline-flex h-9 w-9 items-center justify-center rounded-full border-4 border-black bg-background-100 text-center -indent-px font-mono text-base font-medium;\n    content: counter(step);\n  }\n}\n\n@media (max-width: 640px) {\n  .container {\n    @apply px-4;\n  }\n}\n",
    "dependencies": []
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/styles/mdx.css": {
    "source": ":root {\n  --shiki-foreground: #24292e; /* Editor foreground */\n  --shiki-background: #fff; /* Editor background */\n  --shiki-token-constant: #005cc5; /* Constant */\n  --shiki-token-string: #032f62; /* String */\n  --shiki-token-comment: #6a737d; /* Comment */\n  --shiki-token-keyword: #d73a49; /* Keyword */\n  --shiki-token-parameter: #24292e; /* Variable parameter */\n  --shiki-token-function: #6f42c1; /* Entity */\n  --shiki-token-string-expression: #032f62; /* String regexp */\n  --shiki-token-punctuation: #24292e; /* Punctuation */\n\n  /* ANSI colors */\n  --shiki-ansi-black: #24292e; /* Terminal ansiBlack */\n  --shiki-ansi-black-dim: #24292e80; /* Dimmed, just an example, may not be accurate */\n  --shiki-ansi-red: #d73a49; /* Terminal ansiRed */\n  --shiki-ansi-red-dim: #d73a4980; /* Dimmed */\n  --shiki-ansi-green: #28a745; /* Terminal ansiGreen */\n  --shiki-ansi-green-dim: #28a74580; /* Dimmed */\n  --shiki-ansi-yellow: #dbab09; /* Terminal ansiYellow */\n  --shiki-ansi-yellow-dim: #dbab0980; /* Dimmed */\n  --shiki-ansi-blue: #0366d6; /* Terminal ansiBlue */\n  --shiki-ansi-blue-dim: #0366d680; /* Dimmed */\n  --shiki-ansi-magenta: #5a32a3; /* Terminal ansiMagenta */\n  --shiki-ansi-magenta-dim: #5a32a380; /* Dimmed */\n  --shiki-ansi-cyan: #1b7c83; /* Terminal ansiCyan */\n  --shiki-ansi-cyan-dim: #1b7c8380; /* Dimmed */\n  --shiki-ansi-white: #6a737d; /* Terminal ansiWhite */\n  --shiki-ansi-white-dim: #6a737d80; /* Dimmed */\n  --shiki-ansi-bright-black: #959da5; /* Terminal ansiBrightBlack */\n  --shiki-ansi-bright-black-dim: #959da580; /* Dimmed */\n  --shiki-ansi-bright-red: #cb2431; /* Terminal ansiBrightRed */\n  --shiki-ansi-bright-red-dim: #cb243180; /* Dimmed */\n  --shiki-ansi-bright-green: #22863a; /* Terminal ansiBrightGreen */\n  --shiki-ansi-bright-green-dim: #22863a80; /* Dimmed */\n  --shiki-ansi-bright-yellow: #b08800; /* Terminal ansiBrightYellow */\n  --shiki-ansi-bright-yellow-dim: #b0880080; /* Dimmed */\n  --shiki-ansi-bright-blue: #005cc5; /* Terminal ansiBrightBlue */\n  --shiki-ansi-bright-blue-dim: #005cc580; /* Dimmed */\n  --shiki-ansi-bright-magenta: #5a32a3; /* Terminal ansiBrightMagenta */\n  --shiki-ansi-bright-magenta-dim: #5a32a380; /* Dimmed */\n  --shiki-ansi-bright-cyan: #3192aa; /* Terminal ansiBrightCyan */\n  --shiki-ansi-bright-cyan-dim: #3192aa80; /* Dimmed */\n  --shiki-ansi-bright-white: #d1d5da; /* Terminal ansiBrightWhite */\n  --shiki-ansi-bright-white-dim: #d1d5da80; /* Dimmed */\n}\n\n.dark {\n  --shiki-foreground: #e1e4e8; /* Editor foreground */\n  --shiki-background: #24292e; /* Editor background */\n  --shiki-token-constant: #79b8ff; /* Constant */\n  --shiki-token-string: #9ecbff; /* String */\n  --shiki-token-comment: #6a737d; /* Comment */\n  --shiki-token-keyword: #f97583; /* Keyword */\n  --shiki-token-parameter: #e1e4e8; /* Variable parameter */\n  --shiki-token-function: #b392f0; /* Entity */\n  --shiki-token-string-expression: #dbedff; /* String regexp */\n  --shiki-token-punctuation: #d1d5da; /* Not explicitly mentioned, using the foreground color */\n\n  /* ANSI colors */\n  --shiki-ansi-black: #586069; /* Terminal ansiBlack */\n  --shiki-ansi-black-dim: #58606980; /* Dimmed, just an example, may not be accurate */\n  --shiki-ansi-red: #ea4a5a; /* Terminal ansiRed */\n  --shiki-ansi-red-dim: #ea4a5a80; /* Dimmed */\n  --shiki-ansi-green: #34d058; /* Terminal ansiGreen */\n  --shiki-ansi-green-dim: #34d05880; /* Dimmed */\n  --shiki-ansi-yellow: #ffea7f; /* Terminal ansiYellow */\n  --shiki-ansi-yellow-dim: #ffea7f80; /* Dimmed */\n  --shiki-ansi-blue: #2188ff; /* Terminal ansiBlue */\n  --shiki-ansi-blue-dim: #2188ff80; /* Dimmed */\n  --shiki-ansi-magenta: #b392f0; /* Terminal ansiMagenta */\n  --shiki-ansi-magenta-dim: #b392f080; /* Dimmed */\n  --shiki-ansi-cyan: #39c5cf; /* Terminal ansiCyan */\n  --shiki-ansi-cyan-dim: #39c5cf80; /* Dimmed */\n  --shiki-ansi-white: #d1d5da; /* Terminal ansiWhite */\n  --shiki-ansi-white-dim: #d1d5da80; /* Dimmed */\n  --shiki-ansi-bright-black: #959da5; /* Terminal ansiBrightBlack */\n  --shiki-ansi-bright-black-dim: #959da580; /* Dimmed */\n  --shiki-ansi-bright-red: #f97583; /* Terminal ansiBrightRed */\n  --shiki-ansi-bright-red-dim: #f9758380; /* Dimmed */\n  --shiki-ansi-bright-green: #85e89d; /* Terminal ansiBrightGreen */\n  --shiki-ansi-bright-green-dim: #85e89d80; /* Dimmed */\n  --shiki-ansi-bright-yellow: #ffea7f; /* Terminal ansiBrightYellow */\n  --shiki-ansi-bright-yellow-dim: #ffea7f80; /* Dimmed */\n  --shiki-ansi-bright-blue: #79b8ff; /* Terminal ansiBrightBlue */\n  --shiki-ansi-bright-blue-dim: #79b8ff80; /* Dimmed */\n  --shiki-ansi-bright-magenta: #b392f0; /* Terminal ansiBrightMagenta */\n  --shiki-ansi-bright-magenta-dim: #b392f080; /* Dimmed */\n  --shiki-ansi-bright-cyan: #56d4dd; /* Terminal ansiBrightCyan */\n  --shiki-ansi-bright-cyan-dim: #56d4dd80; /* Dimmed */\n  --shiki-ansi-bright-white: #fafbfc; /* Terminal ansiBrightWhite */\n  --shiki-ansi-bright-white-dim: #fafbfc80; /* Dimmed */\n}\n\n[data-theme=\"light\"] {\n  display: block;\n}\n\n[data-theme=\"dark\"] {\n  display: none;\n}\n\n.dark [data-theme=\"light\"] {\n  display: none;\n}\n\n.dark [data-theme=\"dark\"] {\n  display: block;\n}\n\n[data-rehype-pretty-code-fragment] {\n  @apply relative;\n}\n\n[data-rehype-pretty-code-fragment] code {\n  @apply grid min-w-full break-words rounded-none border-0 bg-transparent p-0;\n  counter-reset: line;\n  box-decoration-break: clone;\n}\n\n[data-rehype-pretty-code-fragment] .line {\n  @apply px-4 min-h-[1rem] py-0.5 w-full inline-block;\n}\n\n[data-rehype-pretty-code-fragment] [data-line-numbers] .line {\n  @apply px-2;\n}\n\n[data-rehype-pretty-code-fragment] [data-line-numbers] > .line::before {\n  @apply text-zinc-50/40 text-xs;\n  counter-increment: line;\n  content: counter(line);\n  display: inline-block;\n  width: 1.8rem;\n  margin-right: 1.4rem;\n  text-align: right;\n}\n\n[data-rehype-pretty-code-fragment] .line--highlighted {\n  @apply bg-green-500/20;\n}\n\n[data-rehype-pretty-code-fragment] .line-highlighted span {\n  @apply relative;\n}\n\n[data-rehype-pretty-code-fragment] .word--highlighted {\n  @apply rounded-md bg-zinc-700/50 border-zinc-700/70 p-1;\n}\n\n.dark [data-rehype-pretty-code-fragment] .word--highlighted {\n  @apply bg-zinc-900;\n}\n\n[data-rehype-pretty-code-title] {\n  @apply mt-2 pt-6 px-4 text-sm font-medium;\n}\n\n[data-rehype-pretty-code-title] + pre {\n  @apply mt-2;\n}\n\n.mdx > .steps:first-child > h3:first-child {\n  @apply mt-0;\n}\n",
    "dependencies": []
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/tailwind.config.cjs": {
    "source": "const baseConfig = require(\"../../tailwind.config.cjs\")\n\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  ...baseConfig,\n  content: [\n    ...baseConfig.content,\n    \"content/**/*.mdx\",\n    \"registry/**/*.{ts,tsx}\",\n  ],\n}\n",
    "dependencies": []
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/types/nav.ts": {
    "source": "import { Icons } from \"@/components/icons\"\n\nexport interface NavItem {\n  title: string\n  href?: string\n  disabled?: boolean\n  external?: boolean\n  icon?: keyof typeof Icons\n  label?: string\n}\n\nexport interface NavItemWithChildren extends NavItem {\n  items: NavItemWithChildren[]\n}\n\nexport interface MainNavItem extends NavItem {}\n\nexport interface SidebarNavItem extends NavItemWithChildren {}\n",
    "dependencies": ["@/components/icons"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/apps/www/types/unist.ts": {
    "source": "import { Node } from \"unist-builder\"\n\nexport interface UnistNode extends Node {\n  type: string\n  name?: string\n  tagName?: string\n  value?: string\n  properties?: {\n    __rawString__?: string\n    __className__?: string\n    __event__?: string\n    [key: string]: unknown\n  } & NpmCommands\n  attributes?: {\n    name: string\n    value: unknown\n    type?: string\n  }[]\n  children?: UnistNode[]\n}\n\nexport interface UnistTree extends Node {\n  children: UnistNode[]\n}\n\nexport interface NpmCommands {\n  __npmCommand__?: string\n  __yarnCommand__?: string\n  __pnpmCommand__?: string\n  __bunCommand__?: string\n}\n",
    "dependencies": ["unist-builder"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/packages/cli/src/commands/add.ts": {
    "source": "import { existsSync, promises as fs } from \"fs\"\nimport path from \"path\"\nimport { getConfig } from \"@/src/utils/get-config\"\nimport { getPackageManager } from \"@/src/utils/get-package-manager\"\nimport { handleError } from \"@/src/utils/handle-error\"\nimport { logger } from \"@/src/utils/logger\"\nimport {\n  fetchTree,\n  getItemTargetPath,\n  getRegistryBaseColor,\n  getRegistryIndex,\n  resolveTree,\n} from \"@/src/utils/registry\"\nimport { transform } from \"@/src/utils/transformers\"\nimport chalk from \"chalk\"\nimport { Command } from \"commander\"\nimport { execa } from \"execa\"\nimport ora from \"ora\"\nimport prompts from \"prompts\"\nimport { z } from \"zod\"\n\nconst addOptionsSchema = z.object({\n  components: z.array(z.string()).optional(),\n  yes: z.boolean(),\n  overwrite: z.boolean(),\n  cwd: z.string(),\n  all: z.boolean(),\n  path: z.string().optional(),\n})\n\nexport const add = new Command()\n  .name(\"add\")\n  .description(\"add a component to your project\")\n  .argument(\"[components...]\", \"the components to add\")\n  .option(\"-y, --yes\", \"skip confirmation prompt.\", true)\n  .option(\"-o, --overwrite\", \"overwrite existing files.\", false)\n  .option(\n    \"-c, --cwd <cwd>\",\n    \"the working directory. defaults to the current directory.\",\n    process.cwd()\n  )\n  .option(\"-a, --all\", \"add all available components\", false)\n  .option(\"-p, --path <path>\", \"the path to add the component to.\")\n  .action(async (components, opts) => {\n    try {\n      const options = addOptionsSchema.parse({\n        components,\n        ...opts,\n      })\n\n      const cwd = path.resolve(options.cwd)\n\n      if (!existsSync(cwd)) {\n        logger.error(`The path ${cwd} does not exist. Please try again.`)\n        process.exit(1)\n      }\n\n      const config = await getConfig(cwd)\n      if (!config) {\n        logger.warn(\n          `Configuration is missing. Please run ${chalk.green(\n            `init`\n          )} to create a components.json file.`\n        )\n        process.exit(1)\n      }\n\n      const registryIndex = await getRegistryIndex()\n\n      let selectedComponents = options.all\n        ? registryIndex.map((entry) => entry.name)\n        : options.components\n      if (!options.components?.length && !options.all) {\n        const { components } = await prompts({\n          type: \"multiselect\",\n          name: \"components\",\n          message: \"Which components would you like to add?\",\n          hint: \"Space to select. A to toggle all. Enter to submit.\",\n          instructions: false,\n          choices: registryIndex.map((entry) => ({\n            title: entry.name,\n            value: entry.name,\n            selected: options.all\n              ? true\n              : options.components?.includes(entry.name),\n          })),\n        })\n        selectedComponents = components\n      }\n\n      if (!selectedComponents?.length) {\n        logger.warn(\"No components selected. Exiting.\")\n        process.exit(0)\n      }\n\n      const tree = await resolveTree(registryIndex, selectedComponents)\n      const payload = await fetchTree(config.style, tree)\n      const baseColor = await getRegistryBaseColor(config.tailwind.baseColor)\n\n      if (!payload.length) {\n        logger.warn(\"Selected components not found. Exiting.\")\n        process.exit(0)\n      }\n\n      if (!options.yes) {\n        const { proceed } = await prompts({\n          type: \"confirm\",\n          name: \"proceed\",\n          message: `Ready to install components and dependencies. Proceed?`,\n          initial: true,\n        })\n\n        if (!proceed) {\n          process.exit(0)\n        }\n      }\n\n      const spinner = ora(`Installing components...`).start()\n      for (const item of payload) {\n        spinner.text = `Installing ${item.name}...`\n        const targetDir = await getItemTargetPath(\n          config,\n          item,\n          options.path ? path.resolve(cwd, options.path) : undefined\n        )\n\n        if (!targetDir) {\n          continue\n        }\n\n        if (!existsSync(targetDir)) {\n          await fs.mkdir(targetDir, { recursive: true })\n        }\n\n        const existingComponent = item.files.filter((file) =>\n          existsSync(path.resolve(targetDir, file.name))\n        )\n\n        if (existingComponent.length && !options.overwrite) {\n          if (selectedComponents.includes(item.name)) {\n            spinner.stop()\n            const { overwrite } = await prompts({\n              type: \"confirm\",\n              name: \"overwrite\",\n              message: `Component ${item.name} already exists. Would you like to overwrite?`,\n              initial: false,\n            })\n\n            if (!overwrite) {\n              logger.info(\n                `Skipped ${item.name}. To overwrite, run with the ${chalk.green(\n                  \"--overwrite\"\n                )} flag.`\n              )\n              continue\n            }\n\n            spinner.start(`Installing ${item.name}...`)\n          } else {\n            continue\n          }\n        }\n\n        for (const file of item.files) {\n          let filePath = path.resolve(targetDir, file.name)\n\n          // Run transformers.\n          const content = await transform({\n            filename: file.name,\n            raw: file.content,\n            config,\n            baseColor,\n          })\n\n          if (!config.tsx) {\n            filePath = filePath.replace(/\\.tsx$/, \".jsx\")\n            filePath = filePath.replace(/\\.ts$/, \".js\")\n          }\n\n          await fs.writeFile(filePath, content)\n        }\n\n        const packageManager = await getPackageManager(cwd)\n\n        // Install dependencies.\n        if (item.dependencies?.length) {\n          await execa(\n            packageManager,\n            [\n              packageManager === \"npm\" ? \"install\" : \"add\",\n              ...item.dependencies,\n            ],\n            {\n              cwd,\n            }\n          )\n        }\n\n        // Install devDependencies.\n        if (item.devDependencies?.length) {\n          await execa(\n            packageManager,\n            [\n              packageManager === \"npm\" ? \"install\" : \"add\",\n              \"-D\",\n              ...item.devDependencies,\n            ],\n            {\n              cwd,\n            }\n          )\n        }\n      }\n      spinner.succeed(`Done.`)\n    } catch (error) {\n      handleError(error)\n    }\n  })\n",
    "dependencies": [
      "fs",
      "path",
      "@/src/utils/get-config",
      "@/src/utils/get-package-manager",
      "@/src/utils/handle-error",
      "@/src/utils/logger",
      "@/src/utils/registry",
      "@/src/utils/transformers",
      "chalk",
      "commander",
      "execa",
      "ora",
      "prompts",
      "zod"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/packages/cli/src/commands/diff.ts": {
    "source": "import { existsSync, promises as fs } from \"fs\"\nimport path from \"path\"\nimport { Config, getConfig } from \"@/src/utils/get-config\"\nimport { handleError } from \"@/src/utils/handle-error\"\nimport { logger } from \"@/src/utils/logger\"\nimport {\n  fetchTree,\n  getItemTargetPath,\n  getRegistryBaseColor,\n  getRegistryIndex,\n} from \"@/src/utils/registry\"\nimport { registryIndexSchema } from \"@/src/utils/registry/schema\"\nimport { transform } from \"@/src/utils/transformers\"\nimport chalk from \"chalk\"\nimport { Command } from \"commander\"\nimport { diffLines, type Change } from \"diff\"\nimport { z } from \"zod\"\n\nconst updateOptionsSchema = z.object({\n  component: z.string().optional(),\n  yes: z.boolean(),\n  cwd: z.string(),\n  path: z.string().optional(),\n})\n\nexport const diff = new Command()\n  .name(\"diff\")\n  .description(\"check for updates against the registry\")\n  .argument(\"[component]\", \"the component name\")\n  .option(\"-y, --yes\", \"skip confirmation prompt.\", false)\n  .option(\n    \"-c, --cwd <cwd>\",\n    \"the working directory. defaults to the current directory.\",\n    process.cwd()\n  )\n  .action(async (name, opts) => {\n    try {\n      const options = updateOptionsSchema.parse({\n        component: name,\n        ...opts,\n      })\n\n      const cwd = path.resolve(options.cwd)\n\n      if (!existsSync(cwd)) {\n        logger.error(`The path ${cwd} does not exist. Please try again.`)\n        process.exit(1)\n      }\n\n      const config = await getConfig(cwd)\n      if (!config) {\n        logger.warn(\n          `Configuration is missing. Please run ${chalk.green(\n            `init`\n          )} to create a components.json file.`\n        )\n        process.exit(1)\n      }\n\n      const registryIndex = await getRegistryIndex()\n\n      if (!options.component) {\n        const targetDir = config.resolvedPaths.components\n\n        // Find all components that exist in the project.\n        const projectComponents = registryIndex.filter((item) => {\n          for (const file of item.files) {\n            const filePath = path.resolve(targetDir, file)\n            if (existsSync(filePath)) {\n              return true\n            }\n          }\n\n          return false\n        })\n\n        // Check for updates.\n        const componentsWithUpdates = []\n        for (const component of projectComponents) {\n          const changes = await diffComponent(component, config)\n          if (changes.length) {\n            componentsWithUpdates.push({\n              name: component.name,\n              changes,\n            })\n          }\n        }\n\n        if (!componentsWithUpdates.length) {\n          logger.info(\"No updates found.\")\n          process.exit(0)\n        }\n\n        logger.info(\"The following components have updates available:\")\n        for (const component of componentsWithUpdates) {\n          logger.info(`- ${component.name}`)\n          for (const change of component.changes) {\n            logger.info(`  - ${change.filePath}`)\n          }\n        }\n        logger.break()\n        logger.info(\n          `Run ${chalk.green(`diff <component>`)} to see the changes.`\n        )\n        process.exit(0)\n      }\n\n      // Show diff for a single component.\n      const component = registryIndex.find(\n        (item) => item.name === options.component\n      )\n\n      if (!component) {\n        logger.error(\n          `The component ${chalk.green(options.component)} does not exist.`\n        )\n        process.exit(1)\n      }\n\n      const changes = await diffComponent(component, config)\n\n      if (!changes.length) {\n        logger.info(`No updates found for ${options.component}.`)\n        process.exit(0)\n      }\n\n      for (const change of changes) {\n        logger.info(`- ${change.filePath}`)\n        await printDiff(change.patch)\n        logger.info(\"\")\n      }\n    } catch (error) {\n      handleError(error)\n    }\n  })\n\nasync function diffComponent(\n  component: z.infer<typeof registryIndexSchema>[number],\n  config: Config\n) {\n  const payload = await fetchTree(config.style, [component])\n  const baseColor = await getRegistryBaseColor(config.tailwind.baseColor)\n\n  const changes = []\n\n  for (const item of payload) {\n    const targetDir = await getItemTargetPath(config, item)\n\n    if (!targetDir) {\n      continue\n    }\n\n    for (const file of item.files) {\n      const filePath = path.resolve(targetDir, file.name)\n\n      if (!existsSync(filePath)) {\n        continue\n      }\n\n      const fileContent = await fs.readFile(filePath, \"utf8\")\n\n      const registryContent = await transform({\n        filename: file.name,\n        raw: file.content,\n        config,\n        baseColor,\n      })\n\n      const patch = diffLines(registryContent as string, fileContent)\n      if (patch.length > 1) {\n        changes.push({\n          file: file.name,\n          filePath,\n          patch,\n        })\n      }\n    }\n  }\n\n  return changes\n}\n\nasync function printDiff(diff: Change[]) {\n  diff.forEach((part) => {\n    if (part) {\n      if (part.added) {\n        return process.stdout.write(chalk.green(part.value))\n      }\n      if (part.removed) {\n        return process.stdout.write(chalk.red(part.value))\n      }\n\n      return process.stdout.write(part.value)\n    }\n  })\n}\n",
    "dependencies": [
      "fs",
      "path",
      "@/src/utils/get-config",
      "@/src/utils/handle-error",
      "@/src/utils/logger",
      "@/src/utils/registry",
      "@/src/utils/registry/schema",
      "@/src/utils/transformers",
      "chalk",
      "commander",
      "diff",
      "zod"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/packages/cli/src/commands/init.ts": {
    "source": "import { existsSync, promises as fs } from \"fs\"\nimport path from \"path\"\nimport {\n  DEFAULT_COMPONENTS,\n  DEFAULT_TAILWIND_CONFIG,\n  DEFAULT_TAILWIND_CSS,\n  DEFAULT_UTILS,\n  getConfig,\n  rawConfigSchema,\n  resolveConfigPaths,\n  type Config,\n} from \"@/src/utils/get-config\"\nimport { getPackageManager } from \"@/src/utils/get-package-manager\"\nimport { getProjectConfig, preFlight } from \"@/src/utils/get-project-info\"\nimport { handleError } from \"@/src/utils/handle-error\"\nimport { logger } from \"@/src/utils/logger\"\nimport {\n  getRegistryBaseColor,\n  getRegistryBaseColors,\n  getRegistryStyles,\n} from \"@/src/utils/registry\"\nimport * as templates from \"@/src/utils/templates\"\nimport chalk from \"chalk\"\nimport { Command } from \"commander\"\nimport { execa } from \"execa\"\nimport template from \"lodash.template\"\nimport ora from \"ora\"\nimport prompts from \"prompts\"\nimport { z } from \"zod\"\n\nimport { applyPrefixesCss } from \"../utils/transformers/transform-tw-prefix\"\n\nconst PROJECT_DEPENDENCIES = [\n  \"tailwindcss-animate\",\n  \"class-variance-authority\",\n  \"clsx\",\n  \"tailwind-merge\",\n]\n\nconst initOptionsSchema = z.object({\n  cwd: z.string(),\n  yes: z.boolean(),\n  defaults: z.boolean(),\n})\n\nexport const init = new Command()\n  .name(\"init\")\n  .description(\"initialize your project and install dependencies\")\n  .option(\"-y, --yes\", \"skip confirmation prompt.\", false)\n  .option(\"-d, --defaults,\", \"use default configuration.\", false)\n  .option(\n    \"-c, --cwd <cwd>\",\n    \"the working directory. defaults to the current directory.\",\n    process.cwd()\n  )\n  .action(async (opts) => {\n    try {\n      const options = initOptionsSchema.parse(opts)\n      const cwd = path.resolve(options.cwd)\n\n      // Ensure target directory exists.\n      if (!existsSync(cwd)) {\n        logger.error(`The path ${cwd} does not exist. Please try again.`)\n        process.exit(1)\n      }\n\n      preFlight(cwd)\n\n      const projectConfig = await getProjectConfig(cwd)\n      if (projectConfig) {\n        const config = await promptForMinimalConfig(\n          cwd,\n          projectConfig,\n          opts.defaults\n        )\n        await runInit(cwd, config)\n      } else {\n        // Read config.\n        const existingConfig = await getConfig(cwd)\n        const config = await promptForConfig(cwd, existingConfig, options.yes)\n        await runInit(cwd, config)\n      }\n\n      logger.info(\"\")\n      logger.info(\n        `${chalk.green(\n          \"Success!\"\n        )} Project initialization completed. You may now add components.`\n      )\n      logger.info(\"\")\n    } catch (error) {\n      handleError(error)\n    }\n  })\n\nexport async function promptForConfig(\n  cwd: string,\n  defaultConfig: Config | null = null,\n  skip = false\n) {\n  const highlight = (text: string) => chalk.cyan(text)\n\n  const styles = await getRegistryStyles()\n  const baseColors = await getRegistryBaseColors()\n\n  const options = await prompts([\n    {\n      type: \"toggle\",\n      name: \"typescript\",\n      message: `Would you like to use ${highlight(\n        \"TypeScript\"\n      )} (recommended)?`,\n      initial: defaultConfig?.tsx ?? true,\n      active: \"yes\",\n      inactive: \"no\",\n    },\n    {\n      type: \"select\",\n      name: \"style\",\n      message: `Which ${highlight(\"style\")} would you like to use?`,\n      choices: styles.map((style) => ({\n        title: style.label,\n        value: style.name,\n      })),\n    },\n    {\n      type: \"select\",\n      name: \"tailwindBaseColor\",\n      message: `Which color would you like to use as ${highlight(\n        \"base color\"\n      )}?`,\n      choices: baseColors.map((color) => ({\n        title: color.label,\n        value: color.name,\n      })),\n    },\n    {\n      type: \"text\",\n      name: \"tailwindCss\",\n      message: `Where is your ${highlight(\"global CSS\")} file?`,\n      initial: defaultConfig?.tailwind.css ?? DEFAULT_TAILWIND_CSS,\n    },\n    {\n      type: \"toggle\",\n      name: \"tailwindCssVariables\",\n      message: `Would you like to use ${highlight(\n        \"CSS variables\"\n      )} for colors?`,\n      initial: defaultConfig?.tailwind.cssVariables ?? true,\n      active: \"yes\",\n      inactive: \"no\",\n    },\n    {\n      type: \"text\",\n      name: \"tailwindPrefix\",\n      message: `Are you using a custom ${highlight(\n        \"tailwind prefix eg. tw-\"\n      )}? (Leave blank if not)`,\n      initial: \"\",\n    },\n    {\n      type: \"text\",\n      name: \"tailwindConfig\",\n      message: `Where is your ${highlight(\"tailwind.config.js\")} located?`,\n      initial: defaultConfig?.tailwind.config ?? DEFAULT_TAILWIND_CONFIG,\n    },\n    {\n      type: \"text\",\n      name: \"components\",\n      message: `Configure the import alias for ${highlight(\"components\")}:`,\n      initial: defaultConfig?.aliases[\"components\"] ?? DEFAULT_COMPONENTS,\n    },\n    {\n      type: \"text\",\n      name: \"utils\",\n      message: `Configure the import alias for ${highlight(\"utils\")}:`,\n      initial: defaultConfig?.aliases[\"utils\"] ?? DEFAULT_UTILS,\n    },\n    {\n      type: \"toggle\",\n      name: \"rsc\",\n      message: `Are you using ${highlight(\"React Server Components\")}?`,\n      initial: defaultConfig?.rsc ?? true,\n      active: \"yes\",\n      inactive: \"no\",\n    },\n  ])\n\n  const config = rawConfigSchema.parse({\n    $schema: \"https://ui.shadcn.com/schema.json\",\n    style: options.style,\n    tailwind: {\n      config: options.tailwindConfig,\n      css: options.tailwindCss,\n      baseColor: options.tailwindBaseColor,\n      cssVariables: options.tailwindCssVariables,\n      prefix: options.tailwindPrefix,\n    },\n    rsc: options.rsc,\n    tsx: options.typescript,\n    aliases: {\n      utils: options.utils,\n      components: options.components,\n    },\n  })\n\n  if (!skip) {\n    const { proceed } = await prompts({\n      type: \"confirm\",\n      name: \"proceed\",\n      message: `Write configuration to ${highlight(\n        \"components.json\"\n      )}. Proceed?`,\n      initial: true,\n    })\n\n    if (!proceed) {\n      process.exit(0)\n    }\n  }\n\n  // Write to file.\n  logger.info(\"\")\n  const spinner = ora(`Writing components.json...`).start()\n  const targetPath = path.resolve(cwd, \"components.json\")\n  await fs.writeFile(targetPath, JSON.stringify(config, null, 2), \"utf8\")\n  spinner.succeed()\n\n  return await resolveConfigPaths(cwd, config)\n}\n\nexport async function promptForMinimalConfig(\n  cwd: string,\n  defaultConfig: Config,\n  defaults = false\n) {\n  const highlight = (text: string) => chalk.cyan(text)\n  let style = defaultConfig.style\n  let baseColor = defaultConfig.tailwind.baseColor\n  let cssVariables = defaultConfig.tailwind.cssVariables\n\n  if (!defaults) {\n    const styles = await getRegistryStyles()\n    const baseColors = await getRegistryBaseColors()\n\n    const options = await prompts([\n      {\n        type: \"select\",\n        name: \"style\",\n        message: `Which ${highlight(\"style\")} would you like to use?`,\n        choices: styles.map((style) => ({\n          title: style.label,\n          value: style.name,\n        })),\n      },\n      {\n        type: \"select\",\n        name: \"tailwindBaseColor\",\n        message: `Which color would you like to use as ${highlight(\n          \"base color\"\n        )}?`,\n        choices: baseColors.map((color) => ({\n          title: color.label,\n          value: color.name,\n        })),\n      },\n      {\n        type: \"toggle\",\n        name: \"tailwindCssVariables\",\n        message: `Would you like to use ${highlight(\n          \"CSS variables\"\n        )} for colors?`,\n        initial: defaultConfig?.tailwind.cssVariables,\n        active: \"yes\",\n        inactive: \"no\",\n      },\n    ])\n\n    style = options.style\n    baseColor = options.tailwindBaseColor\n    cssVariables = options.tailwindCssVariables\n  }\n\n  const config = rawConfigSchema.parse({\n    $schema: defaultConfig?.$schema,\n    style,\n    tailwind: {\n      ...defaultConfig?.tailwind,\n      baseColor,\n      cssVariables,\n    },\n    rsc: defaultConfig?.rsc,\n    tsx: defaultConfig?.tsx,\n    aliases: defaultConfig?.aliases,\n  })\n\n  // Write to file.\n  logger.info(\"\")\n  const spinner = ora(`Writing components.json...`).start()\n  const targetPath = path.resolve(cwd, \"components.json\")\n  await fs.writeFile(targetPath, JSON.stringify(config, null, 2), \"utf8\")\n  spinner.succeed()\n\n  return await resolveConfigPaths(cwd, config)\n}\n\nexport async function runInit(cwd: string, config: Config) {\n  const spinner = ora(`Initializing project...`)?.start()\n\n  // Ensure all resolved paths directories exist.\n  for (const [key, resolvedPath] of Object.entries(config.resolvedPaths)) {\n    // Determine if the path is a file or directory.\n    // TODO: is there a better way to do this?\n    let dirname = path.extname(resolvedPath)\n      ? path.dirname(resolvedPath)\n      : resolvedPath\n\n    // If the utils alias is set to something like \"@/lib/utils\",\n    // assume this is a file and remove the \"utils\" file name.\n    // TODO: In future releases we should add support for individual utils.\n    if (key === \"utils\" && resolvedPath.endsWith(\"/utils\")) {\n      // Remove /utils at the end.\n      dirname = dirname.replace(/\\/utils$/, \"\")\n    }\n\n    if (!existsSync(dirname)) {\n      await fs.mkdir(dirname, { recursive: true })\n    }\n  }\n\n  const extension = config.tsx ? \"ts\" : \"js\"\n\n  const tailwindConfigExtension = path.extname(\n    config.resolvedPaths.tailwindConfig\n  )\n\n  let tailwindConfigTemplate: string\n  if (tailwindConfigExtension === \".ts\") {\n    tailwindConfigTemplate = config.tailwind.cssVariables\n      ? templates.TAILWIND_CONFIG_TS_WITH_VARIABLES\n      : templates.TAILWIND_CONFIG_TS\n  } else {\n    tailwindConfigTemplate = config.tailwind.cssVariables\n      ? templates.TAILWIND_CONFIG_WITH_VARIABLES\n      : templates.TAILWIND_CONFIG\n  }\n\n  // Write tailwind config.\n  await fs.writeFile(\n    config.resolvedPaths.tailwindConfig,\n    template(tailwindConfigTemplate)({\n      extension,\n      prefix: config.tailwind.prefix,\n    }),\n    \"utf8\"\n  )\n\n  // Write css file.\n  const baseColor = await getRegistryBaseColor(config.tailwind.baseColor)\n  if (baseColor) {\n    await fs.writeFile(\n      config.resolvedPaths.tailwindCss,\n      config.tailwind.cssVariables\n        ? config.tailwind.prefix\n          ? applyPrefixesCss(baseColor.cssVarsTemplate, config.tailwind.prefix)\n          : baseColor.cssVarsTemplate\n        : baseColor.inlineColorsTemplate,\n      \"utf8\"\n    )\n  }\n\n  // Write cn file.\n  await fs.writeFile(\n    `${config.resolvedPaths.utils}.${extension}`,\n    extension === \"ts\" ? templates.UTILS : templates.UTILS_JS,\n    \"utf8\"\n  )\n\n  spinner?.succeed()\n\n  // Install dependencies.\n  const dependenciesSpinner = ora(`Installing dependencies...`)?.start()\n  const packageManager = await getPackageManager(cwd)\n\n  // TODO: add support for other icon libraries.\n  const deps = [...PROJECT_DEPENDENCIES, \"lucide-react\"]\n\n  await execa(\n    packageManager,\n    [packageManager === \"npm\" ? \"install\" : \"add\", ...deps],\n    {\n      cwd,\n    }\n  )\n  dependenciesSpinner?.succeed()\n}\n",
    "dependencies": [
      "fs",
      "path",
      "@/src/utils/get-config",
      "@/src/utils/get-package-manager",
      "@/src/utils/get-project-info",
      "@/src/utils/handle-error",
      "@/src/utils/logger",
      "@/src/utils/registry",
      "@/src/utils/templates",
      "chalk",
      "commander",
      "execa",
      "lodash.template",
      "ora",
      "prompts",
      "zod",
      "../utils/transformers/transform-tw-prefix"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/packages/cli/src/index.ts": {
    "source": "#!/usr/bin/env node\nimport { add } from \"@/src/commands/add\"\nimport { diff } from \"@/src/commands/diff\"\nimport { init } from \"@/src/commands/init\"\nimport { Command } from \"commander\"\n\nimport { getPackageInfo } from \"./utils/get-package-info\"\n\nprocess.on(\"SIGINT\", () => process.exit(0))\nprocess.on(\"SIGTERM\", () => process.exit(0))\n\nasync function main() {\n  const packageInfo = await getPackageInfo()\n\n  const program = new Command()\n    .name(\"shadcn-ui\")\n    .description(\"add components and dependencies to your project\")\n    .version(\n      packageInfo.version || \"1.0.0\",\n      \"-v, --version\",\n      \"display the version number\"\n    )\n\n  program.addCommand(init).addCommand(add).addCommand(diff)\n\n  program.parse()\n}\n\nmain()\n",
    "dependencies": [
      "@/src/commands/add",
      "@/src/commands/diff",
      "@/src/commands/init",
      "commander",
      "./utils/get-package-info"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/packages/cli/src/utils/get-config.ts": {
    "source": "import path from \"path\"\nimport { resolveImport } from \"@/src/utils/resolve-import\"\nimport { cosmiconfig } from \"cosmiconfig\"\nimport { loadConfig } from \"tsconfig-paths\"\nimport { z } from \"zod\"\n\nexport const DEFAULT_STYLE = \"default\"\nexport const DEFAULT_COMPONENTS = \"@/components\"\nexport const DEFAULT_UTILS = \"@/lib/utils\"\nexport const DEFAULT_TAILWIND_CSS = \"app/globals.css\"\nexport const DEFAULT_TAILWIND_CONFIG = \"tailwind.config.js\"\nexport const DEFAULT_TAILWIND_BASE_COLOR = \"slate\"\n\n// TODO: Figure out if we want to support all cosmiconfig formats.\n// A simple components.json file would be nice.\nconst explorer = cosmiconfig(\"components\", {\n  searchPlaces: [\"components.json\"],\n})\n\nexport const rawConfigSchema = z\n  .object({\n    $schema: z.string().optional(),\n    style: z.string(),\n    rsc: z.coerce.boolean().default(false),\n    tsx: z.coerce.boolean().default(true),\n    tailwind: z.object({\n      config: z.string(),\n      css: z.string(),\n      baseColor: z.string(),\n      cssVariables: z.boolean().default(true),\n      prefix: z.string().default(\"\").optional(),\n    }),\n    aliases: z.object({\n      components: z.string(),\n      utils: z.string(),\n      ui: z.string().optional(),\n    }),\n  })\n  .strict()\n\nexport type RawConfig = z.infer<typeof rawConfigSchema>\n\nexport const configSchema = rawConfigSchema.extend({\n  resolvedPaths: z.object({\n    tailwindConfig: z.string(),\n    tailwindCss: z.string(),\n    utils: z.string(),\n    components: z.string(),\n    ui: z.string(),\n  }),\n})\n\nexport type Config = z.infer<typeof configSchema>\n\nexport async function getConfig(cwd: string) {\n  const config = await getRawConfig(cwd)\n\n  if (!config) {\n    return null\n  }\n\n  return await resolveConfigPaths(cwd, config)\n}\n\nexport async function resolveConfigPaths(cwd: string, config: RawConfig) {\n  // Read tsconfig.json.\n  const tsConfig = await loadConfig(cwd)\n\n  if (tsConfig.resultType === \"failed\") {\n    throw new Error(\n      `Failed to load ${config.tsx ? \"tsconfig\" : \"jsconfig\"}.json. ${\n        tsConfig.message ?? \"\"\n      }`.trim()\n    )\n  }\n\n  return configSchema.parse({\n    ...config,\n    resolvedPaths: {\n      tailwindConfig: path.resolve(cwd, config.tailwind.config),\n      tailwindCss: path.resolve(cwd, config.tailwind.css),\n      utils: await resolveImport(config.aliases[\"utils\"], tsConfig),\n      components: await resolveImport(config.aliases[\"components\"], tsConfig),\n      ui: config.aliases[\"ui\"]\n        ? await resolveImport(config.aliases[\"ui\"], tsConfig)\n        : await resolveImport(config.aliases[\"components\"], tsConfig),\n    },\n  })\n}\n\nexport async function getRawConfig(cwd: string): Promise<RawConfig | null> {\n  try {\n    const configResult = await explorer.search(cwd)\n\n    if (!configResult) {\n      return null\n    }\n\n    return rawConfigSchema.parse(configResult.config)\n  } catch (error) {\n    throw new Error(`Invalid configuration found in ${cwd}/components.json.`)\n  }\n}\n",
    "dependencies": [
      "path",
      "@/src/utils/resolve-import",
      "cosmiconfig",
      "tsconfig-paths",
      "zod"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/packages/cli/src/utils/get-package-info.ts": {
    "source": "import path from \"path\"\nimport fs from \"fs-extra\"\nimport { type PackageJson } from \"type-fest\"\n\nexport function getPackageInfo() {\n  const packageJsonPath = path.join(\"package.json\")\n\n  return fs.readJSONSync(packageJsonPath) as PackageJson\n}\n",
    "dependencies": ["path", "fs-extra", "type-fest"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/packages/cli/src/utils/get-package-manager.ts": {
    "source": "import { detect } from \"@antfu/ni\"\n\nexport async function getPackageManager(\n  targetDir: string\n): Promise<\"yarn\" | \"pnpm\" | \"bun\" | \"npm\"> {\n  const packageManager = await detect({ programmatic: true, cwd: targetDir })\n\n  if (packageManager === \"yarn@berry\") return \"yarn\"\n  if (packageManager === \"pnpm@6\") return \"pnpm\"\n  if (packageManager === \"bun\") return \"bun\"\n\n  return packageManager ?? \"npm\"\n}\n",
    "dependencies": ["@antfu/ni"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/packages/cli/src/utils/get-project-info.ts": {
    "source": "import { existsSync } from \"fs\"\nimport path from \"path\"\nimport {\n  Config,\n  RawConfig,\n  getConfig,\n  resolveConfigPaths,\n} from \"@/src/utils/get-config\"\nimport fg from \"fast-glob\"\nimport fs, { pathExists } from \"fs-extra\"\nimport { loadConfig } from \"tsconfig-paths\"\n\n// TODO: Add support for more frameworks.\n// We'll start with Next.js for now.\nconst PROJECT_TYPES = [\n  \"next-app\",\n  \"next-app-src\",\n  \"next-pages\",\n  \"next-pages-src\",\n] as const\n\ntype ProjectType = (typeof PROJECT_TYPES)[number]\n\nconst PROJECT_SHARED_IGNORE = [\n  \"**/node_modules/**\",\n  \".next\",\n  \"public\",\n  \"dist\",\n  \"build\",\n]\n\nexport async function getProjectInfo() {\n  const info = {\n    tsconfig: null,\n    srcDir: false,\n    appDir: false,\n    srcComponentsUiDir: false,\n    componentsUiDir: false,\n  }\n\n  try {\n    const tsconfig = await getTsConfig()\n\n    return {\n      tsconfig,\n      srcDir: existsSync(path.resolve(\"./src\")),\n      appDir:\n        existsSync(path.resolve(\"./app\")) ||\n        existsSync(path.resolve(\"./src/app\")),\n      srcComponentsUiDir: existsSync(path.resolve(\"./src/components/ui\")),\n      componentsUiDir: existsSync(path.resolve(\"./components/ui\")),\n    }\n  } catch (error) {\n    return info\n  }\n}\n\nexport async function getTsConfig() {\n  try {\n    const tsconfigPath = path.join(\"tsconfig.json\")\n    const tsconfig = await fs.readJSON(tsconfigPath)\n\n    if (!tsconfig) {\n      throw new Error(\"tsconfig.json is missing\")\n    }\n\n    return tsconfig\n  } catch (error) {\n    return null\n  }\n}\n\nexport async function getProjectConfig(cwd: string): Promise<Config | null> {\n  // Check for existing component config.\n  const existingConfig = await getConfig(cwd)\n  if (existingConfig) {\n    return existingConfig\n  }\n\n  const projectType = await getProjectType(cwd)\n  const tailwindCssFile = await getTailwindCssFile(cwd)\n  const tsConfigAliasPrefix = await getTsConfigAliasPrefix(cwd)\n\n  if (!projectType || !tailwindCssFile || !tsConfigAliasPrefix) {\n    return null\n  }\n\n  const isTsx = await isTypeScriptProject(cwd)\n\n  const config: RawConfig = {\n    $schema: \"https://ui.shadcn.com/schema.json\",\n    rsc: [\"next-app\", \"next-app-src\"].includes(projectType),\n    tsx: isTsx,\n    style: \"default\",\n    tailwind: {\n      config: isTsx ? \"tailwind.config.ts\" : \"tailwind.config.js\",\n      baseColor: \"zinc\",\n      css: tailwindCssFile,\n      cssVariables: true,\n      prefix: \"\",\n    },\n    aliases: {\n      utils: `${tsConfigAliasPrefix}/lib/utils`,\n      components: `${tsConfigAliasPrefix}/components`,\n    },\n  }\n\n  return await resolveConfigPaths(cwd, config)\n}\n\nexport async function getProjectType(cwd: string): Promise<ProjectType | null> {\n  const files = await fg.glob(\"**/*\", {\n    cwd,\n    deep: 3,\n    ignore: PROJECT_SHARED_IGNORE,\n  })\n\n  const isNextProject = files.find((file) => file.startsWith(\"next.config.\"))\n  if (!isNextProject) {\n    return null\n  }\n\n  const isUsingSrcDir = await fs.pathExists(path.resolve(cwd, \"src\"))\n  const isUsingAppDir = await fs.pathExists(\n    path.resolve(cwd, `${isUsingSrcDir ? \"src/\" : \"\"}app`)\n  )\n\n  if (isUsingAppDir) {\n    return isUsingSrcDir ? \"next-app-src\" : \"next-app\"\n  }\n\n  return isUsingSrcDir ? \"next-pages-src\" : \"next-pages\"\n}\n\nexport async function getTailwindCssFile(cwd: string) {\n  const files = await fg.glob(\"**/*.css\", {\n    cwd,\n    deep: 3,\n    ignore: PROJECT_SHARED_IGNORE,\n  })\n\n  if (!files.length) {\n    return null\n  }\n\n  for (const file of files) {\n    const contents = await fs.readFile(path.resolve(cwd, file), \"utf8\")\n    // Assume that if the file contains `@tailwind base` it's the main css file.\n    if (contents.includes(\"@tailwind base\")) {\n      return file\n    }\n  }\n\n  return null\n}\n\nexport async function getTsConfigAliasPrefix(cwd: string) {\n  const tsConfig = await loadConfig(cwd)\n\n  if (tsConfig?.resultType === \"failed\" || !tsConfig?.paths) {\n    return null\n  }\n\n  // This assume that the first alias is the prefix.\n  for (const [alias, paths] of Object.entries(tsConfig.paths)) {\n    if (paths.includes(\"./*\") || paths.includes(\"./src/*\")) {\n      return alias.at(0)\n    }\n  }\n\n  return null\n}\n\nexport async function isTypeScriptProject(cwd: string) {\n  // Check if cwd has a tsconfig.json file.\n  return pathExists(path.resolve(cwd, \"tsconfig.json\"))\n}\n\nexport async function preFlight(cwd: string) {\n  // We need Tailwind CSS to be configured.\n  const tailwindConfig = await fg.glob(\"tailwind.config.*\", {\n    cwd,\n    deep: 3,\n    ignore: PROJECT_SHARED_IGNORE,\n  })\n\n  if (!tailwindConfig.length) {\n    throw new Error(\n      \"Tailwind CSS is not installed. Visit https://tailwindcss.com/docs/installation to get started.\"\n    )\n  }\n\n  return true\n}\n",
    "dependencies": [
      "fs",
      "path",
      "@/src/utils/get-config",
      "fast-glob",
      "fs-extra",
      "tsconfig-paths"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/packages/cli/src/utils/handle-error.ts": {
    "source": "import { logger } from \"@/src/utils/logger\"\n\nexport function handleError(error: unknown) {\n  if (typeof error === \"string\") {\n    logger.error(error)\n    process.exit(1)\n  }\n\n  if (error instanceof Error) {\n    logger.error(error.message)\n    process.exit(1)\n  }\n\n  logger.error(\"Something went wrong. Please try again.\")\n  process.exit(1)\n}\n",
    "dependencies": ["@/src/utils/logger"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/packages/cli/src/utils/logger.ts": {
    "source": "import chalk from \"chalk\"\n\nexport const logger = {\n  error(...args: unknown[]) {\n    console.log(chalk.red(...args))\n  },\n  warn(...args: unknown[]) {\n    console.log(chalk.yellow(...args))\n  },\n  info(...args: unknown[]) {\n    console.log(chalk.cyan(...args))\n  },\n  success(...args: unknown[]) {\n    console.log(chalk.green(...args))\n  },\n  break() {\n    console.log(\"\")\n  },\n}\n",
    "dependencies": ["chalk"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/packages/cli/src/utils/registry/index.ts": {
    "source": "import path from \"path\"\nimport { Config } from \"@/src/utils/get-config\"\nimport {\n  registryBaseColorSchema,\n  registryIndexSchema,\n  registryItemWithContentSchema,\n  registryWithContentSchema,\n  stylesSchema,\n} from \"@/src/utils/registry/schema\"\nimport { HttpsProxyAgent } from \"https-proxy-agent\"\nimport fetch from \"node-fetch\"\nimport { z } from \"zod\"\n\nconst baseUrl = process.env.COMPONENTS_REGISTRY_URL ?? \"https://ui.shadcn.com\"\nconst agent = process.env.https_proxy\n  ? new HttpsProxyAgent(process.env.https_proxy)\n  : undefined\n\nexport async function getRegistryIndex() {\n  try {\n    const [result] = await fetchRegistry([\"index.json\"])\n\n    return registryIndexSchema.parse(result)\n  } catch (error) {\n    throw new Error(`Failed to fetch components from registry.`)\n  }\n}\n\nexport async function getRegistryStyles() {\n  try {\n    const [result] = await fetchRegistry([\"styles/index.json\"])\n\n    return stylesSchema.parse(result)\n  } catch (error) {\n    throw new Error(`Failed to fetch styles from registry.`)\n  }\n}\n\nexport async function getRegistryBaseColors() {\n  return [\n    {\n      name: \"slate\",\n      label: \"Slate\",\n    },\n    {\n      name: \"gray\",\n      label: \"Gray\",\n    },\n    {\n      name: \"zinc\",\n      label: \"Zinc\",\n    },\n    {\n      name: \"neutral\",\n      label: \"Neutral\",\n    },\n    {\n      name: \"stone\",\n      label: \"Stone\",\n    },\n  ]\n}\n\nexport async function getRegistryBaseColor(baseColor: string) {\n  try {\n    const [result] = await fetchRegistry([`colors/${baseColor}.json`])\n\n    return registryBaseColorSchema.parse(result)\n  } catch (error) {\n    throw new Error(`Failed to fetch base color from registry.`)\n  }\n}\n\nexport async function resolveTree(\n  index: z.infer<typeof registryIndexSchema>,\n  names: string[]\n) {\n  const tree: z.infer<typeof registryIndexSchema> = []\n\n  for (const name of names) {\n    const entry = index.find((entry) => entry.name === name)\n\n    if (!entry) {\n      continue\n    }\n\n    tree.push(entry)\n\n    if (entry.registryDependencies) {\n      const dependencies = await resolveTree(index, entry.registryDependencies)\n      tree.push(...dependencies)\n    }\n  }\n\n  return tree.filter(\n    (component, index, self) =>\n      self.findIndex((c) => c.name === component.name) === index\n  )\n}\n\nexport async function fetchTree(\n  style: string,\n  tree: z.infer<typeof registryIndexSchema>\n) {\n  try {\n    const paths = tree.map((item) => `styles/${style}/${item.name}.json`)\n    const result = await fetchRegistry(paths)\n\n    return registryWithContentSchema.parse(result)\n  } catch (error) {\n    throw new Error(`Failed to fetch tree from registry.`)\n  }\n}\n\nexport async function getItemTargetPath(\n  config: Config,\n  item: Pick<z.infer<typeof registryItemWithContentSchema>, \"type\">,\n  override?: string\n) {\n  if (override) {\n    return override\n  }\n\n  if (item.type === \"components:ui\" && config.aliases.ui) {\n    return config.resolvedPaths.ui\n  }\n\n  const [parent, type] = item.type.split(\":\")\n  if (!(parent in config.resolvedPaths)) {\n    return null\n  }\n\n  return path.join(\n    config.resolvedPaths[parent as keyof typeof config.resolvedPaths],\n    type\n  )\n}\n\nasync function fetchRegistry(paths: string[]) {\n  try {\n    const results = await Promise.all(\n      paths.map(async (path) => {\n        const response = await fetch(`${baseUrl}/registry/${path}`, {\n          agent,\n        })\n        return await response.json()\n      })\n    )\n\n    return results\n  } catch (error) {\n    console.log(error)\n    throw new Error(`Failed to fetch registry from ${baseUrl}.`)\n  }\n}\n",
    "dependencies": [
      "path",
      "@/src/utils/get-config",
      "@/src/utils/registry/schema",
      "https-proxy-agent",
      "node-fetch",
      "zod"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/packages/cli/src/utils/registry/schema.ts": {
    "source": "import { z } from \"zod\"\n\n// TODO: Extract this to a shared package.\nexport const registryItemSchema = z.object({\n  name: z.string(),\n  dependencies: z.array(z.string()).optional(),\n  devDependencies: z.array(z.string()).optional(),\n  registryDependencies: z.array(z.string()).optional(),\n  files: z.array(z.string()),\n  type: z.enum([\"components:ui\", \"components:component\", \"components:example\"]),\n})\n\nexport const registryIndexSchema = z.array(registryItemSchema)\n\nexport const registryItemWithContentSchema = registryItemSchema.extend({\n  files: z.array(\n    z.object({\n      name: z.string(),\n      content: z.string(),\n    })\n  ),\n})\n\nexport const registryWithContentSchema = z.array(registryItemWithContentSchema)\n\nexport const stylesSchema = z.array(\n  z.object({\n    name: z.string(),\n    label: z.string(),\n  })\n)\n\nexport const registryBaseColorSchema = z.object({\n  inlineColors: z.object({\n    light: z.record(z.string(), z.string()),\n    dark: z.record(z.string(), z.string()),\n  }),\n  cssVars: z.object({\n    light: z.record(z.string(), z.string()),\n    dark: z.record(z.string(), z.string()),\n  }),\n  inlineColorsTemplate: z.string(),\n  cssVarsTemplate: z.string(),\n})\n",
    "dependencies": ["zod"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/packages/cli/src/utils/resolve-import.ts": {
    "source": "import { createMatchPath, type ConfigLoaderSuccessResult } from \"tsconfig-paths\"\n\nexport async function resolveImport(\n  importPath: string,\n  config: Pick<ConfigLoaderSuccessResult, \"absoluteBaseUrl\" | \"paths\">\n) {\n  return createMatchPath(config.absoluteBaseUrl, config.paths)(\n    importPath,\n    undefined,\n    () => true,\n    [\".ts\", \".tsx\"]\n  )\n}\n",
    "dependencies": ["tsconfig-paths"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/packages/cli/src/utils/templates.ts": {
    "source": "export const UTILS = `import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n`\n\nexport const UTILS_JS = `import { clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs) {\n  return twMerge(clsx(inputs))\n}\n`\n\nexport const TAILWIND_CONFIG = `/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  darkMode: [\"class\"],\n  content: [\n    './pages/**/*.{<%- extension %>,<%- extension %>x}',\n    './components/**/*.{<%- extension %>,<%- extension %>x}',\n    './app/**/*.{<%- extension %>,<%- extension %>x}',\n    './src/**/*.{<%- extension %>,<%- extension %>x}',\n  ],\n  prefix: \"<%- prefix %>\",\n  theme: {\n    container: {\n      center: true,\n      padding: \"2rem\",\n      screens: {\n        \"2xl\": \"1400px\",\n      },\n    },\n    extend: {\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: \"0\" },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: \"0\" },\n        },\n        \"spinner-spin\": {\n          \"0%\": { opacity: \"1\" },\n          \"100%\": { opacity: \"0.15\" },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n        \"spinner-spin\": \"spinner-spin 1.2s linear infinite\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\")],\n}`\n\nexport const TAILWIND_CONFIG_WITH_VARIABLES = `/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  darkMode: [\"class\"],\n  content: [\n    './pages/**/*.{<%- extension %>,<%- extension %>x}',\n    './components/**/*.{<%- extension %>,<%- extension %>x}',\n    './app/**/*.{<%- extension %>,<%- extension %>x}',\n    './src/**/*.{<%- extension %>,<%- extension %>x}',\n  ],\n  prefix: \"<%- prefix %>\",\n  theme: {\n    container: {\n      center: true,\n      padding: \"2rem\",\n      screens: {\n        \"2xl\": \"1400px\",\n      },\n    },\n    extend: {\n      colors: {\n        border: \"hsl(var(--border))\",\n        input: \"hsl(var(--input))\",\n        ring: \"hsl(var(--ring))\",\n        background: \"hsl(var(--background))\",\n        foreground: \"hsl(var(--foreground))\",\n        primary: {\n          DEFAULT: \"hsl(var(--primary))\",\n          foreground: \"hsl(var(--primary-foreground))\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary))\",\n          foreground: \"hsl(var(--secondary-foreground))\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive))\",\n          foreground: \"hsl(var(--destructive-foreground))\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted))\",\n          foreground: \"hsl(var(--muted-foreground))\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent))\",\n          foreground: \"hsl(var(--accent-foreground))\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover))\",\n          foreground: \"hsl(var(--popover-foreground))\",\n        },\n        card: {\n          DEFAULT: \"hsl(var(--card))\",\n          foreground: \"hsl(var(--card-foreground))\",\n        },\n      },\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: \"0\" },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: \"0\" },\n        },\n        \"spinner-spin\": {\n          \"0%\": { opacity: \"1\" },\n          \"100%\": { opacity: \"0.15\" },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n        \"spinner-spin\": \"spinner-spin 1.2s linear infinite\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\")],\n}`\n\nexport const TAILWIND_CONFIG_TS = `import type { Config } from \"tailwindcss\"\n\nconst config = {\n  darkMode: [\"class\"],\n  content: [\n    './pages/**/*.{<%- extension %>,<%- extension %>x}',\n    './components/**/*.{<%- extension %>,<%- extension %>x}',\n    './app/**/*.{<%- extension %>,<%- extension %>x}',\n    './src/**/*.{<%- extension %>,<%- extension %>x}',\n  ],\n  prefix: \"<%- prefix %>\",\n  theme: {\n    container: {\n      center: true,\n      padding: \"2rem\",\n      screens: {\n        \"2xl\": \"1400px\",\n      },\n    },\n    extend: {\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: \"0\" },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: \"0\" },\n        },\n        \"spinner-spin\": {\n          \"0%\": { opacity: \"1\" },\n          \"100%\": { opacity: \"0.15\" },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n        \"spinner-spin\": \"spinner-spin 1.2s linear infinite\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\")],\n} satisfies Config\n\nexport default config`\n\nexport const TAILWIND_CONFIG_TS_WITH_VARIABLES = `import type { Config } from \"tailwindcss\"\n\nconst config = {\n  darkMode: [\"class\"],\n  content: [\n    './pages/**/*.{<%- extension %>,<%- extension %>x}',\n    './components/**/*.{<%- extension %>,<%- extension %>x}',\n    './app/**/*.{<%- extension %>,<%- extension %>x}',\n    './src/**/*.{<%- extension %>,<%- extension %>x}',\n\t],\n  prefix: \"<%- prefix %>\",\n  theme: {\n    container: {\n      center: true,\n      padding: \"2rem\",\n      screens: {\n        \"2xl\": \"1400px\",\n      },\n    },\n    extend: {\n      colors: {\n        border: \"hsl(var(--border))\",\n        input: \"hsl(var(--input))\",\n        ring: \"hsl(var(--ring))\",\n        background: \"hsl(var(--background))\",\n        foreground: \"hsl(var(--foreground))\",\n        primary: {\n          DEFAULT: \"hsl(var(--primary))\",\n          foreground: \"hsl(var(--primary-foreground))\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary))\",\n          foreground: \"hsl(var(--secondary-foreground))\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive))\",\n          foreground: \"hsl(var(--destructive-foreground))\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted))\",\n          foreground: \"hsl(var(--muted-foreground))\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent))\",\n          foreground: \"hsl(var(--accent-foreground))\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover))\",\n          foreground: \"hsl(var(--popover-foreground))\",\n        },\n        card: {\n          DEFAULT: \"hsl(var(--card))\",\n          foreground: \"hsl(var(--card-foreground))\",\n        },\n      },\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: \"0\" },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: \"0\" },\n        },\n        \"spinner-spin\": {\n          \"0%\": { opacity: \"1\" },\n          \"100%\": { opacity: \"0.15\" },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n        \"spinner-spin\": \"spinner-spin 1.2s linear infinite\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\")],\n} satisfies Config\n\nexport default config`\n",
    "dependencies": []
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/packages/cli/src/utils/transformers/index.ts": {
    "source": "import { promises as fs } from \"fs\"\nimport { tmpdir } from \"os\"\nimport path from \"path\"\nimport { Config } from \"@/src/utils/get-config\"\nimport { registryBaseColorSchema } from \"@/src/utils/registry/schema\"\nimport { transformCssVars } from \"@/src/utils/transformers/transform-css-vars\"\nimport { transformImport } from \"@/src/utils/transformers/transform-import\"\nimport { transformJsx } from \"@/src/utils/transformers/transform-jsx\"\nimport { transformRsc } from \"@/src/utils/transformers/transform-rsc\"\nimport { Project, ScriptKind, type SourceFile } from \"ts-morph\"\nimport { z } from \"zod\"\n\nimport { transformTwPrefixes } from \"./transform-tw-prefix\"\n\nexport type TransformOpts = {\n  filename: string\n  raw: string\n  config: Config\n  baseColor?: z.infer<typeof registryBaseColorSchema>\n}\n\nexport type Transformer<Output = SourceFile> = (\n  opts: TransformOpts & {\n    sourceFile: SourceFile\n  }\n) => Promise<Output>\n\nconst transformers: Transformer[] = [\n  transformImport,\n  transformRsc,\n  transformCssVars,\n  transformTwPrefixes,\n]\n\nconst project = new Project({\n  compilerOptions: {},\n})\n\nasync function createTempSourceFile(filename: string) {\n  const dir = await fs.mkdtemp(path.join(tmpdir(), \"shadcn-\"))\n  return path.join(dir, filename)\n}\n\nexport async function transform(opts: TransformOpts) {\n  const tempFile = await createTempSourceFile(opts.filename)\n  const sourceFile = project.createSourceFile(tempFile, opts.raw, {\n    scriptKind: ScriptKind.TSX,\n  })\n\n  for (const transformer of transformers) {\n    transformer({ sourceFile, ...opts })\n  }\n\n  return await transformJsx({\n    sourceFile,\n    ...opts,\n  })\n}\n",
    "dependencies": [
      "fs",
      "os",
      "path",
      "@/src/utils/get-config",
      "@/src/utils/registry/schema",
      "@/src/utils/transformers/transform-css-vars",
      "@/src/utils/transformers/transform-import",
      "@/src/utils/transformers/transform-jsx",
      "@/src/utils/transformers/transform-rsc",
      "ts-morph",
      "zod",
      "./transform-tw-prefix"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/packages/cli/src/utils/transformers/transform-css-vars.ts": {
    "source": "import { registryBaseColorSchema } from \"@/src/utils/registry/schema\"\nimport { Transformer } from \"@/src/utils/transformers\"\nimport { ScriptKind, SyntaxKind } from \"ts-morph\"\nimport { z } from \"zod\"\n\nexport const transformCssVars: Transformer = async ({\n  sourceFile,\n  config,\n  baseColor,\n}) => {\n  // No transform if using css variables.\n  if (config.tailwind?.cssVariables || !baseColor?.inlineColors) {\n    return sourceFile\n  }\n\n  // Find jsx attributes with the name className.\n  // const openingElements = sourceFile.getDescendantsOfKind(SyntaxKind.JsxElement)\n  // console.log(openingElements)\n  // const jsxAttributes = sourceFile\n  //   .getDescendantsOfKind(SyntaxKind.JsxAttribute)\n  //   .filter((node) => node.getName() === \"className\")\n\n  // for (const jsxAttribute of jsxAttributes) {\n  //   const value = jsxAttribute.getInitializer()?.getText()\n  //   if (value) {\n  //     const valueWithColorMapping = applyColorMapping(\n  //       value.replace(/\"/g, \"\"),\n  //       baseColor.inlineColors\n  //     )\n  //     jsxAttribute.setInitializer(`\"${valueWithColorMapping}\"`)\n  //   }\n  // }\n  sourceFile.getDescendantsOfKind(SyntaxKind.StringLiteral).forEach((node) => {\n    const value = node.getText()\n    if (value) {\n      const valueWithColorMapping = applyColorMapping(\n        value.replace(/\"/g, \"\"),\n        baseColor.inlineColors\n      )\n      node.replaceWithText(`\"${valueWithColorMapping.trim()}\"`)\n    }\n  })\n\n  return sourceFile\n}\n\n// export default function transformer(file: FileInfo, api: API) {\n//   const j = api.jscodeshift.withParser(\"tsx\")\n\n//   // Replace bg-background-200 with \"bg-white dark:bg-slate-950\"\n//   const $j = j(file.source)\n//   return $j\n//     .find(j.JSXAttribute, {\n//       name: {\n//         name: \"className\",\n//       },\n//     })\n//     .forEach((path) => {\n//       const { node } = path\n//       if (node?.value?.type) {\n//         if (node.value.type === \"StringLiteral\") {\n//           node.value.value = applyColorMapping(node.value.value)\n//           console.log(node.value.value)\n//         }\n\n//         if (\n//           node.value.type === \"JSXExpressionContainer\" &&\n//           node.value.expression.type === \"CallExpression\"\n//         ) {\n//           const callee = node.value.expression.callee\n//           if (callee.type === \"Identifier\" && callee.name === \"cn\") {\n//             node.value.expression.arguments.forEach((arg) => {\n//               if (arg.type === \"StringLiteral\") {\n//                 arg.value = applyColorMapping(arg.value)\n//               }\n\n//               if (\n//                 arg.type === \"LogicalExpression\" &&\n//                 arg.right.type === \"StringLiteral\"\n//               ) {\n//                 arg.right.value = applyColorMapping(arg.right.value)\n//               }\n//             })\n//           }\n//         }\n//       }\n//     })\n//     .toSource()\n// }\n\n// // export function splitClassName(input: string): (string | null)[] {\n// //   const parts = input.split(\":\")\n// //   const classNames = parts.map((part) => {\n// //     const match = part.match(/^\\[?(.+)\\]$/)\n// //     if (match) {\n// //       return match[1]\n// //     } else {\n// //       return null\n// //     }\n// //   })\n\n// //   return classNames\n// // }\n\n// Splits a className into variant-name-alpha.\n// eg. hover:bg-primary-100 -> [hover, bg-primary, 100]\nexport function splitClassName(className: string): (string | null)[] {\n  if (!className.includes(\"/\") && !className.includes(\":\")) {\n    return [null, className, null]\n  }\n\n  const parts: (string | null)[] = []\n  // First we split to find the alpha.\n  let [rest, alpha] = className.split(\"/\")\n\n  // Check if rest has a colon.\n  if (!rest.includes(\":\")) {\n    return [null, rest, alpha]\n  }\n\n  // Next we split the rest by the colon.\n  const split = rest.split(\":\")\n\n  // We take the last item from the split as the name.\n  const name = split.pop()\n\n  // We glue back the rest of the split.\n  const variant = split.join(\":\")\n\n  // Finally we push the variant, name and alpha.\n  parts.push(variant ?? null, name ?? null, alpha ?? null)\n\n  return parts\n}\n\nconst PREFIXES = [\"bg-\", \"text-\", \"border-\", \"ring-offset-\", \"ring-\"]\n\nexport function applyColorMapping(\n  input: string,\n  mapping: z.infer<typeof registryBaseColorSchema>[\"inlineColors\"]\n) {\n  // Handle border classes.\n  if (input.includes(\" border \")) {\n    input = input.replace(\" border \", \" border border-border \")\n  }\n\n  // Build color mappings.\n  const classNames = input.split(\" \")\n  const lightMode = new Set<string>()\n  const darkMode = new Set<string>()\n  for (let className of classNames) {\n    const [variant, value, modifier] = splitClassName(className)\n    const prefix = PREFIXES.find((prefix) => value?.startsWith(prefix))\n    if (!prefix) {\n      if (!lightMode.has(className)) {\n        lightMode.add(className)\n      }\n      continue\n    }\n\n    const needle = value?.replace(prefix, \"\")\n    if (needle && needle in mapping.light) {\n      lightMode.add(\n        [variant, `${prefix}${mapping.light[needle]}`]\n          .filter(Boolean)\n          .join(\":\") + (modifier ? `/${modifier}` : \"\")\n      )\n\n      darkMode.add(\n        [\"dark\", variant, `${prefix}${mapping.dark[needle]}`]\n          .filter(Boolean)\n          .join(\":\") + (modifier ? `/${modifier}` : \"\")\n      )\n      continue\n    }\n\n    if (!lightMode.has(className)) {\n      lightMode.add(className)\n    }\n  }\n\n  return [...Array.from(lightMode), ...Array.from(darkMode)].join(\" \").trim()\n}\n",
    "dependencies": [
      "@/src/utils/registry/schema",
      "@/src/utils/transformers",
      "ts-morph",
      "zod"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/packages/cli/src/utils/transformers/transform-import.ts": {
    "source": "import { Transformer } from \"@/src/utils/transformers\"\n\nexport const transformImport: Transformer = async ({ sourceFile, config }) => {\n  const importDeclarations = sourceFile.getImportDeclarations()\n\n  for (const importDeclaration of importDeclarations) {\n    const moduleSpecifier = importDeclaration.getModuleSpecifierValue()\n\n    // Replace @/registry/[style] with the components alias.\n    if (moduleSpecifier.startsWith(\"@/registry/\")) {\n      if (config.aliases.ui) {\n        importDeclaration.setModuleSpecifier(\n          moduleSpecifier.replace(/^@\\/registry\\/[^/]+\\/ui/, config.aliases.ui)\n        )\n      } else {\n        importDeclaration.setModuleSpecifier(\n          moduleSpecifier.replace(\n            /^@\\/registry\\/[^/]+/,\n            config.aliases.components\n          )\n        )\n      }\n    }\n\n    // Replace `import { cn } from \"@/lib/utils\"`\n    if (moduleSpecifier == \"@/lib/utils\") {\n      const namedImports = importDeclaration.getNamedImports()\n      const cnImport = namedImports.find((i) => i.getName() === \"cn\")\n      if (cnImport) {\n        importDeclaration.setModuleSpecifier(\n          moduleSpecifier.replace(/^@\\/lib\\/utils/, config.aliases.utils)\n        )\n      }\n    }\n  }\n\n  return sourceFile\n}\n",
    "dependencies": ["@/src/utils/transformers"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/packages/cli/src/utils/transformers/transform-jsx.ts": {
    "source": "import { type Transformer } from \"@/src/utils/transformers\"\nimport { transformFromAstSync } from \"@babel/core\"\nimport { ParserOptions, parse } from \"@babel/parser\"\n// @ts-ignore\nimport transformTypescript from \"@babel/plugin-transform-typescript\"\nimport * as recast from \"recast\"\n\n// TODO.\n// I'm using recast for the AST here.\n// Figure out if ts-morph AST is compatible with Babel.\n\n// This is a copy of the babel options from recast/parser.\n// The goal here is to tolerate as much syntax as possible.\n// We want to be able to parse any valid tsx code.\n// See https://github.com/benjamn/recast/blob/master/parsers/_babel_options.ts.\nconst PARSE_OPTIONS: ParserOptions = {\n  sourceType: \"module\",\n  allowImportExportEverywhere: true,\n  allowReturnOutsideFunction: true,\n  startLine: 1,\n  tokens: true,\n  plugins: [\n    \"asyncGenerators\",\n    \"bigInt\",\n    \"classPrivateMethods\",\n    \"classPrivateProperties\",\n    \"classProperties\",\n    \"classStaticBlock\",\n    \"decimal\",\n    \"decorators-legacy\",\n    \"doExpressions\",\n    \"dynamicImport\",\n    \"exportDefaultFrom\",\n    \"exportNamespaceFrom\",\n    \"functionBind\",\n    \"functionSent\",\n    \"importAssertions\",\n    \"importMeta\",\n    \"nullishCoalescingOperator\",\n    \"numericSeparator\",\n    \"objectRestSpread\",\n    \"optionalCatchBinding\",\n    \"optionalChaining\",\n    [\n      \"pipelineOperator\",\n      {\n        proposal: \"minimal\",\n      },\n    ],\n    [\n      \"recordAndTuple\",\n      {\n        syntaxType: \"hash\",\n      },\n    ],\n    \"throwExpressions\",\n    \"topLevelAwait\",\n    \"v8intrinsic\",\n    \"typescript\",\n    \"jsx\",\n  ],\n}\n\nexport const transformJsx: Transformer<String> = async ({\n  sourceFile,\n  config,\n}) => {\n  const output = sourceFile.getFullText()\n\n  if (config.tsx) {\n    return output\n  }\n\n  const ast = recast.parse(output, {\n    parser: {\n      parse: (code: string) => {\n        return parse(code, PARSE_OPTIONS)\n      },\n    },\n  })\n\n  const result = transformFromAstSync(ast, output, {\n    cloneInputAst: false,\n    code: false,\n    ast: true,\n    plugins: [transformTypescript],\n    configFile: false,\n  })\n\n  if (!result || !result.ast) {\n    throw new Error(\"Failed to transform JSX\")\n  }\n\n  return recast.print(result.ast).code\n}\n",
    "dependencies": [
      "@/src/utils/transformers",
      "@babel/core",
      "@babel/parser",
      "@babel/plugin-transform-typescript",
      "recast"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/packages/cli/src/utils/transformers/transform-rsc.ts": {
    "source": "import { Transformer } from \"@/src/utils/transformers\"\nimport { SyntaxKind } from \"ts-morph\"\n\nexport const transformRsc: Transformer = async ({ sourceFile, config }) => {\n  if (config.rsc) {\n    return sourceFile\n  }\n\n  // Remove \"use client\" from the top of the file.\n  const first = sourceFile.getFirstChildByKind(SyntaxKind.ExpressionStatement)\n  if (first?.getText() === `\"use client\"`) {\n    first.remove()\n  }\n\n  return sourceFile\n}\n",
    "dependencies": ["@/src/utils/transformers", "ts-morph"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/packages/cli/src/utils/transformers/transform-tw-prefix.ts": {
    "source": "import { Transformer } from \"@/src/utils/transformers\"\nimport { SyntaxKind } from \"ts-morph\"\n\nimport { splitClassName } from \"./transform-css-vars\"\n\nexport const transformTwPrefixes: Transformer = async ({\n  sourceFile,\n  config,\n}) => {\n  if (!config.tailwind?.prefix) {\n    return sourceFile\n  }\n\n  // Find the cva function calls.\n  sourceFile\n    .getDescendantsOfKind(SyntaxKind.CallExpression)\n    .filter((node) => node.getExpression().getText() === \"cva\")\n    .forEach((node) => {\n      // cva(base, ...)\n      if (node.getArguments()[0]?.isKind(SyntaxKind.StringLiteral)) {\n        const defaultClassNames = node.getArguments()[0]\n        if (defaultClassNames) {\n          defaultClassNames.replaceWithText(\n            `\"${applyPrefix(\n              defaultClassNames.getText()?.replace(/\"/g, \"\"),\n              config.tailwind.prefix\n            )}\"`\n          )\n        }\n      }\n\n      // cva(..., { variants: { ... } })\n      if (node.getArguments()[1]?.isKind(SyntaxKind.ObjectLiteralExpression)) {\n        node\n          .getArguments()[1]\n          ?.getDescendantsOfKind(SyntaxKind.PropertyAssignment)\n          .find((node) => node.getName() === \"variants\")\n          ?.getDescendantsOfKind(SyntaxKind.PropertyAssignment)\n          .forEach((node) => {\n            node\n              .getDescendantsOfKind(SyntaxKind.PropertyAssignment)\n              .forEach((node) => {\n                const classNames = node.getInitializerIfKind(\n                  SyntaxKind.StringLiteral\n                )\n                if (classNames) {\n                  classNames?.replaceWithText(\n                    `\"${applyPrefix(\n                      classNames.getText()?.replace(/\"/g, \"\"),\n                      config.tailwind.prefix\n                    )}\"`\n                  )\n                }\n              })\n          })\n      }\n    })\n\n  // Find all jsx attributes with the name className.\n  sourceFile.getDescendantsOfKind(SyntaxKind.JsxAttribute).forEach((node) => {\n    if (node.getName() === \"className\") {\n      // className=\"...\"\n      if (node.getInitializer()?.isKind(SyntaxKind.StringLiteral)) {\n        const value = node.getInitializer()\n        if (value) {\n          value.replaceWithText(\n            `\"${applyPrefix(\n              value.getText()?.replace(/\"/g, \"\"),\n              config.tailwind.prefix\n            )}\"`\n          )\n        }\n      }\n\n      // className={...}\n      if (node.getInitializer()?.isKind(SyntaxKind.JsxExpression)) {\n        // Check if it's a call to cn().\n        const callExpression = node\n          .getInitializer()\n          ?.getDescendantsOfKind(SyntaxKind.CallExpression)\n          .find((node) => node.getExpression().getText() === \"cn\")\n        if (callExpression) {\n          // Loop through the arguments.\n          callExpression.getArguments().forEach((node) => {\n            if (\n              node.isKind(SyntaxKind.ConditionalExpression) ||\n              node.isKind(SyntaxKind.BinaryExpression)\n            ) {\n              node\n                .getChildrenOfKind(SyntaxKind.StringLiteral)\n                .forEach((node) => {\n                  node.replaceWithText(\n                    `\"${applyPrefix(\n                      node.getText()?.replace(/\"/g, \"\"),\n                      config.tailwind.prefix\n                    )}\"`\n                  )\n                })\n            }\n\n            if (node.isKind(SyntaxKind.StringLiteral)) {\n              node.replaceWithText(\n                `\"${applyPrefix(\n                  node.getText()?.replace(/\"/g, \"\"),\n                  config.tailwind.prefix\n                )}\"`\n              )\n            }\n          })\n        }\n      }\n    }\n\n    // classNames={...}\n    if (node.getName() === \"classNames\") {\n      if (node.getInitializer()?.isKind(SyntaxKind.JsxExpression)) {\n        node\n          .getDescendantsOfKind(SyntaxKind.PropertyAssignment)\n          .forEach((node) => {\n            if (node.getInitializer()?.isKind(SyntaxKind.CallExpression)) {\n              const callExpression = node.getInitializerIfKind(\n                SyntaxKind.CallExpression\n              )\n              if (callExpression) {\n                // Loop through the arguments.\n                callExpression.getArguments().forEach((arg) => {\n                  if (arg.isKind(SyntaxKind.ConditionalExpression)) {\n                    arg\n                      .getChildrenOfKind(SyntaxKind.StringLiteral)\n                      .forEach((node) => {\n                        node.replaceWithText(\n                          `\"${applyPrefix(\n                            node.getText()?.replace(/\"/g, \"\"),\n                            config.tailwind.prefix\n                          )}\"`\n                        )\n                      })\n                  }\n\n                  if (arg.isKind(SyntaxKind.StringLiteral)) {\n                    arg.replaceWithText(\n                      `\"${applyPrefix(\n                        arg.getText()?.replace(/\"/g, \"\"),\n                        config.tailwind.prefix\n                      )}\"`\n                    )\n                  }\n                })\n              }\n            }\n\n            if (node.getInitializer()?.isKind(SyntaxKind.StringLiteral)) {\n              if (node.getName() !== \"variant\") {\n                const classNames = node.getInitializer()\n                if (classNames) {\n                  classNames.replaceWithText(\n                    `\"${applyPrefix(\n                      classNames.getText()?.replace(/\"/g, \"\"),\n                      config.tailwind.prefix\n                    )}\"`\n                  )\n                }\n              }\n            }\n          })\n      }\n    }\n  })\n\n  return sourceFile\n}\n\nexport function applyPrefix(input: string, prefix: string = \"\") {\n  const classNames = input.split(\" \")\n  const prefixed: string[] = []\n  for (let className of classNames) {\n    const [variant, value, modifier] = splitClassName(className)\n    if (variant) {\n      modifier\n        ? prefixed.push(`${variant}:${prefix}${value}/${modifier}`)\n        : prefixed.push(`${variant}:${prefix}${value}`)\n    } else {\n      modifier\n        ? prefixed.push(`${prefix}${value}/${modifier}`)\n        : prefixed.push(`${prefix}${value}`)\n    }\n  }\n  return prefixed.join(\" \")\n}\n\nexport function applyPrefixesCss(css: string, prefix: string) {\n  const lines = css.split(\"\\n\")\n  for (let line of lines) {\n    if (line.includes(\"@apply\")) {\n      const originalTWCls = line.replace(\"@apply\", \"\").trim()\n      const prefixedTwCls = applyPrefix(originalTWCls, prefix)\n      css = css.replace(originalTWCls, prefixedTwCls)\n    }\n  }\n  return css\n}\n",
    "dependencies": [
      "@/src/utils/transformers",
      "ts-morph",
      "./transform-css-vars"
    ]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/packages/cli/tsup.config.ts": {
    "source": "import { defineConfig } from \"tsup\"\n\nexport default defineConfig({\n  clean: true,\n  dts: true,\n  entry: [\"src/index.ts\"],\n  format: [\"esm\"],\n  sourcemap: true,\n  minify: true,\n  target: \"esnext\",\n  outDir: \"dist\",\n})\n",
    "dependencies": ["tsup"]
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/postcss.config.cjs": {
    "source": "module.exports = {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n",
    "dependencies": []
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/prettier.config.cjs": {
    "source": "/** @type {import('prettier').Config} */\nmodule.exports = {\n  endOfLine: \"lf\",\n  semi: false,\n  singleQuote: false,\n  tabWidth: 2,\n  trailingComma: \"es5\",\n  importOrder: [\n    \"^(react/(.*)$)|^(react$)\",\n    \"^(next/(.*)$)|^(next$)\",\n    \"<THIRD_PARTY_MODULES>\",\n    \"\",\n    \"^types$\",\n    \"^@/types/(.*)$\",\n    \"^@/config/(.*)$\",\n    \"^@/lib/(.*)$\",\n    \"^@/hooks/(.*)$\",\n    \"^@/components/ui/(.*)$\",\n    \"^@/components/(.*)$\",\n    \"^@/registry/(.*)$\",\n    \"^@/styles/(.*)$\",\n    \"^@/app/(.*)$\",\n    \"\",\n    \"^[./]\",\n  ],\n  importOrderSeparation: false,\n  importOrderSortSpecifiers: true,\n  importOrderBuiltinModulesToTop: true,\n  importOrderParserPlugins: [\"typescript\", \"jsx\", \"decorators-legacy\"],\n  importOrderMergeDuplicateImports: true,\n  importOrderCombineTypeAndValueImports: true,\n  plugins: [\n    \"@ianvs/prettier-plugin-sort-imports\",\n    \"prettier-plugin-tailwindcss\",\n  ],\n}\n",
    "dependencies": []
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/tailwind.config.cjs": {
    "source": "const { fontFamily } = require(\"tailwindcss/defaultTheme\")\n\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  darkMode: [\"class\"],\n  content: [\"app/**/*.{ts,tsx}\", \"components/**/*.{ts,tsx}\"],\n  theme: {\n    container: {\n      center: true,\n      padding: \"2rem\",\n      screens: {\n        \"2xl\": \"1400px\",\n      },\n    },\n    extend: {\n      colors: {\n        border: \"hsl(var(--border))\",\n        input: \"hsl(var(--input))\",\n        ring: \"hsl(var(--ring))\",\n        foreground: \"hsl(var(--foreground))\",\n        primary: {\n          DEFAULT: \"hsl(var(--primary))\",\n          foreground: \"hsl(var(--primary-foreground))\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary))\",\n          foreground: \"hsl(var(--secondary-foreground))\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive) / <alpha-value>)\",\n          foreground: \"hsl(var(--destructive-foreground) / <alpha-value>)\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted))\",\n          foreground: \"hsl(var(--muted-foreground))\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent))\",\n          foreground: \"hsl(var(--accent-foreground))\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover))\",\n          foreground: \"hsl(var(--popover-foreground))\",\n        },\n        card: {\n          DEFAULT: \"hsl(var(--card))\",\n          foreground: \"hsl(var(--card-foreground))\",\n        },\n        background: {\n          100: \"hsl(var(--ds-background-100))\",\n          200: \"hsl(var(--ds-background-200))\",\n        },\n        contrast: \"hsl(var(--ds-contrast-fg))\",\n        success: {\n          DEFAULT: \"var(--geist-success)\",\n          lighter: \"var(--geist-success-lighter)\",\n          light: \"var(--geist-success-light)\",\n          dark: \"var(--geist-success-dark)\",\n        },\n        accents: {\n          1: \"var(--accents-1)\",\n          2: \"var(--accents-2)\",\n          3: \"var(--accents-3)\",\n          4: \"var(--accents-4)\",\n          5: \"var(--accents-5)\",\n          6: \"var(--accents-6)\",\n          7: \"var(--accents-7)\",\n          8: \"var(--accents-8)\",\n        },\n        gray: {\n          100: \"hsl(var(--ds-gray-100))\",\n          200: \"hsl(var(--ds-gray-200))\",\n          300: \"hsl(var(--ds-gray-300))\",\n          400: \"hsl(var(--ds-gray-400))\",\n          500: \"hsl(var(--ds-gray-500))\",\n          600: \"hsl(var(--ds-gray-600))\",\n          700: \"hsl(var(--ds-gray-700))\",\n          800: \"hsl(var(--ds-gray-800))\",\n          900: \"hsl(var(--ds-gray-900))\",\n          1000: \"hsl(var(--ds-gray-1000))\",\n        },\n        \"gray-alpha\": {\n          100: \"var(--ds-gray-alpha-100)\",\n          200: \"var(--ds-gray-alpha-200)\",\n          300: \"var(--ds-gray-alpha-300)\",\n          400: \"var(--ds-gray-alpha-400)\",\n          500: \"var(--ds-gray-alpha-500)\",\n          600: \"var(--ds-gray-alpha-600)\",\n          700: \"var(--ds-gray-alpha-700)\",\n          800: \"var(--ds-gray-alpha-800)\",\n          900: \"var(--ds-gray-alpha-900)\",\n          1000: \"var(--ds-gray-alpha-1000)\",\n        },\n        blue: {\n          100: \"hsl(var(--ds-blue-100))\",\n          200: \"hsl(var(--ds-blue-200))\",\n          300: \"hsl(var(--ds-blue-300))\",\n          400: \"hsl(var(--ds-blue-400))\",\n          500: \"hsl(var(--ds-blue-500))\",\n          600: \"hsl(var(--ds-blue-600))\",\n          700: \"hsl(var(--ds-blue-700))\",\n          800: \"hsl(var(--ds-blue-800))\",\n          900: \"hsl(var(--ds-blue-900))\",\n          1000: \"hsl(var(--ds-blue-1000))\",\n        },\n        red: {\n          100: \"hsl(var(--ds-red-100))\",\n          200: \"hsl(var(--ds-red-200))\",\n          300: \"hsl(var(--ds-red-300))\",\n          400: \"hsl(var(--ds-red-400))\",\n          500: \"hsl(var(--ds-red-500))\",\n          600: \"hsl(var(--ds-red-600))\",\n          700: \"hsl(var(--ds-red-700))\",\n          800: \"hsl(var(--ds-red-800))\",\n          900: \"hsl(var(--ds-red-900))\",\n          1000: \"hsl(var(--ds-red-1000))\",\n        },\n        amber: {\n          100: \"hsl(var(--ds-amber-100))\",\n          200: \"hsl(var(--ds-amber-200))\",\n          300: \"hsl(var(--ds-amber-300))\",\n          400: \"hsl(var(--ds-amber-400))\",\n          500: \"hsl(var(--ds-amber-500))\",\n          600: \"hsl(var(--ds-amber-600))\",\n          700: \"hsl(var(--ds-amber-700))\",\n          800: \"hsl(var(--ds-amber-800))\",\n          900: \"hsl(var(--ds-amber-900))\",\n          1000: \"hsl(var(--ds-amber-1000))\",\n        },\n        green: {\n          100: \"hsl(var(--ds-green-100))\",\n          200: \"hsl(var(--ds-green-200))\",\n          300: \"hsl(var(--ds-green-300))\",\n          400: \"hsl(var(--ds-green-400))\",\n          500: \"hsl(var(--ds-green-500))\",\n          600: \"hsl(var(--ds-green-600))\",\n          700: \"hsl(var(--ds-green-700))\",\n          800: \"hsl(var(--ds-green-800))\",\n          900: \"hsl(var(--ds-green-900))\",\n          1000: \"hsl(var(--ds-green-1000))\",\n        },\n        teal: {\n          100: \"hsl(var(--ds-teal-100))\",\n          200: \"hsl(var(--ds-teal-200))\",\n          300: \"hsl(var(--ds-teal-300))\",\n          400: \"hsl(var(--ds-teal-400))\",\n          500: \"hsl(var(--ds-teal-500))\",\n          600: \"hsl(var(--ds-teal-600))\",\n          700: \"hsl(var(--ds-teal-700))\",\n          800: \"hsl(var(--ds-teal-800))\",\n          900: \"hsl(var(--ds-teal-900))\",\n          1000: \"hsl(var(--ds-teal-1000))\",\n        },\n        purple: {\n          100: \"hsl(var(--ds-purple-100))\",\n          200: \"hsl(var(--ds-purple-200))\",\n          300: \"hsl(var(--ds-purple-300))\",\n          400: \"hsl(var(--ds-purple-400))\",\n          500: \"hsl(var(--ds-purple-500))\",\n          600: \"hsl(var(--ds-purple-600))\",\n          700: \"hsl(var(--ds-purple-700))\",\n          800: \"hsl(var(--ds-purple-800))\",\n          900: \"hsl(var(--ds-purple-900))\",\n          1000: \"hsl(var(--ds-purple-1000))\",\n        },\n        pink: {\n          100: \"hsl(var(--ds-pink-100))\",\n          200: \"hsl(var(--ds-pink-200))\",\n          300: \"hsl(var(--ds-pink-300))\",\n          400: \"hsl(var(--ds-pink-400))\",\n          500: \"hsl(var(--ds-pink-500))\",\n          600: \"hsl(var(--ds-pink-600))\",\n          700: \"hsl(var(--ds-pink-700))\",\n          800: \"hsl(var(--ds-pink-800))\",\n          900: \"hsl(var(--ds-pink-900))\",\n          1000: \"hsl(var(--ds-pink-1000))\",\n        },\n      },\n\n      boxShadow: {\n        inner: \"var(--ds-shadow-inset)\",\n        border: \"var(--ds-shadow-border)\",\n        small: \"var(--ds-shadow-small)\",\n        [\"border-small\"]: \"var(--ds-shadow-border-small)\",\n        [\"input-ring\"]: \"var(--ds-shadow-input-ring)\",\n        medium: \"var(--ds-shadow-medium)\",\n        large: \"var(--ds-shadow-large)\",\n        [\"border-large\"]: \"var(--ds-shadow-border-large)\",\n        tooltip: \"var(--ds-shadow-tooltip)\",\n        menu: \"var(--ds-shadow-menu)\",\n        modal: \"var(--ds-shadow-modal)\",\n        fullscreen: \"var(--ds-shadow-fullscreen)\",\n      },\n\n      fontFamily: {\n        sans: [\"var(--font-geist-sans)\", ...fontFamily.sans],\n        // mono: [\"var(--font-mono)\", ...fontFamily.mono],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: \"0\" },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: \"0\" },\n        },\n        \"caret-blink\": {\n          \"0%,70%,100%\": { opacity: \"1\" },\n          \"20%,50%\": { opacity: \"0\" },\n        },\n        \"spinner-spin\": {\n          \"0%\": { opacity: \"1\" },\n          \"100%\": { opacity: \"0.15\" },\n        },\n        \"copy-button-fadeIn\": {\n          \"0%\": { opacity: \"0\", scale: \"0.5\" },\n          \"100%\": { opacity: \"1\", scale: \"1\" },\n        },\n        \"copy-button-fadeOut\": {\n          \"0%\": { opacity: \"1\", scale: \"1\" },\n          \"100%\": { opacity: \"0\", scale: \"0.5\" },\n        },\n        \"loading-dots-blink\": {\n          \"0%, 100%\": { opacity: \"0.2\" },\n          \"20%\": { opacity: \"1\" },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n        \"caret-blink\": \"caret-blink 1.25s ease-out infinite\",\n        \"spinner-spin\": \"spinner-spin 1.2s linear infinite\",\n        \"copy-button-fadeIn\": \"copy-button-fadeIn 150ms ease-out forwards\",\n        \"copy-button-fadeOut\": \"copy-button-fadeOut 150ms ease-out forwards\",\n        \"loading-dots-blink\": \"loading-dots-blink 1400ms both infinite\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\")],\n}\n",
    "dependencies": []
  },
  "/Users/matheus/Desktop/pushinprod/repos/vercel-ui/vitest.config.ts": {
    "source": "import tsconfigPaths from \"vite-tsconfig-paths\"\nimport { defineConfig } from \"vitest/config\"\n\nexport default defineConfig({\n  test: {\n    // ...\n  },\n  plugins: [tsconfigPaths()],\n})\n",
    "dependencies": ["vite-tsconfig-paths", "vitest/config"]
  }
}
